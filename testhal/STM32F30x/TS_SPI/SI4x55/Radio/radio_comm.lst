                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.2.0 #8008 (Jul  6 2012) (MINGW32)
                              4 ; This file was generated Sat Apr 06 16:03:13 2013
                              5 ;--------------------------------------------------------
                              6 	.module radio_comm
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _radio_hal_SpiReadData
                             13 	.globl _radio_hal_SpiWriteData
                             14 	.globl _radio_hal_SpiReadByte
                             15 	.globl _radio_hal_SpiWriteByte
                             16 	.globl _radio_hal_SetNsel
                             17 	.globl _radio_hal_ClearNsel
                             18 	.globl _SPI0EN
                             19 	.globl _TXBMT0
                             20 	.globl _NSS0MD0
                             21 	.globl _NSS0MD1
                             22 	.globl _RXOVRN0
                             23 	.globl _MODF0
                             24 	.globl _WCOL0
                             25 	.globl _SPIF0
                             26 	.globl _AD0CM0
                             27 	.globl _AD0CM1
                             28 	.globl _AD0CM2
                             29 	.globl _AD0WINT
                             30 	.globl _AD0BUSY
                             31 	.globl _AD0INT
                             32 	.globl _BURSTEN
                             33 	.globl _AD0EN
                             34 	.globl _CCF0
                             35 	.globl _CCF1
                             36 	.globl _CCF2
                             37 	.globl _CCF3
                             38 	.globl _CCF4
                             39 	.globl _CCF5
                             40 	.globl _CR
                             41 	.globl _CF
                             42 	.globl _P
                             43 	.globl _F1
                             44 	.globl _OV
                             45 	.globl _RS0
                             46 	.globl _RS1
                             47 	.globl _F0
                             48 	.globl _AC
                             49 	.globl _CY
                             50 	.globl _T2XCLK
                             51 	.globl _T2RCLK
                             52 	.globl _TR2
                             53 	.globl _T2SPLIT
                             54 	.globl _TF2CEN
                             55 	.globl _TF2LEN
                             56 	.globl _TF2L
                             57 	.globl _TF2H
                             58 	.globl _SI
                             59 	.globl _ACK
                             60 	.globl _ARBLOST
                             61 	.globl _ACKRQ
                             62 	.globl _STO
                             63 	.globl _STA
                             64 	.globl _TXMODE
                             65 	.globl _MASTER
                             66 	.globl _PX0
                             67 	.globl _PT0
                             68 	.globl _PX1
                             69 	.globl _PT1
                             70 	.globl _PS0
                             71 	.globl _PT2
                             72 	.globl _PSPI0
                             73 	.globl _SPI1EN
                             74 	.globl _TXBMT1
                             75 	.globl _NSS1MD0
                             76 	.globl _NSS1MD1
                             77 	.globl _RXOVRN1
                             78 	.globl _MODF1
                             79 	.globl _WCOL1
                             80 	.globl _SPIF1
                             81 	.globl _EX0
                             82 	.globl _ET0
                             83 	.globl _EX1
                             84 	.globl _ET1
                             85 	.globl _ES0
                             86 	.globl _ET2
                             87 	.globl _ESPI0
                             88 	.globl _EA
                             89 	.globl _RI0
                             90 	.globl _TI0
                             91 	.globl _RB80
                             92 	.globl _TB80
                             93 	.globl _REN0
                             94 	.globl _MCE0
                             95 	.globl _S0MODE
                             96 	.globl _IT0
                             97 	.globl _IE0
                             98 	.globl _IT1
                             99 	.globl _IE1
                            100 	.globl _TR0
                            101 	.globl _TF0
                            102 	.globl _TR1
                            103 	.globl _TF1
                            104 	.globl _PCA0CP4
                            105 	.globl _PCA0CP0
                            106 	.globl _PCA0
                            107 	.globl _PCA0CP3
                            108 	.globl _PCA0CP2
                            109 	.globl _PCA0CP1
                            110 	.globl _PCA0CP5
                            111 	.globl _TMR2
                            112 	.globl _TMR2RL
                            113 	.globl _ADC0LT
                            114 	.globl _ADC0GT
                            115 	.globl _ADC0
                            116 	.globl _TMR3
                            117 	.globl _TMR3RL
                            118 	.globl _TOFF
                            119 	.globl _DP
                            120 	.globl _VDM0CN
                            121 	.globl _PCA0CPH4
                            122 	.globl _PCA0CPL4
                            123 	.globl _PCA0CPH0
                            124 	.globl _PCA0CPL0
                            125 	.globl _PCA0H
                            126 	.globl _PCA0L
                            127 	.globl _SPI0CN
                            128 	.globl _EIP2
                            129 	.globl _EIP1
                            130 	.globl _SMB0ADM
                            131 	.globl _SMB0ADR
                            132 	.globl _P2MDIN
                            133 	.globl _P1MDIN
                            134 	.globl _P0MDIN
                            135 	.globl _B
                            136 	.globl _RSTSRC
                            137 	.globl _PCA0CPH3
                            138 	.globl _PCA0CPL3
                            139 	.globl _PCA0CPH2
                            140 	.globl _PCA0CPL2
                            141 	.globl _PCA0CPH1
                            142 	.globl _PCA0CPL1
                            143 	.globl _ADC0CN
                            144 	.globl _EIE2
                            145 	.globl _EIE1
                            146 	.globl _FLWR
                            147 	.globl _IT01CF
                            148 	.globl _XBR2
                            149 	.globl _XBR1
                            150 	.globl _XBR0
                            151 	.globl _ACC
                            152 	.globl _PCA0PWM
                            153 	.globl _PCA0CPM4
                            154 	.globl _PCA0CPM3
                            155 	.globl _PCA0CPM2
                            156 	.globl _PCA0CPM1
                            157 	.globl _PCA0CPM0
                            158 	.globl _PCA0MD
                            159 	.globl _PCA0CN
                            160 	.globl _P0MAT
                            161 	.globl _P2SKIP
                            162 	.globl _P1SKIP
                            163 	.globl _P0SKIP
                            164 	.globl _PCA0CPH5
                            165 	.globl _PCA0CPL5
                            166 	.globl _REF0CN
                            167 	.globl _PSW
                            168 	.globl _P1MAT
                            169 	.globl _PCA0CPM5
                            170 	.globl _TMR2H
                            171 	.globl _TMR2L
                            172 	.globl _TMR2RLH
                            173 	.globl _TMR2RLL
                            174 	.globl _REG0CN
                            175 	.globl _TMR2CN
                            176 	.globl _P0MASK
                            177 	.globl _ADC0LTH
                            178 	.globl _ADC0LTL
                            179 	.globl _ADC0GTH
                            180 	.globl _ADC0GTL
                            181 	.globl _SMB0DAT
                            182 	.globl _SMB0CF
                            183 	.globl _SMB0CN
                            184 	.globl _P1MASK
                            185 	.globl _ADC0H
                            186 	.globl _ADC0L
                            187 	.globl _ADC0TK
                            188 	.globl _ADC0CF
                            189 	.globl _ADC0MX
                            190 	.globl _ADC0PWR
                            191 	.globl _ADC0AC
                            192 	.globl _IREF0CN
                            193 	.globl _IP
                            194 	.globl _FLKEY
                            195 	.globl _FLSCL
                            196 	.globl _PMU0CF
                            197 	.globl _OSCICL
                            198 	.globl _OSCICN
                            199 	.globl _OSCXCN
                            200 	.globl _SPI1CN
                            201 	.globl _ONESHOT
                            202 	.globl _EMI0TC
                            203 	.globl _RTC0KEY
                            204 	.globl _RTC0DAT
                            205 	.globl _RTC0ADR
                            206 	.globl _EMI0CF
                            207 	.globl _EMI0CN
                            208 	.globl _CLKSEL
                            209 	.globl _IE
                            210 	.globl _SFRPAGE
                            211 	.globl _P2DRV
                            212 	.globl _P2MDOUT
                            213 	.globl _P1DRV
                            214 	.globl _P1MDOUT
                            215 	.globl _P0DRV
                            216 	.globl _P0MDOUT
                            217 	.globl _SPI0DAT
                            218 	.globl _SPI0CKR
                            219 	.globl _SPI0CFG
                            220 	.globl _P2
                            221 	.globl _CPT0MX
                            222 	.globl _CPT1MX
                            223 	.globl _CPT0MD
                            224 	.globl _CPT1MD
                            225 	.globl _CPT0CN
                            226 	.globl _CPT1CN
                            227 	.globl _SBUF0
                            228 	.globl _SCON0
                            229 	.globl _CRC0CNT
                            230 	.globl _DC0CN
                            231 	.globl _CRC0AUTO
                            232 	.globl _DC0CF
                            233 	.globl _TMR3H
                            234 	.globl _CRC0FLIP
                            235 	.globl _TMR3L
                            236 	.globl _CRC0IN
                            237 	.globl _TMR3RLH
                            238 	.globl _CRC0CN
                            239 	.globl _TMR3RLL
                            240 	.globl _CRC0DAT
                            241 	.globl _TMR3CN
                            242 	.globl _P1
                            243 	.globl _PSCTL
                            244 	.globl _CKCON
                            245 	.globl _TH1
                            246 	.globl _TH0
                            247 	.globl _TL1
                            248 	.globl _TL0
                            249 	.globl _TMOD
                            250 	.globl _TCON
                            251 	.globl _PCON
                            252 	.globl _TOFFH
                            253 	.globl _SPI1DAT
                            254 	.globl _TOFFL
                            255 	.globl _SPI1CKR
                            256 	.globl _SPI1CFG
                            257 	.globl _DPH
                            258 	.globl _DPL
                            259 	.globl _SP
                            260 	.globl _P0
                            261 	.globl _radio_comm_WriteData_PARM_4
                            262 	.globl _radio_comm_WriteData_PARM_3
                            263 	.globl _radio_comm_ReadData_PARM_4
                            264 	.globl _radio_comm_ReadData_PARM_3
                            265 	.globl _radio_comm_SendCmdGetResp_PARM_4
                            266 	.globl _radio_comm_SendCmdGetResp_PARM_3
                            267 	.globl _radio_comm_SendCmdGetResp_PARM_2
                            268 	.globl _radio_comm_SendCmd_PARM_2
                            269 	.globl _radio_comm_GetResp_PARM_2
                            270 	.globl _radio_comm_WriteData_PARM_2
                            271 	.globl _radio_comm_ReadData_PARM_2
                            272 	.globl _ctsWentHigh
                            273 	.globl _radio_comm_GetResp
                            274 	.globl _radio_comm_PollCTS
                            275 	.globl _radio_comm_SendCmd
                            276 	.globl _radio_comm_SendCmdGetResp
                            277 	.globl _radio_comm_ReadData
                            278 	.globl _radio_comm_WriteData
                            279 ;--------------------------------------------------------
                            280 ; special function registers
                            281 ;--------------------------------------------------------
                            282 	.area RSEG    (ABS,DATA)
   0000                     283 	.org 0x0000
                    0080    284 G$P0$0$0 == 0x0080
                    0080    285 _P0	=	0x0080
                    0081    286 G$SP$0$0 == 0x0081
                    0081    287 _SP	=	0x0081
                    0082    288 G$DPL$0$0 == 0x0082
                    0082    289 _DPL	=	0x0082
                    0083    290 G$DPH$0$0 == 0x0083
                    0083    291 _DPH	=	0x0083
                    0084    292 G$SPI1CFG$0$0 == 0x0084
                    0084    293 _SPI1CFG	=	0x0084
                    0085    294 G$SPI1CKR$0$0 == 0x0085
                    0085    295 _SPI1CKR	=	0x0085
                    0085    296 G$TOFFL$0$0 == 0x0085
                    0085    297 _TOFFL	=	0x0085
                    0086    298 G$SPI1DAT$0$0 == 0x0086
                    0086    299 _SPI1DAT	=	0x0086
                    0086    300 G$TOFFH$0$0 == 0x0086
                    0086    301 _TOFFH	=	0x0086
                    0087    302 G$PCON$0$0 == 0x0087
                    0087    303 _PCON	=	0x0087
                    0088    304 G$TCON$0$0 == 0x0088
                    0088    305 _TCON	=	0x0088
                    0089    306 G$TMOD$0$0 == 0x0089
                    0089    307 _TMOD	=	0x0089
                    008A    308 G$TL0$0$0 == 0x008a
                    008A    309 _TL0	=	0x008a
                    008B    310 G$TL1$0$0 == 0x008b
                    008B    311 _TL1	=	0x008b
                    008C    312 G$TH0$0$0 == 0x008c
                    008C    313 _TH0	=	0x008c
                    008D    314 G$TH1$0$0 == 0x008d
                    008D    315 _TH1	=	0x008d
                    008E    316 G$CKCON$0$0 == 0x008e
                    008E    317 _CKCON	=	0x008e
                    008F    318 G$PSCTL$0$0 == 0x008f
                    008F    319 _PSCTL	=	0x008f
                    0090    320 G$P1$0$0 == 0x0090
                    0090    321 _P1	=	0x0090
                    0091    322 G$TMR3CN$0$0 == 0x0091
                    0091    323 _TMR3CN	=	0x0091
                    0091    324 G$CRC0DAT$0$0 == 0x0091
                    0091    325 _CRC0DAT	=	0x0091
                    0092    326 G$TMR3RLL$0$0 == 0x0092
                    0092    327 _TMR3RLL	=	0x0092
                    0092    328 G$CRC0CN$0$0 == 0x0092
                    0092    329 _CRC0CN	=	0x0092
                    0093    330 G$TMR3RLH$0$0 == 0x0093
                    0093    331 _TMR3RLH	=	0x0093
                    0093    332 G$CRC0IN$0$0 == 0x0093
                    0093    333 _CRC0IN	=	0x0093
                    0094    334 G$TMR3L$0$0 == 0x0094
                    0094    335 _TMR3L	=	0x0094
                    0095    336 G$CRC0FLIP$0$0 == 0x0095
                    0095    337 _CRC0FLIP	=	0x0095
                    0095    338 G$TMR3H$0$0 == 0x0095
                    0095    339 _TMR3H	=	0x0095
                    0096    340 G$DC0CF$0$0 == 0x0096
                    0096    341 _DC0CF	=	0x0096
                    0096    342 G$CRC0AUTO$0$0 == 0x0096
                    0096    343 _CRC0AUTO	=	0x0096
                    0097    344 G$DC0CN$0$0 == 0x0097
                    0097    345 _DC0CN	=	0x0097
                    0097    346 G$CRC0CNT$0$0 == 0x0097
                    0097    347 _CRC0CNT	=	0x0097
                    0098    348 G$SCON0$0$0 == 0x0098
                    0098    349 _SCON0	=	0x0098
                    0099    350 G$SBUF0$0$0 == 0x0099
                    0099    351 _SBUF0	=	0x0099
                    009A    352 G$CPT1CN$0$0 == 0x009a
                    009A    353 _CPT1CN	=	0x009a
                    009B    354 G$CPT0CN$0$0 == 0x009b
                    009B    355 _CPT0CN	=	0x009b
                    009C    356 G$CPT1MD$0$0 == 0x009c
                    009C    357 _CPT1MD	=	0x009c
                    009D    358 G$CPT0MD$0$0 == 0x009d
                    009D    359 _CPT0MD	=	0x009d
                    009E    360 G$CPT1MX$0$0 == 0x009e
                    009E    361 _CPT1MX	=	0x009e
                    009F    362 G$CPT0MX$0$0 == 0x009f
                    009F    363 _CPT0MX	=	0x009f
                    00A0    364 G$P2$0$0 == 0x00a0
                    00A0    365 _P2	=	0x00a0
                    00A1    366 G$SPI0CFG$0$0 == 0x00a1
                    00A1    367 _SPI0CFG	=	0x00a1
                    00A2    368 G$SPI0CKR$0$0 == 0x00a2
                    00A2    369 _SPI0CKR	=	0x00a2
                    00A3    370 G$SPI0DAT$0$0 == 0x00a3
                    00A3    371 _SPI0DAT	=	0x00a3
                    00A4    372 G$P0MDOUT$0$0 == 0x00a4
                    00A4    373 _P0MDOUT	=	0x00a4
                    00A4    374 G$P0DRV$0$0 == 0x00a4
                    00A4    375 _P0DRV	=	0x00a4
                    00A5    376 G$P1MDOUT$0$0 == 0x00a5
                    00A5    377 _P1MDOUT	=	0x00a5
                    00A5    378 G$P1DRV$0$0 == 0x00a5
                    00A5    379 _P1DRV	=	0x00a5
                    00A6    380 G$P2MDOUT$0$0 == 0x00a6
                    00A6    381 _P2MDOUT	=	0x00a6
                    00A6    382 G$P2DRV$0$0 == 0x00a6
                    00A6    383 _P2DRV	=	0x00a6
                    00A7    384 G$SFRPAGE$0$0 == 0x00a7
                    00A7    385 _SFRPAGE	=	0x00a7
                    00A8    386 G$IE$0$0 == 0x00a8
                    00A8    387 _IE	=	0x00a8
                    00A9    388 G$CLKSEL$0$0 == 0x00a9
                    00A9    389 _CLKSEL	=	0x00a9
                    00AA    390 G$EMI0CN$0$0 == 0x00aa
                    00AA    391 _EMI0CN	=	0x00aa
                    00AB    392 G$EMI0CF$0$0 == 0x00ab
                    00AB    393 _EMI0CF	=	0x00ab
                    00AC    394 G$RTC0ADR$0$0 == 0x00ac
                    00AC    395 _RTC0ADR	=	0x00ac
                    00AD    396 G$RTC0DAT$0$0 == 0x00ad
                    00AD    397 _RTC0DAT	=	0x00ad
                    00AE    398 G$RTC0KEY$0$0 == 0x00ae
                    00AE    399 _RTC0KEY	=	0x00ae
                    00AF    400 G$EMI0TC$0$0 == 0x00af
                    00AF    401 _EMI0TC	=	0x00af
                    00AF    402 G$ONESHOT$0$0 == 0x00af
                    00AF    403 _ONESHOT	=	0x00af
                    00B0    404 G$SPI1CN$0$0 == 0x00b0
                    00B0    405 _SPI1CN	=	0x00b0
                    00B1    406 G$OSCXCN$0$0 == 0x00b1
                    00B1    407 _OSCXCN	=	0x00b1
                    00B2    408 G$OSCICN$0$0 == 0x00b2
                    00B2    409 _OSCICN	=	0x00b2
                    00B3    410 G$OSCICL$0$0 == 0x00b3
                    00B3    411 _OSCICL	=	0x00b3
                    00B5    412 G$PMU0CF$0$0 == 0x00b5
                    00B5    413 _PMU0CF	=	0x00b5
                    00B6    414 G$FLSCL$0$0 == 0x00b6
                    00B6    415 _FLSCL	=	0x00b6
                    00B7    416 G$FLKEY$0$0 == 0x00b7
                    00B7    417 _FLKEY	=	0x00b7
                    00B8    418 G$IP$0$0 == 0x00b8
                    00B8    419 _IP	=	0x00b8
                    00B9    420 G$IREF0CN$0$0 == 0x00b9
                    00B9    421 _IREF0CN	=	0x00b9
                    00BA    422 G$ADC0AC$0$0 == 0x00ba
                    00BA    423 _ADC0AC	=	0x00ba
                    00BA    424 G$ADC0PWR$0$0 == 0x00ba
                    00BA    425 _ADC0PWR	=	0x00ba
                    00BB    426 G$ADC0MX$0$0 == 0x00bb
                    00BB    427 _ADC0MX	=	0x00bb
                    00BC    428 G$ADC0CF$0$0 == 0x00bc
                    00BC    429 _ADC0CF	=	0x00bc
                    00BD    430 G$ADC0TK$0$0 == 0x00bd
                    00BD    431 _ADC0TK	=	0x00bd
                    00BD    432 G$ADC0L$0$0 == 0x00bd
                    00BD    433 _ADC0L	=	0x00bd
                    00BE    434 G$ADC0H$0$0 == 0x00be
                    00BE    435 _ADC0H	=	0x00be
                    00BF    436 G$P1MASK$0$0 == 0x00bf
                    00BF    437 _P1MASK	=	0x00bf
                    00C0    438 G$SMB0CN$0$0 == 0x00c0
                    00C0    439 _SMB0CN	=	0x00c0
                    00C1    440 G$SMB0CF$0$0 == 0x00c1
                    00C1    441 _SMB0CF	=	0x00c1
                    00C2    442 G$SMB0DAT$0$0 == 0x00c2
                    00C2    443 _SMB0DAT	=	0x00c2
                    00C3    444 G$ADC0GTL$0$0 == 0x00c3
                    00C3    445 _ADC0GTL	=	0x00c3
                    00C4    446 G$ADC0GTH$0$0 == 0x00c4
                    00C4    447 _ADC0GTH	=	0x00c4
                    00C5    448 G$ADC0LTL$0$0 == 0x00c5
                    00C5    449 _ADC0LTL	=	0x00c5
                    00C6    450 G$ADC0LTH$0$0 == 0x00c6
                    00C6    451 _ADC0LTH	=	0x00c6
                    00C7    452 G$P0MASK$0$0 == 0x00c7
                    00C7    453 _P0MASK	=	0x00c7
                    00C8    454 G$TMR2CN$0$0 == 0x00c8
                    00C8    455 _TMR2CN	=	0x00c8
                    00C9    456 G$REG0CN$0$0 == 0x00c9
                    00C9    457 _REG0CN	=	0x00c9
                    00CA    458 G$TMR2RLL$0$0 == 0x00ca
                    00CA    459 _TMR2RLL	=	0x00ca
                    00CB    460 G$TMR2RLH$0$0 == 0x00cb
                    00CB    461 _TMR2RLH	=	0x00cb
                    00CC    462 G$TMR2L$0$0 == 0x00cc
                    00CC    463 _TMR2L	=	0x00cc
                    00CD    464 G$TMR2H$0$0 == 0x00cd
                    00CD    465 _TMR2H	=	0x00cd
                    00CE    466 G$PCA0CPM5$0$0 == 0x00ce
                    00CE    467 _PCA0CPM5	=	0x00ce
                    00CF    468 G$P1MAT$0$0 == 0x00cf
                    00CF    469 _P1MAT	=	0x00cf
                    00D0    470 G$PSW$0$0 == 0x00d0
                    00D0    471 _PSW	=	0x00d0
                    00D1    472 G$REF0CN$0$0 == 0x00d1
                    00D1    473 _REF0CN	=	0x00d1
                    00D2    474 G$PCA0CPL5$0$0 == 0x00d2
                    00D2    475 _PCA0CPL5	=	0x00d2
                    00D3    476 G$PCA0CPH5$0$0 == 0x00d3
                    00D3    477 _PCA0CPH5	=	0x00d3
                    00D4    478 G$P0SKIP$0$0 == 0x00d4
                    00D4    479 _P0SKIP	=	0x00d4
                    00D5    480 G$P1SKIP$0$0 == 0x00d5
                    00D5    481 _P1SKIP	=	0x00d5
                    00D6    482 G$P2SKIP$0$0 == 0x00d6
                    00D6    483 _P2SKIP	=	0x00d6
                    00D7    484 G$P0MAT$0$0 == 0x00d7
                    00D7    485 _P0MAT	=	0x00d7
                    00D8    486 G$PCA0CN$0$0 == 0x00d8
                    00D8    487 _PCA0CN	=	0x00d8
                    00D9    488 G$PCA0MD$0$0 == 0x00d9
                    00D9    489 _PCA0MD	=	0x00d9
                    00DA    490 G$PCA0CPM0$0$0 == 0x00da
                    00DA    491 _PCA0CPM0	=	0x00da
                    00DB    492 G$PCA0CPM1$0$0 == 0x00db
                    00DB    493 _PCA0CPM1	=	0x00db
                    00DC    494 G$PCA0CPM2$0$0 == 0x00dc
                    00DC    495 _PCA0CPM2	=	0x00dc
                    00DD    496 G$PCA0CPM3$0$0 == 0x00dd
                    00DD    497 _PCA0CPM3	=	0x00dd
                    00DE    498 G$PCA0CPM4$0$0 == 0x00de
                    00DE    499 _PCA0CPM4	=	0x00de
                    00DF    500 G$PCA0PWM$0$0 == 0x00df
                    00DF    501 _PCA0PWM	=	0x00df
                    00E0    502 G$ACC$0$0 == 0x00e0
                    00E0    503 _ACC	=	0x00e0
                    00E1    504 G$XBR0$0$0 == 0x00e1
                    00E1    505 _XBR0	=	0x00e1
                    00E2    506 G$XBR1$0$0 == 0x00e2
                    00E2    507 _XBR1	=	0x00e2
                    00E3    508 G$XBR2$0$0 == 0x00e3
                    00E3    509 _XBR2	=	0x00e3
                    00E4    510 G$IT01CF$0$0 == 0x00e4
                    00E4    511 _IT01CF	=	0x00e4
                    00E5    512 G$FLWR$0$0 == 0x00e5
                    00E5    513 _FLWR	=	0x00e5
                    00E6    514 G$EIE1$0$0 == 0x00e6
                    00E6    515 _EIE1	=	0x00e6
                    00E7    516 G$EIE2$0$0 == 0x00e7
                    00E7    517 _EIE2	=	0x00e7
                    00E8    518 G$ADC0CN$0$0 == 0x00e8
                    00E8    519 _ADC0CN	=	0x00e8
                    00E9    520 G$PCA0CPL1$0$0 == 0x00e9
                    00E9    521 _PCA0CPL1	=	0x00e9
                    00EA    522 G$PCA0CPH1$0$0 == 0x00ea
                    00EA    523 _PCA0CPH1	=	0x00ea
                    00EB    524 G$PCA0CPL2$0$0 == 0x00eb
                    00EB    525 _PCA0CPL2	=	0x00eb
                    00EC    526 G$PCA0CPH2$0$0 == 0x00ec
                    00EC    527 _PCA0CPH2	=	0x00ec
                    00ED    528 G$PCA0CPL3$0$0 == 0x00ed
                    00ED    529 _PCA0CPL3	=	0x00ed
                    00EE    530 G$PCA0CPH3$0$0 == 0x00ee
                    00EE    531 _PCA0CPH3	=	0x00ee
                    00EF    532 G$RSTSRC$0$0 == 0x00ef
                    00EF    533 _RSTSRC	=	0x00ef
                    00F0    534 G$B$0$0 == 0x00f0
                    00F0    535 _B	=	0x00f0
                    00F1    536 G$P0MDIN$0$0 == 0x00f1
                    00F1    537 _P0MDIN	=	0x00f1
                    00F2    538 G$P1MDIN$0$0 == 0x00f2
                    00F2    539 _P1MDIN	=	0x00f2
                    00F3    540 G$P2MDIN$0$0 == 0x00f3
                    00F3    541 _P2MDIN	=	0x00f3
                    00F4    542 G$SMB0ADR$0$0 == 0x00f4
                    00F4    543 _SMB0ADR	=	0x00f4
                    00F5    544 G$SMB0ADM$0$0 == 0x00f5
                    00F5    545 _SMB0ADM	=	0x00f5
                    00F6    546 G$EIP1$0$0 == 0x00f6
                    00F6    547 _EIP1	=	0x00f6
                    00F7    548 G$EIP2$0$0 == 0x00f7
                    00F7    549 _EIP2	=	0x00f7
                    00F8    550 G$SPI0CN$0$0 == 0x00f8
                    00F8    551 _SPI0CN	=	0x00f8
                    00F9    552 G$PCA0L$0$0 == 0x00f9
                    00F9    553 _PCA0L	=	0x00f9
                    00FA    554 G$PCA0H$0$0 == 0x00fa
                    00FA    555 _PCA0H	=	0x00fa
                    00FB    556 G$PCA0CPL0$0$0 == 0x00fb
                    00FB    557 _PCA0CPL0	=	0x00fb
                    00FC    558 G$PCA0CPH0$0$0 == 0x00fc
                    00FC    559 _PCA0CPH0	=	0x00fc
                    00FD    560 G$PCA0CPL4$0$0 == 0x00fd
                    00FD    561 _PCA0CPL4	=	0x00fd
                    00FE    562 G$PCA0CPH4$0$0 == 0x00fe
                    00FE    563 _PCA0CPH4	=	0x00fe
                    00FF    564 G$VDM0CN$0$0 == 0x00ff
                    00FF    565 _VDM0CN	=	0x00ff
                    8382    566 G$DP$0$0 == 0x8382
                    8382    567 _DP	=	0x8382
                    8685    568 G$TOFF$0$0 == 0x8685
                    8685    569 _TOFF	=	0x8685
                    9392    570 G$TMR3RL$0$0 == 0x9392
                    9392    571 _TMR3RL	=	0x9392
                    9594    572 G$TMR3$0$0 == 0x9594
                    9594    573 _TMR3	=	0x9594
                    BEBD    574 G$ADC0$0$0 == 0xbebd
                    BEBD    575 _ADC0	=	0xbebd
                    C4C3    576 G$ADC0GT$0$0 == 0xc4c3
                    C4C3    577 _ADC0GT	=	0xc4c3
                    C6C5    578 G$ADC0LT$0$0 == 0xc6c5
                    C6C5    579 _ADC0LT	=	0xc6c5
                    CBCA    580 G$TMR2RL$0$0 == 0xcbca
                    CBCA    581 _TMR2RL	=	0xcbca
                    CDCC    582 G$TMR2$0$0 == 0xcdcc
                    CDCC    583 _TMR2	=	0xcdcc
                    D3D2    584 G$PCA0CP5$0$0 == 0xd3d2
                    D3D2    585 _PCA0CP5	=	0xd3d2
                    EAE9    586 G$PCA0CP1$0$0 == 0xeae9
                    EAE9    587 _PCA0CP1	=	0xeae9
                    ECEB    588 G$PCA0CP2$0$0 == 0xeceb
                    ECEB    589 _PCA0CP2	=	0xeceb
                    EEED    590 G$PCA0CP3$0$0 == 0xeeed
                    EEED    591 _PCA0CP3	=	0xeeed
                    FAF9    592 G$PCA0$0$0 == 0xfaf9
                    FAF9    593 _PCA0	=	0xfaf9
                    FCFB    594 G$PCA0CP0$0$0 == 0xfcfb
                    FCFB    595 _PCA0CP0	=	0xfcfb
                    FEFD    596 G$PCA0CP4$0$0 == 0xfefd
                    FEFD    597 _PCA0CP4	=	0xfefd
                            598 ;--------------------------------------------------------
                            599 ; special function bits
                            600 ;--------------------------------------------------------
                            601 	.area RSEG    (ABS,DATA)
   0000                     602 	.org 0x0000
                    008F    603 G$TF1$0$0 == 0x008f
                    008F    604 _TF1	=	0x008f
                    008E    605 G$TR1$0$0 == 0x008e
                    008E    606 _TR1	=	0x008e
                    008D    607 G$TF0$0$0 == 0x008d
                    008D    608 _TF0	=	0x008d
                    008C    609 G$TR0$0$0 == 0x008c
                    008C    610 _TR0	=	0x008c
                    008B    611 G$IE1$0$0 == 0x008b
                    008B    612 _IE1	=	0x008b
                    008A    613 G$IT1$0$0 == 0x008a
                    008A    614 _IT1	=	0x008a
                    0089    615 G$IE0$0$0 == 0x0089
                    0089    616 _IE0	=	0x0089
                    0088    617 G$IT0$0$0 == 0x0088
                    0088    618 _IT0	=	0x0088
                    009F    619 G$S0MODE$0$0 == 0x009f
                    009F    620 _S0MODE	=	0x009f
                    009D    621 G$MCE0$0$0 == 0x009d
                    009D    622 _MCE0	=	0x009d
                    009C    623 G$REN0$0$0 == 0x009c
                    009C    624 _REN0	=	0x009c
                    009B    625 G$TB80$0$0 == 0x009b
                    009B    626 _TB80	=	0x009b
                    009A    627 G$RB80$0$0 == 0x009a
                    009A    628 _RB80	=	0x009a
                    0099    629 G$TI0$0$0 == 0x0099
                    0099    630 _TI0	=	0x0099
                    0098    631 G$RI0$0$0 == 0x0098
                    0098    632 _RI0	=	0x0098
                    00AF    633 G$EA$0$0 == 0x00af
                    00AF    634 _EA	=	0x00af
                    00AE    635 G$ESPI0$0$0 == 0x00ae
                    00AE    636 _ESPI0	=	0x00ae
                    00AD    637 G$ET2$0$0 == 0x00ad
                    00AD    638 _ET2	=	0x00ad
                    00AC    639 G$ES0$0$0 == 0x00ac
                    00AC    640 _ES0	=	0x00ac
                    00AB    641 G$ET1$0$0 == 0x00ab
                    00AB    642 _ET1	=	0x00ab
                    00AA    643 G$EX1$0$0 == 0x00aa
                    00AA    644 _EX1	=	0x00aa
                    00A9    645 G$ET0$0$0 == 0x00a9
                    00A9    646 _ET0	=	0x00a9
                    00A8    647 G$EX0$0$0 == 0x00a8
                    00A8    648 _EX0	=	0x00a8
                    00B7    649 G$SPIF1$0$0 == 0x00b7
                    00B7    650 _SPIF1	=	0x00b7
                    00B6    651 G$WCOL1$0$0 == 0x00b6
                    00B6    652 _WCOL1	=	0x00b6
                    00B5    653 G$MODF1$0$0 == 0x00b5
                    00B5    654 _MODF1	=	0x00b5
                    00B4    655 G$RXOVRN1$0$0 == 0x00b4
                    00B4    656 _RXOVRN1	=	0x00b4
                    00B3    657 G$NSS1MD1$0$0 == 0x00b3
                    00B3    658 _NSS1MD1	=	0x00b3
                    00B2    659 G$NSS1MD0$0$0 == 0x00b2
                    00B2    660 _NSS1MD0	=	0x00b2
                    00B1    661 G$TXBMT1$0$0 == 0x00b1
                    00B1    662 _TXBMT1	=	0x00b1
                    00B0    663 G$SPI1EN$0$0 == 0x00b0
                    00B0    664 _SPI1EN	=	0x00b0
                    00BE    665 G$PSPI0$0$0 == 0x00be
                    00BE    666 _PSPI0	=	0x00be
                    00BD    667 G$PT2$0$0 == 0x00bd
                    00BD    668 _PT2	=	0x00bd
                    00BC    669 G$PS0$0$0 == 0x00bc
                    00BC    670 _PS0	=	0x00bc
                    00BB    671 G$PT1$0$0 == 0x00bb
                    00BB    672 _PT1	=	0x00bb
                    00BA    673 G$PX1$0$0 == 0x00ba
                    00BA    674 _PX1	=	0x00ba
                    00B9    675 G$PT0$0$0 == 0x00b9
                    00B9    676 _PT0	=	0x00b9
                    00B8    677 G$PX0$0$0 == 0x00b8
                    00B8    678 _PX0	=	0x00b8
                    00C7    679 G$MASTER$0$0 == 0x00c7
                    00C7    680 _MASTER	=	0x00c7
                    00C6    681 G$TXMODE$0$0 == 0x00c6
                    00C6    682 _TXMODE	=	0x00c6
                    00C5    683 G$STA$0$0 == 0x00c5
                    00C5    684 _STA	=	0x00c5
                    00C4    685 G$STO$0$0 == 0x00c4
                    00C4    686 _STO	=	0x00c4
                    00C3    687 G$ACKRQ$0$0 == 0x00c3
                    00C3    688 _ACKRQ	=	0x00c3
                    00C2    689 G$ARBLOST$0$0 == 0x00c2
                    00C2    690 _ARBLOST	=	0x00c2
                    00C1    691 G$ACK$0$0 == 0x00c1
                    00C1    692 _ACK	=	0x00c1
                    00C0    693 G$SI$0$0 == 0x00c0
                    00C0    694 _SI	=	0x00c0
                    00CF    695 G$TF2H$0$0 == 0x00cf
                    00CF    696 _TF2H	=	0x00cf
                    00CE    697 G$TF2L$0$0 == 0x00ce
                    00CE    698 _TF2L	=	0x00ce
                    00CD    699 G$TF2LEN$0$0 == 0x00cd
                    00CD    700 _TF2LEN	=	0x00cd
                    00CC    701 G$TF2CEN$0$0 == 0x00cc
                    00CC    702 _TF2CEN	=	0x00cc
                    00CB    703 G$T2SPLIT$0$0 == 0x00cb
                    00CB    704 _T2SPLIT	=	0x00cb
                    00CA    705 G$TR2$0$0 == 0x00ca
                    00CA    706 _TR2	=	0x00ca
                    00C9    707 G$T2RCLK$0$0 == 0x00c9
                    00C9    708 _T2RCLK	=	0x00c9
                    00C8    709 G$T2XCLK$0$0 == 0x00c8
                    00C8    710 _T2XCLK	=	0x00c8
                    00D7    711 G$CY$0$0 == 0x00d7
                    00D7    712 _CY	=	0x00d7
                    00D6    713 G$AC$0$0 == 0x00d6
                    00D6    714 _AC	=	0x00d6
                    00D5    715 G$F0$0$0 == 0x00d5
                    00D5    716 _F0	=	0x00d5
                    00D4    717 G$RS1$0$0 == 0x00d4
                    00D4    718 _RS1	=	0x00d4
                    00D3    719 G$RS0$0$0 == 0x00d3
                    00D3    720 _RS0	=	0x00d3
                    00D2    721 G$OV$0$0 == 0x00d2
                    00D2    722 _OV	=	0x00d2
                    00D1    723 G$F1$0$0 == 0x00d1
                    00D1    724 _F1	=	0x00d1
                    00D0    725 G$P$0$0 == 0x00d0
                    00D0    726 _P	=	0x00d0
                    00DF    727 G$CF$0$0 == 0x00df
                    00DF    728 _CF	=	0x00df
                    00DE    729 G$CR$0$0 == 0x00de
                    00DE    730 _CR	=	0x00de
                    00DD    731 G$CCF5$0$0 == 0x00dd
                    00DD    732 _CCF5	=	0x00dd
                    00DC    733 G$CCF4$0$0 == 0x00dc
                    00DC    734 _CCF4	=	0x00dc
                    00DB    735 G$CCF3$0$0 == 0x00db
                    00DB    736 _CCF3	=	0x00db
                    00DA    737 G$CCF2$0$0 == 0x00da
                    00DA    738 _CCF2	=	0x00da
                    00D9    739 G$CCF1$0$0 == 0x00d9
                    00D9    740 _CCF1	=	0x00d9
                    00D8    741 G$CCF0$0$0 == 0x00d8
                    00D8    742 _CCF0	=	0x00d8
                    00EF    743 G$AD0EN$0$0 == 0x00ef
                    00EF    744 _AD0EN	=	0x00ef
                    00EE    745 G$BURSTEN$0$0 == 0x00ee
                    00EE    746 _BURSTEN	=	0x00ee
                    00ED    747 G$AD0INT$0$0 == 0x00ed
                    00ED    748 _AD0INT	=	0x00ed
                    00EC    749 G$AD0BUSY$0$0 == 0x00ec
                    00EC    750 _AD0BUSY	=	0x00ec
                    00EB    751 G$AD0WINT$0$0 == 0x00eb
                    00EB    752 _AD0WINT	=	0x00eb
                    00EA    753 G$AD0CM2$0$0 == 0x00ea
                    00EA    754 _AD0CM2	=	0x00ea
                    00E9    755 G$AD0CM1$0$0 == 0x00e9
                    00E9    756 _AD0CM1	=	0x00e9
                    00E8    757 G$AD0CM0$0$0 == 0x00e8
                    00E8    758 _AD0CM0	=	0x00e8
                    00FF    759 G$SPIF0$0$0 == 0x00ff
                    00FF    760 _SPIF0	=	0x00ff
                    00FE    761 G$WCOL0$0$0 == 0x00fe
                    00FE    762 _WCOL0	=	0x00fe
                    00FD    763 G$MODF0$0$0 == 0x00fd
                    00FD    764 _MODF0	=	0x00fd
                    00FC    765 G$RXOVRN0$0$0 == 0x00fc
                    00FC    766 _RXOVRN0	=	0x00fc
                    00FB    767 G$NSS0MD1$0$0 == 0x00fb
                    00FB    768 _NSS0MD1	=	0x00fb
                    00FA    769 G$NSS0MD0$0$0 == 0x00fa
                    00FA    770 _NSS0MD0	=	0x00fa
                    00F9    771 G$TXBMT0$0$0 == 0x00f9
                    00F9    772 _TXBMT0	=	0x00f9
                    00F8    773 G$SPI0EN$0$0 == 0x00f8
                    00F8    774 _SPI0EN	=	0x00f8
                            775 ;--------------------------------------------------------
                            776 ; overlayable register banks
                            777 ;--------------------------------------------------------
                            778 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     779 	.ds 8
                            780 ;--------------------------------------------------------
                            781 ; internal ram data
                            782 ;--------------------------------------------------------
                            783 	.area DSEG    (DATA)
                    0000    784 Lradio_comm.radio_comm_GetResp$ctsVal$1$21==.
   0000                     785 _radio_comm_GetResp_ctsVal_1_21:
   0000                     786 	.ds 1
                            787 ;--------------------------------------------------------
                            788 ; overlayable items in internal ram 
                            789 ;--------------------------------------------------------
                            790 ;--------------------------------------------------------
                            791 ; indirectly addressable internal ram data
                            792 ;--------------------------------------------------------
                            793 	.area ISEG    (DATA)
                            794 ;--------------------------------------------------------
                            795 ; absolute internal ram data
                            796 ;--------------------------------------------------------
                            797 	.area IABS    (ABS,DATA)
                            798 	.area IABS    (ABS,DATA)
                            799 ;--------------------------------------------------------
                            800 ; bit data
                            801 ;--------------------------------------------------------
                            802 	.area BSEG    (BIT)
                    0000    803 G$ctsWentHigh$0$0==.
   0000                     804 _ctsWentHigh::
   0000                     805 	.ds 1
                    0001    806 Lradio_comm.radio_comm_ReadData$pollCts$1$35==.
   0001                     807 _radio_comm_ReadData_PARM_2:
   0001                     808 	.ds 1
                    0002    809 Lradio_comm.radio_comm_WriteData$pollCts$1$39==.
   0002                     810 _radio_comm_WriteData_PARM_2:
   0002                     811 	.ds 1
                            812 ;--------------------------------------------------------
                            813 ; paged external ram data
                            814 ;--------------------------------------------------------
                            815 	.area PSEG    (PAG,XDATA)
                            816 ;--------------------------------------------------------
                            817 ; external ram data
                            818 ;--------------------------------------------------------
                            819 	.area XSEG    (XDATA)
                    0000    820 Lradio_comm.radio_comm_GetResp$pData$1$20==.
   0000                     821 _radio_comm_GetResp_PARM_2:
   0000                     822 	.ds 3
                    0003    823 Lradio_comm.radio_comm_GetResp$byteCount$1$20==.
   0003                     824 _radio_comm_GetResp_byteCount_1_20:
   0003                     825 	.ds 1
                    0004    826 Lradio_comm.radio_comm_SendCmd$pData$1$30==.
   0004                     827 _radio_comm_SendCmd_PARM_2:
   0004                     828 	.ds 3
                    0007    829 Lradio_comm.radio_comm_SendCmd$byteCount$1$30==.
   0007                     830 _radio_comm_SendCmd_byteCount_1_30:
   0007                     831 	.ds 1
                    0008    832 Lradio_comm.radio_comm_SendCmdGetResp$pCmdData$1$33==.
   0008                     833 _radio_comm_SendCmdGetResp_PARM_2:
   0008                     834 	.ds 3
                    000B    835 Lradio_comm.radio_comm_SendCmdGetResp$respByteCount$1$33==.
   000B                     836 _radio_comm_SendCmdGetResp_PARM_3:
   000B                     837 	.ds 1
                    000C    838 Lradio_comm.radio_comm_SendCmdGetResp$pRespData$1$33==.
   000C                     839 _radio_comm_SendCmdGetResp_PARM_4:
   000C                     840 	.ds 3
                    000F    841 Lradio_comm.radio_comm_SendCmdGetResp$cmdByteCount$1$33==.
   000F                     842 _radio_comm_SendCmdGetResp_cmdByteCount_1_33:
   000F                     843 	.ds 1
                    0010    844 Lradio_comm.radio_comm_ReadData$byteCount$1$35==.
   0010                     845 _radio_comm_ReadData_PARM_3:
   0010                     846 	.ds 1
                    0011    847 Lradio_comm.radio_comm_ReadData$pData$1$35==.
   0011                     848 _radio_comm_ReadData_PARM_4:
   0011                     849 	.ds 3
                    0014    850 Lradio_comm.radio_comm_ReadData$cmd$1$35==.
   0014                     851 _radio_comm_ReadData_cmd_1_35:
   0014                     852 	.ds 1
                    0015    853 Lradio_comm.radio_comm_WriteData$byteCount$1$39==.
   0015                     854 _radio_comm_WriteData_PARM_3:
   0015                     855 	.ds 1
                    0016    856 Lradio_comm.radio_comm_WriteData$pData$1$39==.
   0016                     857 _radio_comm_WriteData_PARM_4:
   0016                     858 	.ds 3
                    0019    859 Lradio_comm.radio_comm_WriteData$cmd$1$39==.
   0019                     860 _radio_comm_WriteData_cmd_1_39:
   0019                     861 	.ds 1
                            862 ;--------------------------------------------------------
                            863 ; absolute external ram data
                            864 ;--------------------------------------------------------
                            865 	.area XABS    (ABS,XDATA)
                            866 ;--------------------------------------------------------
                            867 ; external initialized ram data
                            868 ;--------------------------------------------------------
                            869 	.area XISEG   (XDATA)
                            870 	.area HOME    (CODE)
                            871 	.area GSINIT0 (CODE)
                            872 	.area GSINIT1 (CODE)
                            873 	.area GSINIT2 (CODE)
                            874 	.area GSINIT3 (CODE)
                            875 	.area GSINIT4 (CODE)
                            876 	.area GSINIT5 (CODE)
                            877 	.area GSINIT  (CODE)
                            878 	.area GSFINAL (CODE)
                            879 	.area CSEG    (CODE)
                            880 ;--------------------------------------------------------
                            881 ; global & static initialisations
                            882 ;--------------------------------------------------------
                            883 	.area HOME    (CODE)
                            884 	.area GSINIT  (CODE)
                            885 	.area GSFINAL (CODE)
                            886 	.area GSINIT  (CODE)
                    0000    887 	C$radio_comm.c$29$1$40 ==.
                            888 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:29: BIT ctsWentHigh = 0;
   0000 C2*00               889 	clr	_ctsWentHigh
                            890 ;--------------------------------------------------------
                            891 ; Home
                            892 ;--------------------------------------------------------
                            893 	.area HOME    (CODE)
                            894 	.area HOME    (CODE)
                            895 ;--------------------------------------------------------
                            896 ; code
                            897 ;--------------------------------------------------------
                            898 	.area CSEG    (CODE)
                            899 ;------------------------------------------------------------
                            900 ;Allocation info for local variables in function 'radio_comm_GetResp'
                            901 ;------------------------------------------------------------
                            902 ;ctsVal                    Allocated with name '_radio_comm_GetResp_ctsVal_1_21'
                            903 ;errCnt                    Allocated to registers r5 r6 
                            904 ;pData                     Allocated with name '_radio_comm_GetResp_PARM_2'
                            905 ;byteCount                 Allocated with name '_radio_comm_GetResp_byteCount_1_20'
                            906 ;------------------------------------------------------------
                    0000    907 	G$radio_comm_GetResp$0$0 ==.
                    0000    908 	C$radio_comm.c$48$0$0 ==.
                            909 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:48: U8 radio_comm_GetResp(U8 byteCount, U8* pData)
                            910 ;	-----------------------------------------
                            911 ;	 function radio_comm_GetResp
                            912 ;	-----------------------------------------
   0000                     913 _radio_comm_GetResp:
                    0007    914 	ar7 = 0x07
                    0006    915 	ar6 = 0x06
                    0005    916 	ar5 = 0x05
                    0004    917 	ar4 = 0x04
                    0003    918 	ar3 = 0x03
                    0002    919 	ar2 = 0x02
                    0001    920 	ar1 = 0x01
                    0000    921 	ar0 = 0x00
   0000 E5 82               922 	mov	a,dpl
   0002 90s00r03            923 	mov	dptr,#_radio_comm_GetResp_byteCount_1_20
   0005 F0                  924 	movx	@dptr,a
                    0006    925 	C$radio_comm.c$50$1$0 ==.
                            926 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:50: SEGMENT_VARIABLE(ctsVal = 0, U8, SEG_DATA);
   0006 75*00 00            927 	mov	_radio_comm_GetResp_ctsVal_1_21,#0x00
                    0009    928 	C$radio_comm.c$51$1$0 ==.
                            929 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:51: SEGMENT_VARIABLE(errCnt = RADIO_CTS_TIMEOUT, U16, SEG_DATA);
   0009 7D 88               930 	mov	r5,#0x88
   000B 7E 13               931 	mov	r6,#0x13
                    000D    932 	C$radio_comm.c$53$1$21 ==.
                            933 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:53: while (errCnt != 0)      //wait until radio IC is ready with the data
   000D 7B 88               934 	mov	r3,#0x88
   000F 7C 13               935 	mov	r4,#0x13
   0011                     936 00105$:
   0011 EB                  937 	mov	a,r3
   0012 4C                  938 	orl	a,r4
   0013 60 71               939 	jz	00107$
                    0015    940 	C$radio_comm.c$55$2$22 ==.
                            941 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:55: radio_hal_ClearNsel();
   0015 C0 06               942 	push	ar6
   0017 C0 05               943 	push	ar5
   0019 C0 04               944 	push	ar4
   001B C0 03               945 	push	ar3
   001D 12s00r00            946 	lcall	_radio_hal_ClearNsel
                    0020    947 	C$radio_comm.c$56$2$22 ==.
                            948 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:56: radio_hal_SpiWriteByte(0x44);    //read CMD buffer
   0020 75 82 44            949 	mov	dpl,#0x44
   0023 12s00r00            950 	lcall	_radio_hal_SpiWriteByte
                    0026    951 	C$radio_comm.c$57$2$22 ==.
                            952 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:57: ctsVal = radio_hal_SpiReadByte();
   0026 12s00r00            953 	lcall	_radio_hal_SpiReadByte
   0029 85 82*00            954 	mov	_radio_comm_GetResp_ctsVal_1_21,dpl
   002C D0 03               955 	pop	ar3
   002E D0 04               956 	pop	ar4
   0030 D0 05               957 	pop	ar5
   0032 D0 06               958 	pop	ar6
                    0034    959 	C$radio_comm.c$58$2$22 ==.
                            960 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:58: if(ctsVal == 0xFF)
   0034 74 FF               961 	mov	a,#0xFF
   0036 B5*00 37            962 	cjne	a,_radio_comm_GetResp_ctsVal_1_21,00104$
                    0039    963 	C$radio_comm.c$60$3$23 ==.
                            964 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:60: if(byteCount)
   0039 90s00r03            965 	mov	dptr,#_radio_comm_GetResp_byteCount_1_20
   003C E0                  966 	movx	a,@dptr
   003D FA                  967 	mov	r2,a
   003E 60 23               968 	jz	00102$
                    0040    969 	C$radio_comm.c$62$4$24 ==.
                            970 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:62: radio_hal_SpiReadData(byteCount, pData);
   0040 90s00r00            971 	mov	dptr,#_radio_comm_GetResp_PARM_2
   0043 E0                  972 	movx	a,@dptr
   0044 F8                  973 	mov	r0,a
   0045 A3                  974 	inc	dptr
   0046 E0                  975 	movx	a,@dptr
   0047 F9                  976 	mov	r1,a
   0048 A3                  977 	inc	dptr
   0049 E0                  978 	movx	a,@dptr
   004A FF                  979 	mov	r7,a
   004B 90s00r00            980 	mov	dptr,#_radio_hal_SpiReadData_PARM_2
   004E E8                  981 	mov	a,r0
   004F F0                  982 	movx	@dptr,a
   0050 A3                  983 	inc	dptr
   0051 E9                  984 	mov	a,r1
   0052 F0                  985 	movx	@dptr,a
   0053 A3                  986 	inc	dptr
   0054 EF                  987 	mov	a,r7
   0055 F0                  988 	movx	@dptr,a
   0056 8A 82               989 	mov	dpl,r2
   0058 C0 06               990 	push	ar6
   005A C0 05               991 	push	ar5
   005C 12s00r00            992 	lcall	_radio_hal_SpiReadData
   005F D0 05               993 	pop	ar5
   0061 D0 06               994 	pop	ar6
   0063                     995 00102$:
                    0063    996 	C$radio_comm.c$64$3$23 ==.
                            997 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:64: radio_hal_SetNsel();
   0063 C0 06               998 	push	ar6
   0065 C0 05               999 	push	ar5
   0067 12s00r00           1000 	lcall	_radio_hal_SetNsel
   006A D0 05              1001 	pop	ar5
   006C D0 06              1002 	pop	ar6
                    006E   1003 	C$radio_comm.c$65$3$23 ==.
                           1004 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:65: break;
   006E 80 16              1005 	sjmp	00107$
   0070                    1006 00104$:
                    0070   1007 	C$radio_comm.c$67$2$22 ==.
                           1008 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:67: radio_hal_SetNsel();
   0070 C0 04              1009 	push	ar4
   0072 C0 03              1010 	push	ar3
   0074 12s00r00           1011 	lcall	_radio_hal_SetNsel
   0077 D0 03              1012 	pop	ar3
   0079 D0 04              1013 	pop	ar4
                    007B   1014 	C$radio_comm.c$68$2$22 ==.
                           1015 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:68: errCnt--;
   007B 1B                 1016 	dec	r3
   007C BB FF 01           1017 	cjne	r3,#0xFF,00133$
   007F 1C                 1018 	dec	r4
   0080                    1019 00133$:
   0080 8B 05              1020 	mov	ar5,r3
   0082 8C 06              1021 	mov	ar6,r4
   0084 80 8B              1022 	sjmp	00105$
   0086                    1023 00107$:
                    0086   1024 	C$radio_comm.c$71$1$21 ==.
                           1025 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:71: if( errCnt == 0 )
   0086 ED                 1026 	mov	a,r5
   0087 4E                 1027 	orl	a,r6
   0088 70 02              1028 	jnz	00112$
                    008A   1029 	C$radio_comm.c$73$2$25 ==.
                           1030 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:73: while(1)
   008A                    1031 00109$:
   008A 80 FE              1032 	sjmp	00109$
   008C                    1033 00112$:
                    008C   1034 	C$radio_comm.c$79$1$21 ==.
                           1035 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:79: if (ctsVal == 0xFF)
   008C 74 FF              1036 	mov	a,#0xFF
   008E B5*00 02           1037 	cjne	a,_radio_comm_GetResp_ctsVal_1_21,00114$
                    0091   1038 	C$radio_comm.c$81$2$27 ==.
                           1039 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:81: ctsWentHigh = 1;
   0091 D2*00              1040 	setb	_ctsWentHigh
   0093                    1041 00114$:
                    0093   1042 	C$radio_comm.c$84$1$21 ==.
                           1043 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:84: return ctsVal;
   0093 85*00 82           1044 	mov	dpl,_radio_comm_GetResp_ctsVal_1_21
                    0096   1045 	C$radio_comm.c$85$1$21 ==.
                    0096   1046 	XG$radio_comm_GetResp$0$0 ==.
   0096 22                 1047 	ret
                           1048 ;------------------------------------------------------------
                           1049 ;Allocation info for local variables in function 'radio_comm_PollCTS'
                           1050 ;------------------------------------------------------------
                    0097   1051 	G$radio_comm_PollCTS$0$0 ==.
                    0097   1052 	C$radio_comm.c$94$1$21 ==.
                           1053 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:94: U8 radio_comm_PollCTS(void)
                           1054 ;	-----------------------------------------
                           1055 ;	 function radio_comm_PollCTS
                           1056 ;	-----------------------------------------
   0097                    1057 _radio_comm_PollCTS:
                    0097   1058 	C$radio_comm.c$104$1$29 ==.
                           1059 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:104: return radio_comm_GetResp(0, 0);
   0097 90s00r00           1060 	mov	dptr,#_radio_comm_GetResp_PARM_2
   009A E4                 1061 	clr	a
   009B F0                 1062 	movx	@dptr,a
   009C A3                 1063 	inc	dptr
   009D F0                 1064 	movx	@dptr,a
   009E A3                 1065 	inc	dptr
   009F F0                 1066 	movx	@dptr,a
   00A0 75 82 00           1067 	mov	dpl,#0x00
   00A3 12s00r00           1068 	lcall	_radio_comm_GetResp
                    00A6   1069 	C$radio_comm.c$106$1$29 ==.
                    00A6   1070 	XG$radio_comm_PollCTS$0$0 ==.
   00A6 22                 1071 	ret
                           1072 ;------------------------------------------------------------
                           1073 ;Allocation info for local variables in function 'radio_comm_SendCmd'
                           1074 ;------------------------------------------------------------
                           1075 ;pData                     Allocated with name '_radio_comm_SendCmd_PARM_2'
                           1076 ;byteCount                 Allocated with name '_radio_comm_SendCmd_byteCount_1_30'
                           1077 ;------------------------------------------------------------
                    00A7   1078 	G$radio_comm_SendCmd$0$0 ==.
                    00A7   1079 	C$radio_comm.c$114$1$29 ==.
                           1080 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:114: void radio_comm_SendCmd(U8 byteCount, U8* pData)
                           1081 ;	-----------------------------------------
                           1082 ;	 function radio_comm_SendCmd
                           1083 ;	-----------------------------------------
   00A7                    1084 _radio_comm_SendCmd:
   00A7 E5 82              1085 	mov	a,dpl
                    00A9   1086 	C$radio_comm.c$118$1$31 ==.
                           1087 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:118: if (byteCount == 1)
   00A9 90s00r07           1088 	mov	dptr,#_radio_comm_SendCmd_byteCount_1_30
   00AC F0                 1089 	movx	@dptr,a
   00AD FF                 1090 	mov	r7,a
   00AE BF 01 06           1091 	cjne	r7,#0x01,00103$
                    00B1   1092 	C$radio_comm.c$119$1$31 ==.
                           1093 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:119: byteCount++;
   00B1 90s00r07           1094 	mov	dptr,#_radio_comm_SendCmd_byteCount_1_30
   00B4 EF                 1095 	mov	a,r7
   00B5 04                 1096 	inc	a
   00B6 F0                 1097 	movx	@dptr,a
                    00B7   1098 	C$radio_comm.c$121$1$31 ==.
                           1099 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:121: while(!ctsWentHigh)
   00B7                    1100 00103$:
   00B7 20*00 05           1101 	jb	_ctsWentHigh,00105$
                    00BA   1102 	C$radio_comm.c$123$2$32 ==.
                           1103 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:123: radio_comm_PollCTS();
   00BA 12s00r97           1104 	lcall	_radio_comm_PollCTS
   00BD 80 F8              1105 	sjmp	00103$
   00BF                    1106 00105$:
                    00BF   1107 	C$radio_comm.c$125$1$31 ==.
                           1108 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:125: radio_hal_ClearNsel();
   00BF 12s00r00           1109 	lcall	_radio_hal_ClearNsel
                    00C2   1110 	C$radio_comm.c$126$1$31 ==.
                           1111 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:126: radio_hal_SpiWriteData(byteCount, pData);
   00C2 90s00r07           1112 	mov	dptr,#_radio_comm_SendCmd_byteCount_1_30
   00C5 E0                 1113 	movx	a,@dptr
   00C6 FF                 1114 	mov	r7,a
   00C7 90s00r04           1115 	mov	dptr,#_radio_comm_SendCmd_PARM_2
   00CA E0                 1116 	movx	a,@dptr
   00CB FC                 1117 	mov	r4,a
   00CC A3                 1118 	inc	dptr
   00CD E0                 1119 	movx	a,@dptr
   00CE FD                 1120 	mov	r5,a
   00CF A3                 1121 	inc	dptr
   00D0 E0                 1122 	movx	a,@dptr
   00D1 FE                 1123 	mov	r6,a
   00D2 90s00r00           1124 	mov	dptr,#_radio_hal_SpiWriteData_PARM_2
   00D5 EC                 1125 	mov	a,r4
   00D6 F0                 1126 	movx	@dptr,a
   00D7 A3                 1127 	inc	dptr
   00D8 ED                 1128 	mov	a,r5
   00D9 F0                 1129 	movx	@dptr,a
   00DA A3                 1130 	inc	dptr
   00DB EE                 1131 	mov	a,r6
   00DC F0                 1132 	movx	@dptr,a
   00DD 8F 82              1133 	mov	dpl,r7
   00DF 12s00r00           1134 	lcall	_radio_hal_SpiWriteData
                    00E2   1135 	C$radio_comm.c$127$1$31 ==.
                           1136 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:127: radio_hal_SetNsel();
   00E2 12s00r00           1137 	lcall	_radio_hal_SetNsel
                    00E5   1138 	C$radio_comm.c$128$1$31 ==.
                           1139 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:128: ctsWentHigh = 0;
   00E5 C2*00              1140 	clr	_ctsWentHigh
                    00E7   1141 	C$radio_comm.c$129$1$31 ==.
                    00E7   1142 	XG$radio_comm_SendCmd$0$0 ==.
   00E7 22                 1143 	ret
                           1144 ;------------------------------------------------------------
                           1145 ;Allocation info for local variables in function 'radio_comm_SendCmdGetResp'
                           1146 ;------------------------------------------------------------
                           1147 ;pCmdData                  Allocated with name '_radio_comm_SendCmdGetResp_PARM_2'
                           1148 ;respByteCount             Allocated with name '_radio_comm_SendCmdGetResp_PARM_3'
                           1149 ;pRespData                 Allocated with name '_radio_comm_SendCmdGetResp_PARM_4'
                           1150 ;cmdByteCount              Allocated with name '_radio_comm_SendCmdGetResp_cmdByteCount_1_33'
                           1151 ;------------------------------------------------------------
                    00E8   1152 	G$radio_comm_SendCmdGetResp$0$0 ==.
                    00E8   1153 	C$radio_comm.c$141$1$31 ==.
                           1154 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:141: U8 radio_comm_SendCmdGetResp(U8 cmdByteCount, U8* pCmdData, U8 respByteCount, U8* pRespData)
                           1155 ;	-----------------------------------------
                           1156 ;	 function radio_comm_SendCmdGetResp
                           1157 ;	-----------------------------------------
   00E8                    1158 _radio_comm_SendCmdGetResp:
   00E8 E5 82              1159 	mov	a,dpl
                    00EA   1160 	C$radio_comm.c$143$1$34 ==.
                           1161 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:143: radio_comm_SendCmd(cmdByteCount, pCmdData);
   00EA 90s00r0F           1162 	mov	dptr,#_radio_comm_SendCmdGetResp_cmdByteCount_1_33
   00ED F0                 1163 	movx	@dptr,a
   00EE FF                 1164 	mov	r7,a
   00EF 90s00r08           1165 	mov	dptr,#_radio_comm_SendCmdGetResp_PARM_2
   00F2 E0                 1166 	movx	a,@dptr
   00F3 FC                 1167 	mov	r4,a
   00F4 A3                 1168 	inc	dptr
   00F5 E0                 1169 	movx	a,@dptr
   00F6 FD                 1170 	mov	r5,a
   00F7 A3                 1171 	inc	dptr
   00F8 E0                 1172 	movx	a,@dptr
   00F9 FE                 1173 	mov	r6,a
   00FA 90s00r04           1174 	mov	dptr,#_radio_comm_SendCmd_PARM_2
   00FD EC                 1175 	mov	a,r4
   00FE F0                 1176 	movx	@dptr,a
   00FF A3                 1177 	inc	dptr
   0100 ED                 1178 	mov	a,r5
   0101 F0                 1179 	movx	@dptr,a
   0102 A3                 1180 	inc	dptr
   0103 EE                 1181 	mov	a,r6
   0104 F0                 1182 	movx	@dptr,a
   0105 8F 82              1183 	mov	dpl,r7
   0107 12s00rA7           1184 	lcall	_radio_comm_SendCmd
                    010A   1185 	C$radio_comm.c$144$1$34 ==.
                           1186 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:144: return radio_comm_GetResp(respByteCount, pRespData);
   010A 90s00r0B           1187 	mov	dptr,#_radio_comm_SendCmdGetResp_PARM_3
   010D E0                 1188 	movx	a,@dptr
   010E FF                 1189 	mov	r7,a
   010F 90s00r0C           1190 	mov	dptr,#_radio_comm_SendCmdGetResp_PARM_4
   0112 E0                 1191 	movx	a,@dptr
   0113 FC                 1192 	mov	r4,a
   0114 A3                 1193 	inc	dptr
   0115 E0                 1194 	movx	a,@dptr
   0116 FD                 1195 	mov	r5,a
   0117 A3                 1196 	inc	dptr
   0118 E0                 1197 	movx	a,@dptr
   0119 FE                 1198 	mov	r6,a
   011A 90s00r00           1199 	mov	dptr,#_radio_comm_GetResp_PARM_2
   011D EC                 1200 	mov	a,r4
   011E F0                 1201 	movx	@dptr,a
   011F A3                 1202 	inc	dptr
   0120 ED                 1203 	mov	a,r5
   0121 F0                 1204 	movx	@dptr,a
   0122 A3                 1205 	inc	dptr
   0123 EE                 1206 	mov	a,r6
   0124 F0                 1207 	movx	@dptr,a
   0125 8F 82              1208 	mov	dpl,r7
   0127 12s00r00           1209 	lcall	_radio_comm_GetResp
                    012A   1210 	C$radio_comm.c$145$1$34 ==.
                    012A   1211 	XG$radio_comm_SendCmdGetResp$0$0 ==.
   012A 22                 1212 	ret
                           1213 ;------------------------------------------------------------
                           1214 ;Allocation info for local variables in function 'radio_comm_ReadData'
                           1215 ;------------------------------------------------------------
                           1216 ;byteCount                 Allocated with name '_radio_comm_ReadData_PARM_3'
                           1217 ;pData                     Allocated with name '_radio_comm_ReadData_PARM_4'
                           1218 ;cmd                       Allocated with name '_radio_comm_ReadData_cmd_1_35'
                           1219 ;------------------------------------------------------------
                    012B   1220 	G$radio_comm_ReadData$0$0 ==.
                    012B   1221 	C$radio_comm.c$156$1$34 ==.
                           1222 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:156: void radio_comm_ReadData(U8 cmd, BIT pollCts, U8 byteCount, U8* pData)
                           1223 ;	-----------------------------------------
                           1224 ;	 function radio_comm_ReadData
                           1225 ;	-----------------------------------------
   012B                    1226 _radio_comm_ReadData:
   012B E5 82              1227 	mov	a,dpl
   012D 90s00r14           1228 	mov	dptr,#_radio_comm_ReadData_cmd_1_35
   0130 F0                 1229 	movx	@dptr,a
                    0131   1230 	C$radio_comm.c$158$1$36 ==.
                           1231 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:158: if(pollCts)
   0131 30*01 08           1232 	jnb	_radio_comm_ReadData_PARM_2,00105$
                    0134   1233 	C$radio_comm.c$160$2$37 ==.
                           1234 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:160: while(!ctsWentHigh)
   0134                    1235 00101$:
   0134 20*00 05           1236 	jb	_ctsWentHigh,00105$
                    0137   1237 	C$radio_comm.c$162$3$38 ==.
                           1238 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:162: radio_comm_PollCTS();
   0137 12s00r97           1239 	lcall	_radio_comm_PollCTS
   013A 80 F8              1240 	sjmp	00101$
   013C                    1241 00105$:
                    013C   1242 	C$radio_comm.c$165$1$36 ==.
                           1243 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:165: radio_hal_ClearNsel();
   013C 12s00r00           1244 	lcall	_radio_hal_ClearNsel
                    013F   1245 	C$radio_comm.c$166$1$36 ==.
                           1246 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:166: radio_hal_SpiWriteByte(cmd);
   013F 90s00r14           1247 	mov	dptr,#_radio_comm_ReadData_cmd_1_35
   0142 E0                 1248 	movx	a,@dptr
   0143 F5 82              1249 	mov	dpl,a
   0145 12s00r00           1250 	lcall	_radio_hal_SpiWriteByte
                    0148   1251 	C$radio_comm.c$167$1$36 ==.
                           1252 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:167: radio_hal_SpiReadData(byteCount, pData);
   0148 90s00r10           1253 	mov	dptr,#_radio_comm_ReadData_PARM_3
   014B E0                 1254 	movx	a,@dptr
   014C FF                 1255 	mov	r7,a
   014D 90s00r11           1256 	mov	dptr,#_radio_comm_ReadData_PARM_4
   0150 E0                 1257 	movx	a,@dptr
   0151 FC                 1258 	mov	r4,a
   0152 A3                 1259 	inc	dptr
   0153 E0                 1260 	movx	a,@dptr
   0154 FD                 1261 	mov	r5,a
   0155 A3                 1262 	inc	dptr
   0156 E0                 1263 	movx	a,@dptr
   0157 FE                 1264 	mov	r6,a
   0158 90s00r00           1265 	mov	dptr,#_radio_hal_SpiReadData_PARM_2
   015B EC                 1266 	mov	a,r4
   015C F0                 1267 	movx	@dptr,a
   015D A3                 1268 	inc	dptr
   015E ED                 1269 	mov	a,r5
   015F F0                 1270 	movx	@dptr,a
   0160 A3                 1271 	inc	dptr
   0161 EE                 1272 	mov	a,r6
   0162 F0                 1273 	movx	@dptr,a
   0163 8F 82              1274 	mov	dpl,r7
   0165 12s00r00           1275 	lcall	_radio_hal_SpiReadData
                    0168   1276 	C$radio_comm.c$168$1$36 ==.
                           1277 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:168: radio_hal_SetNsel();
   0168 12s00r00           1278 	lcall	_radio_hal_SetNsel
                    016B   1279 	C$radio_comm.c$169$1$36 ==.
                           1280 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:169: ctsWentHigh = 0;
   016B C2*00              1281 	clr	_ctsWentHigh
                    016D   1282 	C$radio_comm.c$170$1$36 ==.
                    016D   1283 	XG$radio_comm_ReadData$0$0 ==.
   016D 22                 1284 	ret
                           1285 ;------------------------------------------------------------
                           1286 ;Allocation info for local variables in function 'radio_comm_WriteData'
                           1287 ;------------------------------------------------------------
                           1288 ;byteCount                 Allocated with name '_radio_comm_WriteData_PARM_3'
                           1289 ;pData                     Allocated with name '_radio_comm_WriteData_PARM_4'
                           1290 ;cmd                       Allocated with name '_radio_comm_WriteData_cmd_1_39'
                           1291 ;------------------------------------------------------------
                    016E   1292 	G$radio_comm_WriteData$0$0 ==.
                    016E   1293 	C$radio_comm.c$181$1$36 ==.
                           1294 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:181: void radio_comm_WriteData(U8 cmd, BIT pollCts, U8 byteCount, U8* pData)
                           1295 ;	-----------------------------------------
                           1296 ;	 function radio_comm_WriteData
                           1297 ;	-----------------------------------------
   016E                    1298 _radio_comm_WriteData:
   016E E5 82              1299 	mov	a,dpl
   0170 90s00r19           1300 	mov	dptr,#_radio_comm_WriteData_cmd_1_39
   0173 F0                 1301 	movx	@dptr,a
                    0174   1302 	C$radio_comm.c$183$1$40 ==.
                           1303 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:183: if(pollCts)
   0174 30*02 08           1304 	jnb	_radio_comm_WriteData_PARM_2,00105$
                    0177   1305 	C$radio_comm.c$185$2$41 ==.
                           1306 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:185: while(!ctsWentHigh)
   0177                    1307 00101$:
   0177 20*00 05           1308 	jb	_ctsWentHigh,00105$
                    017A   1309 	C$radio_comm.c$187$3$42 ==.
                           1310 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:187: radio_comm_PollCTS();
   017A 12s00r97           1311 	lcall	_radio_comm_PollCTS
   017D 80 F8              1312 	sjmp	00101$
   017F                    1313 00105$:
                    017F   1314 	C$radio_comm.c$190$1$40 ==.
                           1315 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:190: radio_hal_ClearNsel();
   017F 12s00r00           1316 	lcall	_radio_hal_ClearNsel
                    0182   1317 	C$radio_comm.c$191$1$40 ==.
                           1318 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:191: radio_hal_SpiWriteByte(cmd);
   0182 90s00r19           1319 	mov	dptr,#_radio_comm_WriteData_cmd_1_39
   0185 E0                 1320 	movx	a,@dptr
   0186 F5 82              1321 	mov	dpl,a
   0188 12s00r00           1322 	lcall	_radio_hal_SpiWriteByte
                    018B   1323 	C$radio_comm.c$192$1$40 ==.
                           1324 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:192: radio_hal_SpiWriteData(byteCount, pData);
   018B 90s00r15           1325 	mov	dptr,#_radio_comm_WriteData_PARM_3
   018E E0                 1326 	movx	a,@dptr
   018F FF                 1327 	mov	r7,a
   0190 90s00r16           1328 	mov	dptr,#_radio_comm_WriteData_PARM_4
   0193 E0                 1329 	movx	a,@dptr
   0194 FC                 1330 	mov	r4,a
   0195 A3                 1331 	inc	dptr
   0196 E0                 1332 	movx	a,@dptr
   0197 FD                 1333 	mov	r5,a
   0198 A3                 1334 	inc	dptr
   0199 E0                 1335 	movx	a,@dptr
   019A FE                 1336 	mov	r6,a
   019B 90s00r00           1337 	mov	dptr,#_radio_hal_SpiWriteData_PARM_2
   019E EC                 1338 	mov	a,r4
   019F F0                 1339 	movx	@dptr,a
   01A0 A3                 1340 	inc	dptr
   01A1 ED                 1341 	mov	a,r5
   01A2 F0                 1342 	movx	@dptr,a
   01A3 A3                 1343 	inc	dptr
   01A4 EE                 1344 	mov	a,r6
   01A5 F0                 1345 	movx	@dptr,a
   01A6 8F 82              1346 	mov	dpl,r7
   01A8 12s00r00           1347 	lcall	_radio_hal_SpiWriteData
                    01AB   1348 	C$radio_comm.c$193$1$40 ==.
                           1349 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:193: radio_hal_SetNsel();
   01AB 12s00r00           1350 	lcall	_radio_hal_SetNsel
                    01AE   1351 	C$radio_comm.c$194$1$40 ==.
                           1352 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\SI4X55\Radio\radio_comm.c:194: ctsWentHigh = 0;
   01AE C2*00              1353 	clr	_ctsWentHigh
                    01B0   1354 	C$radio_comm.c$195$1$40 ==.
                    01B0   1355 	XG$radio_comm_WriteData$0$0 ==.
   01B0 22                 1356 	ret
                           1357 	.area CSEG    (CODE)
                           1358 	.area CONST   (CODE)
                           1359 	.area XINIT   (CODE)
                           1360 	.area CABS    (ABS,CODE)
