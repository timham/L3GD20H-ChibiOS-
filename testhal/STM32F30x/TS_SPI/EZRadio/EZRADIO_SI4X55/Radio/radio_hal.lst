                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.2.0 #8008 (Jul  6 2012) (MINGW32)
                              4 ; This file was generated Tue Apr 02 14:56:25 2013
                              5 ;--------------------------------------------------------
                              6 	.module radio_hal
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _vSpi_ReadDataSpi1
                             13 	.globl _vSpi_WriteDataSpi1
                             14 	.globl _bSpi_ReadWriteSpi1
                             15 	.globl _PB4
                             16 	.globl _PB3
                             17 	.globl _PB2
                             18 	.globl _PB1
                             19 	.globl _LCD_A0
                             20 	.globl _LCD_NSEL
                             21 	.globl _RF_PWRDN
                             22 	.globl _RF_NIRQ
                             23 	.globl _RF_NSEL
                             24 	.globl _MCU_MOSI
                             25 	.globl _MCU_MISO
                             26 	.globl _MCU_SCK
                             27 	.globl _BUZZ
                             28 	.globl _LED4
                             29 	.globl _LED3
                             30 	.globl _LED2
                             31 	.globl _LED1
                             32 	.globl _MCU_SCL
                             33 	.globl _MCU_SDA
                             34 	.globl _SPI0EN
                             35 	.globl _TXBMT0
                             36 	.globl _NSS0MD0
                             37 	.globl _NSS0MD1
                             38 	.globl _RXOVRN0
                             39 	.globl _MODF0
                             40 	.globl _WCOL0
                             41 	.globl _SPIF0
                             42 	.globl _AD0CM0
                             43 	.globl _AD0CM1
                             44 	.globl _AD0CM2
                             45 	.globl _AD0WINT
                             46 	.globl _AD0BUSY
                             47 	.globl _AD0INT
                             48 	.globl _BURSTEN
                             49 	.globl _AD0EN
                             50 	.globl _CCF0
                             51 	.globl _CCF1
                             52 	.globl _CCF2
                             53 	.globl _CCF3
                             54 	.globl _CCF4
                             55 	.globl _CCF5
                             56 	.globl _CR
                             57 	.globl _CF
                             58 	.globl _P
                             59 	.globl _F1
                             60 	.globl _OV
                             61 	.globl _RS0
                             62 	.globl _RS1
                             63 	.globl _F0
                             64 	.globl _AC
                             65 	.globl _CY
                             66 	.globl _T2XCLK
                             67 	.globl _T2RCLK
                             68 	.globl _TR2
                             69 	.globl _T2SPLIT
                             70 	.globl _TF2CEN
                             71 	.globl _TF2LEN
                             72 	.globl _TF2L
                             73 	.globl _TF2H
                             74 	.globl _SI
                             75 	.globl _ACK
                             76 	.globl _ARBLOST
                             77 	.globl _ACKRQ
                             78 	.globl _STO
                             79 	.globl _STA
                             80 	.globl _TXMODE
                             81 	.globl _MASTER
                             82 	.globl _PX0
                             83 	.globl _PT0
                             84 	.globl _PX1
                             85 	.globl _PT1
                             86 	.globl _PS0
                             87 	.globl _PT2
                             88 	.globl _PSPI0
                             89 	.globl _SPI1EN
                             90 	.globl _TXBMT1
                             91 	.globl _NSS1MD0
                             92 	.globl _NSS1MD1
                             93 	.globl _RXOVRN1
                             94 	.globl _MODF1
                             95 	.globl _WCOL1
                             96 	.globl _SPIF1
                             97 	.globl _EX0
                             98 	.globl _ET0
                             99 	.globl _EX1
                            100 	.globl _ET1
                            101 	.globl _ES0
                            102 	.globl _ET2
                            103 	.globl _ESPI0
                            104 	.globl _EA
                            105 	.globl _RI0
                            106 	.globl _TI0
                            107 	.globl _RB80
                            108 	.globl _TB80
                            109 	.globl _REN0
                            110 	.globl _MCE0
                            111 	.globl _S0MODE
                            112 	.globl _IT0
                            113 	.globl _IE0
                            114 	.globl _IT1
                            115 	.globl _IE1
                            116 	.globl _TR0
                            117 	.globl _TF0
                            118 	.globl _TR1
                            119 	.globl _TF1
                            120 	.globl _PCA0CP4
                            121 	.globl _PCA0CP0
                            122 	.globl _PCA0
                            123 	.globl _PCA0CP3
                            124 	.globl _PCA0CP2
                            125 	.globl _PCA0CP1
                            126 	.globl _PCA0CP5
                            127 	.globl _TMR2
                            128 	.globl _TMR2RL
                            129 	.globl _ADC0LT
                            130 	.globl _ADC0GT
                            131 	.globl _ADC0
                            132 	.globl _TMR3
                            133 	.globl _TMR3RL
                            134 	.globl _TOFF
                            135 	.globl _DP
                            136 	.globl _VDM0CN
                            137 	.globl _PCA0CPH4
                            138 	.globl _PCA0CPL4
                            139 	.globl _PCA0CPH0
                            140 	.globl _PCA0CPL0
                            141 	.globl _PCA0H
                            142 	.globl _PCA0L
                            143 	.globl _SPI0CN
                            144 	.globl _EIP2
                            145 	.globl _EIP1
                            146 	.globl _SMB0ADM
                            147 	.globl _SMB0ADR
                            148 	.globl _P2MDIN
                            149 	.globl _P1MDIN
                            150 	.globl _P0MDIN
                            151 	.globl _B
                            152 	.globl _RSTSRC
                            153 	.globl _PCA0CPH3
                            154 	.globl _PCA0CPL3
                            155 	.globl _PCA0CPH2
                            156 	.globl _PCA0CPL2
                            157 	.globl _PCA0CPH1
                            158 	.globl _PCA0CPL1
                            159 	.globl _ADC0CN
                            160 	.globl _EIE2
                            161 	.globl _EIE1
                            162 	.globl _FLWR
                            163 	.globl _IT01CF
                            164 	.globl _XBR2
                            165 	.globl _XBR1
                            166 	.globl _XBR0
                            167 	.globl _ACC
                            168 	.globl _PCA0PWM
                            169 	.globl _PCA0CPM4
                            170 	.globl _PCA0CPM3
                            171 	.globl _PCA0CPM2
                            172 	.globl _PCA0CPM1
                            173 	.globl _PCA0CPM0
                            174 	.globl _PCA0MD
                            175 	.globl _PCA0CN
                            176 	.globl _P0MAT
                            177 	.globl _P2SKIP
                            178 	.globl _P1SKIP
                            179 	.globl _P0SKIP
                            180 	.globl _PCA0CPH5
                            181 	.globl _PCA0CPL5
                            182 	.globl _REF0CN
                            183 	.globl _PSW
                            184 	.globl _P1MAT
                            185 	.globl _PCA0CPM5
                            186 	.globl _TMR2H
                            187 	.globl _TMR2L
                            188 	.globl _TMR2RLH
                            189 	.globl _TMR2RLL
                            190 	.globl _REG0CN
                            191 	.globl _TMR2CN
                            192 	.globl _P0MASK
                            193 	.globl _ADC0LTH
                            194 	.globl _ADC0LTL
                            195 	.globl _ADC0GTH
                            196 	.globl _ADC0GTL
                            197 	.globl _SMB0DAT
                            198 	.globl _SMB0CF
                            199 	.globl _SMB0CN
                            200 	.globl _P1MASK
                            201 	.globl _ADC0H
                            202 	.globl _ADC0L
                            203 	.globl _ADC0TK
                            204 	.globl _ADC0CF
                            205 	.globl _ADC0MX
                            206 	.globl _ADC0PWR
                            207 	.globl _ADC0AC
                            208 	.globl _IREF0CN
                            209 	.globl _IP
                            210 	.globl _FLKEY
                            211 	.globl _FLSCL
                            212 	.globl _PMU0CF
                            213 	.globl _OSCICL
                            214 	.globl _OSCICN
                            215 	.globl _OSCXCN
                            216 	.globl _SPI1CN
                            217 	.globl _ONESHOT
                            218 	.globl _EMI0TC
                            219 	.globl _RTC0KEY
                            220 	.globl _RTC0DAT
                            221 	.globl _RTC0ADR
                            222 	.globl _EMI0CF
                            223 	.globl _EMI0CN
                            224 	.globl _CLKSEL
                            225 	.globl _IE
                            226 	.globl _SFRPAGE
                            227 	.globl _P2DRV
                            228 	.globl _P2MDOUT
                            229 	.globl _P1DRV
                            230 	.globl _P1MDOUT
                            231 	.globl _P0DRV
                            232 	.globl _P0MDOUT
                            233 	.globl _SPI0DAT
                            234 	.globl _SPI0CKR
                            235 	.globl _SPI0CFG
                            236 	.globl _P2
                            237 	.globl _CPT0MX
                            238 	.globl _CPT1MX
                            239 	.globl _CPT0MD
                            240 	.globl _CPT1MD
                            241 	.globl _CPT0CN
                            242 	.globl _CPT1CN
                            243 	.globl _SBUF0
                            244 	.globl _SCON0
                            245 	.globl _CRC0CNT
                            246 	.globl _DC0CN
                            247 	.globl _CRC0AUTO
                            248 	.globl _DC0CF
                            249 	.globl _TMR3H
                            250 	.globl _CRC0FLIP
                            251 	.globl _TMR3L
                            252 	.globl _CRC0IN
                            253 	.globl _TMR3RLH
                            254 	.globl _CRC0CN
                            255 	.globl _TMR3RLL
                            256 	.globl _CRC0DAT
                            257 	.globl _TMR3CN
                            258 	.globl _P1
                            259 	.globl _PSCTL
                            260 	.globl _CKCON
                            261 	.globl _TH1
                            262 	.globl _TH0
                            263 	.globl _TL1
                            264 	.globl _TL0
                            265 	.globl _TMOD
                            266 	.globl _TCON
                            267 	.globl _PCON
                            268 	.globl _TOFFH
                            269 	.globl _SPI1DAT
                            270 	.globl _TOFFL
                            271 	.globl _SPI1CKR
                            272 	.globl _SPI1CFG
                            273 	.globl _DPH
                            274 	.globl _DPL
                            275 	.globl _SP
                            276 	.globl _P0
                            277 	.globl _radio_hal_SpiReadData_PARM_2
                            278 	.globl _radio_hal_SpiWriteData_PARM_2
                            279 	.globl _radio_hal_Gpio0Level
                            280 	.globl _radio_hal_Gpio1Level
                            281 	.globl _radio_hal_Gpio2Level
                            282 	.globl _radio_hal_Gpio3Level
                            283 	.globl _radio_hal_NirqLevel
                            284 	.globl _radio_hal_AssertShutdown
                            285 	.globl _radio_hal_DeassertShutdown
                            286 	.globl _radio_hal_ClearNsel
                            287 	.globl _radio_hal_SetNsel
                            288 	.globl _radio_hal_SpiWriteByte
                            289 	.globl _radio_hal_SpiReadByte
                            290 	.globl _radio_hal_SpiWriteData
                            291 	.globl _radio_hal_SpiReadData
                            292 ;--------------------------------------------------------
                            293 ; special function registers
                            294 ;--------------------------------------------------------
                            295 	.area RSEG    (ABS,DATA)
   0000                     296 	.org 0x0000
                    0080    297 G$P0$0$0 == 0x0080
                    0080    298 _P0	=	0x0080
                    0081    299 G$SP$0$0 == 0x0081
                    0081    300 _SP	=	0x0081
                    0082    301 G$DPL$0$0 == 0x0082
                    0082    302 _DPL	=	0x0082
                    0083    303 G$DPH$0$0 == 0x0083
                    0083    304 _DPH	=	0x0083
                    0084    305 G$SPI1CFG$0$0 == 0x0084
                    0084    306 _SPI1CFG	=	0x0084
                    0085    307 G$SPI1CKR$0$0 == 0x0085
                    0085    308 _SPI1CKR	=	0x0085
                    0085    309 G$TOFFL$0$0 == 0x0085
                    0085    310 _TOFFL	=	0x0085
                    0086    311 G$SPI1DAT$0$0 == 0x0086
                    0086    312 _SPI1DAT	=	0x0086
                    0086    313 G$TOFFH$0$0 == 0x0086
                    0086    314 _TOFFH	=	0x0086
                    0087    315 G$PCON$0$0 == 0x0087
                    0087    316 _PCON	=	0x0087
                    0088    317 G$TCON$0$0 == 0x0088
                    0088    318 _TCON	=	0x0088
                    0089    319 G$TMOD$0$0 == 0x0089
                    0089    320 _TMOD	=	0x0089
                    008A    321 G$TL0$0$0 == 0x008a
                    008A    322 _TL0	=	0x008a
                    008B    323 G$TL1$0$0 == 0x008b
                    008B    324 _TL1	=	0x008b
                    008C    325 G$TH0$0$0 == 0x008c
                    008C    326 _TH0	=	0x008c
                    008D    327 G$TH1$0$0 == 0x008d
                    008D    328 _TH1	=	0x008d
                    008E    329 G$CKCON$0$0 == 0x008e
                    008E    330 _CKCON	=	0x008e
                    008F    331 G$PSCTL$0$0 == 0x008f
                    008F    332 _PSCTL	=	0x008f
                    0090    333 G$P1$0$0 == 0x0090
                    0090    334 _P1	=	0x0090
                    0091    335 G$TMR3CN$0$0 == 0x0091
                    0091    336 _TMR3CN	=	0x0091
                    0091    337 G$CRC0DAT$0$0 == 0x0091
                    0091    338 _CRC0DAT	=	0x0091
                    0092    339 G$TMR3RLL$0$0 == 0x0092
                    0092    340 _TMR3RLL	=	0x0092
                    0092    341 G$CRC0CN$0$0 == 0x0092
                    0092    342 _CRC0CN	=	0x0092
                    0093    343 G$TMR3RLH$0$0 == 0x0093
                    0093    344 _TMR3RLH	=	0x0093
                    0093    345 G$CRC0IN$0$0 == 0x0093
                    0093    346 _CRC0IN	=	0x0093
                    0094    347 G$TMR3L$0$0 == 0x0094
                    0094    348 _TMR3L	=	0x0094
                    0095    349 G$CRC0FLIP$0$0 == 0x0095
                    0095    350 _CRC0FLIP	=	0x0095
                    0095    351 G$TMR3H$0$0 == 0x0095
                    0095    352 _TMR3H	=	0x0095
                    0096    353 G$DC0CF$0$0 == 0x0096
                    0096    354 _DC0CF	=	0x0096
                    0096    355 G$CRC0AUTO$0$0 == 0x0096
                    0096    356 _CRC0AUTO	=	0x0096
                    0097    357 G$DC0CN$0$0 == 0x0097
                    0097    358 _DC0CN	=	0x0097
                    0097    359 G$CRC0CNT$0$0 == 0x0097
                    0097    360 _CRC0CNT	=	0x0097
                    0098    361 G$SCON0$0$0 == 0x0098
                    0098    362 _SCON0	=	0x0098
                    0099    363 G$SBUF0$0$0 == 0x0099
                    0099    364 _SBUF0	=	0x0099
                    009A    365 G$CPT1CN$0$0 == 0x009a
                    009A    366 _CPT1CN	=	0x009a
                    009B    367 G$CPT0CN$0$0 == 0x009b
                    009B    368 _CPT0CN	=	0x009b
                    009C    369 G$CPT1MD$0$0 == 0x009c
                    009C    370 _CPT1MD	=	0x009c
                    009D    371 G$CPT0MD$0$0 == 0x009d
                    009D    372 _CPT0MD	=	0x009d
                    009E    373 G$CPT1MX$0$0 == 0x009e
                    009E    374 _CPT1MX	=	0x009e
                    009F    375 G$CPT0MX$0$0 == 0x009f
                    009F    376 _CPT0MX	=	0x009f
                    00A0    377 G$P2$0$0 == 0x00a0
                    00A0    378 _P2	=	0x00a0
                    00A1    379 G$SPI0CFG$0$0 == 0x00a1
                    00A1    380 _SPI0CFG	=	0x00a1
                    00A2    381 G$SPI0CKR$0$0 == 0x00a2
                    00A2    382 _SPI0CKR	=	0x00a2
                    00A3    383 G$SPI0DAT$0$0 == 0x00a3
                    00A3    384 _SPI0DAT	=	0x00a3
                    00A4    385 G$P0MDOUT$0$0 == 0x00a4
                    00A4    386 _P0MDOUT	=	0x00a4
                    00A4    387 G$P0DRV$0$0 == 0x00a4
                    00A4    388 _P0DRV	=	0x00a4
                    00A5    389 G$P1MDOUT$0$0 == 0x00a5
                    00A5    390 _P1MDOUT	=	0x00a5
                    00A5    391 G$P1DRV$0$0 == 0x00a5
                    00A5    392 _P1DRV	=	0x00a5
                    00A6    393 G$P2MDOUT$0$0 == 0x00a6
                    00A6    394 _P2MDOUT	=	0x00a6
                    00A6    395 G$P2DRV$0$0 == 0x00a6
                    00A6    396 _P2DRV	=	0x00a6
                    00A7    397 G$SFRPAGE$0$0 == 0x00a7
                    00A7    398 _SFRPAGE	=	0x00a7
                    00A8    399 G$IE$0$0 == 0x00a8
                    00A8    400 _IE	=	0x00a8
                    00A9    401 G$CLKSEL$0$0 == 0x00a9
                    00A9    402 _CLKSEL	=	0x00a9
                    00AA    403 G$EMI0CN$0$0 == 0x00aa
                    00AA    404 _EMI0CN	=	0x00aa
                    00AB    405 G$EMI0CF$0$0 == 0x00ab
                    00AB    406 _EMI0CF	=	0x00ab
                    00AC    407 G$RTC0ADR$0$0 == 0x00ac
                    00AC    408 _RTC0ADR	=	0x00ac
                    00AD    409 G$RTC0DAT$0$0 == 0x00ad
                    00AD    410 _RTC0DAT	=	0x00ad
                    00AE    411 G$RTC0KEY$0$0 == 0x00ae
                    00AE    412 _RTC0KEY	=	0x00ae
                    00AF    413 G$EMI0TC$0$0 == 0x00af
                    00AF    414 _EMI0TC	=	0x00af
                    00AF    415 G$ONESHOT$0$0 == 0x00af
                    00AF    416 _ONESHOT	=	0x00af
                    00B0    417 G$SPI1CN$0$0 == 0x00b0
                    00B0    418 _SPI1CN	=	0x00b0
                    00B1    419 G$OSCXCN$0$0 == 0x00b1
                    00B1    420 _OSCXCN	=	0x00b1
                    00B2    421 G$OSCICN$0$0 == 0x00b2
                    00B2    422 _OSCICN	=	0x00b2
                    00B3    423 G$OSCICL$0$0 == 0x00b3
                    00B3    424 _OSCICL	=	0x00b3
                    00B5    425 G$PMU0CF$0$0 == 0x00b5
                    00B5    426 _PMU0CF	=	0x00b5
                    00B6    427 G$FLSCL$0$0 == 0x00b6
                    00B6    428 _FLSCL	=	0x00b6
                    00B7    429 G$FLKEY$0$0 == 0x00b7
                    00B7    430 _FLKEY	=	0x00b7
                    00B8    431 G$IP$0$0 == 0x00b8
                    00B8    432 _IP	=	0x00b8
                    00B9    433 G$IREF0CN$0$0 == 0x00b9
                    00B9    434 _IREF0CN	=	0x00b9
                    00BA    435 G$ADC0AC$0$0 == 0x00ba
                    00BA    436 _ADC0AC	=	0x00ba
                    00BA    437 G$ADC0PWR$0$0 == 0x00ba
                    00BA    438 _ADC0PWR	=	0x00ba
                    00BB    439 G$ADC0MX$0$0 == 0x00bb
                    00BB    440 _ADC0MX	=	0x00bb
                    00BC    441 G$ADC0CF$0$0 == 0x00bc
                    00BC    442 _ADC0CF	=	0x00bc
                    00BD    443 G$ADC0TK$0$0 == 0x00bd
                    00BD    444 _ADC0TK	=	0x00bd
                    00BD    445 G$ADC0L$0$0 == 0x00bd
                    00BD    446 _ADC0L	=	0x00bd
                    00BE    447 G$ADC0H$0$0 == 0x00be
                    00BE    448 _ADC0H	=	0x00be
                    00BF    449 G$P1MASK$0$0 == 0x00bf
                    00BF    450 _P1MASK	=	0x00bf
                    00C0    451 G$SMB0CN$0$0 == 0x00c0
                    00C0    452 _SMB0CN	=	0x00c0
                    00C1    453 G$SMB0CF$0$0 == 0x00c1
                    00C1    454 _SMB0CF	=	0x00c1
                    00C2    455 G$SMB0DAT$0$0 == 0x00c2
                    00C2    456 _SMB0DAT	=	0x00c2
                    00C3    457 G$ADC0GTL$0$0 == 0x00c3
                    00C3    458 _ADC0GTL	=	0x00c3
                    00C4    459 G$ADC0GTH$0$0 == 0x00c4
                    00C4    460 _ADC0GTH	=	0x00c4
                    00C5    461 G$ADC0LTL$0$0 == 0x00c5
                    00C5    462 _ADC0LTL	=	0x00c5
                    00C6    463 G$ADC0LTH$0$0 == 0x00c6
                    00C6    464 _ADC0LTH	=	0x00c6
                    00C7    465 G$P0MASK$0$0 == 0x00c7
                    00C7    466 _P0MASK	=	0x00c7
                    00C8    467 G$TMR2CN$0$0 == 0x00c8
                    00C8    468 _TMR2CN	=	0x00c8
                    00C9    469 G$REG0CN$0$0 == 0x00c9
                    00C9    470 _REG0CN	=	0x00c9
                    00CA    471 G$TMR2RLL$0$0 == 0x00ca
                    00CA    472 _TMR2RLL	=	0x00ca
                    00CB    473 G$TMR2RLH$0$0 == 0x00cb
                    00CB    474 _TMR2RLH	=	0x00cb
                    00CC    475 G$TMR2L$0$0 == 0x00cc
                    00CC    476 _TMR2L	=	0x00cc
                    00CD    477 G$TMR2H$0$0 == 0x00cd
                    00CD    478 _TMR2H	=	0x00cd
                    00CE    479 G$PCA0CPM5$0$0 == 0x00ce
                    00CE    480 _PCA0CPM5	=	0x00ce
                    00CF    481 G$P1MAT$0$0 == 0x00cf
                    00CF    482 _P1MAT	=	0x00cf
                    00D0    483 G$PSW$0$0 == 0x00d0
                    00D0    484 _PSW	=	0x00d0
                    00D1    485 G$REF0CN$0$0 == 0x00d1
                    00D1    486 _REF0CN	=	0x00d1
                    00D2    487 G$PCA0CPL5$0$0 == 0x00d2
                    00D2    488 _PCA0CPL5	=	0x00d2
                    00D3    489 G$PCA0CPH5$0$0 == 0x00d3
                    00D3    490 _PCA0CPH5	=	0x00d3
                    00D4    491 G$P0SKIP$0$0 == 0x00d4
                    00D4    492 _P0SKIP	=	0x00d4
                    00D5    493 G$P1SKIP$0$0 == 0x00d5
                    00D5    494 _P1SKIP	=	0x00d5
                    00D6    495 G$P2SKIP$0$0 == 0x00d6
                    00D6    496 _P2SKIP	=	0x00d6
                    00D7    497 G$P0MAT$0$0 == 0x00d7
                    00D7    498 _P0MAT	=	0x00d7
                    00D8    499 G$PCA0CN$0$0 == 0x00d8
                    00D8    500 _PCA0CN	=	0x00d8
                    00D9    501 G$PCA0MD$0$0 == 0x00d9
                    00D9    502 _PCA0MD	=	0x00d9
                    00DA    503 G$PCA0CPM0$0$0 == 0x00da
                    00DA    504 _PCA0CPM0	=	0x00da
                    00DB    505 G$PCA0CPM1$0$0 == 0x00db
                    00DB    506 _PCA0CPM1	=	0x00db
                    00DC    507 G$PCA0CPM2$0$0 == 0x00dc
                    00DC    508 _PCA0CPM2	=	0x00dc
                    00DD    509 G$PCA0CPM3$0$0 == 0x00dd
                    00DD    510 _PCA0CPM3	=	0x00dd
                    00DE    511 G$PCA0CPM4$0$0 == 0x00de
                    00DE    512 _PCA0CPM4	=	0x00de
                    00DF    513 G$PCA0PWM$0$0 == 0x00df
                    00DF    514 _PCA0PWM	=	0x00df
                    00E0    515 G$ACC$0$0 == 0x00e0
                    00E0    516 _ACC	=	0x00e0
                    00E1    517 G$XBR0$0$0 == 0x00e1
                    00E1    518 _XBR0	=	0x00e1
                    00E2    519 G$XBR1$0$0 == 0x00e2
                    00E2    520 _XBR1	=	0x00e2
                    00E3    521 G$XBR2$0$0 == 0x00e3
                    00E3    522 _XBR2	=	0x00e3
                    00E4    523 G$IT01CF$0$0 == 0x00e4
                    00E4    524 _IT01CF	=	0x00e4
                    00E5    525 G$FLWR$0$0 == 0x00e5
                    00E5    526 _FLWR	=	0x00e5
                    00E6    527 G$EIE1$0$0 == 0x00e6
                    00E6    528 _EIE1	=	0x00e6
                    00E7    529 G$EIE2$0$0 == 0x00e7
                    00E7    530 _EIE2	=	0x00e7
                    00E8    531 G$ADC0CN$0$0 == 0x00e8
                    00E8    532 _ADC0CN	=	0x00e8
                    00E9    533 G$PCA0CPL1$0$0 == 0x00e9
                    00E9    534 _PCA0CPL1	=	0x00e9
                    00EA    535 G$PCA0CPH1$0$0 == 0x00ea
                    00EA    536 _PCA0CPH1	=	0x00ea
                    00EB    537 G$PCA0CPL2$0$0 == 0x00eb
                    00EB    538 _PCA0CPL2	=	0x00eb
                    00EC    539 G$PCA0CPH2$0$0 == 0x00ec
                    00EC    540 _PCA0CPH2	=	0x00ec
                    00ED    541 G$PCA0CPL3$0$0 == 0x00ed
                    00ED    542 _PCA0CPL3	=	0x00ed
                    00EE    543 G$PCA0CPH3$0$0 == 0x00ee
                    00EE    544 _PCA0CPH3	=	0x00ee
                    00EF    545 G$RSTSRC$0$0 == 0x00ef
                    00EF    546 _RSTSRC	=	0x00ef
                    00F0    547 G$B$0$0 == 0x00f0
                    00F0    548 _B	=	0x00f0
                    00F1    549 G$P0MDIN$0$0 == 0x00f1
                    00F1    550 _P0MDIN	=	0x00f1
                    00F2    551 G$P1MDIN$0$0 == 0x00f2
                    00F2    552 _P1MDIN	=	0x00f2
                    00F3    553 G$P2MDIN$0$0 == 0x00f3
                    00F3    554 _P2MDIN	=	0x00f3
                    00F4    555 G$SMB0ADR$0$0 == 0x00f4
                    00F4    556 _SMB0ADR	=	0x00f4
                    00F5    557 G$SMB0ADM$0$0 == 0x00f5
                    00F5    558 _SMB0ADM	=	0x00f5
                    00F6    559 G$EIP1$0$0 == 0x00f6
                    00F6    560 _EIP1	=	0x00f6
                    00F7    561 G$EIP2$0$0 == 0x00f7
                    00F7    562 _EIP2	=	0x00f7
                    00F8    563 G$SPI0CN$0$0 == 0x00f8
                    00F8    564 _SPI0CN	=	0x00f8
                    00F9    565 G$PCA0L$0$0 == 0x00f9
                    00F9    566 _PCA0L	=	0x00f9
                    00FA    567 G$PCA0H$0$0 == 0x00fa
                    00FA    568 _PCA0H	=	0x00fa
                    00FB    569 G$PCA0CPL0$0$0 == 0x00fb
                    00FB    570 _PCA0CPL0	=	0x00fb
                    00FC    571 G$PCA0CPH0$0$0 == 0x00fc
                    00FC    572 _PCA0CPH0	=	0x00fc
                    00FD    573 G$PCA0CPL4$0$0 == 0x00fd
                    00FD    574 _PCA0CPL4	=	0x00fd
                    00FE    575 G$PCA0CPH4$0$0 == 0x00fe
                    00FE    576 _PCA0CPH4	=	0x00fe
                    00FF    577 G$VDM0CN$0$0 == 0x00ff
                    00FF    578 _VDM0CN	=	0x00ff
                    8382    579 G$DP$0$0 == 0x8382
                    8382    580 _DP	=	0x8382
                    8685    581 G$TOFF$0$0 == 0x8685
                    8685    582 _TOFF	=	0x8685
                    9392    583 G$TMR3RL$0$0 == 0x9392
                    9392    584 _TMR3RL	=	0x9392
                    9594    585 G$TMR3$0$0 == 0x9594
                    9594    586 _TMR3	=	0x9594
                    BEBD    587 G$ADC0$0$0 == 0xbebd
                    BEBD    588 _ADC0	=	0xbebd
                    C4C3    589 G$ADC0GT$0$0 == 0xc4c3
                    C4C3    590 _ADC0GT	=	0xc4c3
                    C6C5    591 G$ADC0LT$0$0 == 0xc6c5
                    C6C5    592 _ADC0LT	=	0xc6c5
                    CBCA    593 G$TMR2RL$0$0 == 0xcbca
                    CBCA    594 _TMR2RL	=	0xcbca
                    CDCC    595 G$TMR2$0$0 == 0xcdcc
                    CDCC    596 _TMR2	=	0xcdcc
                    D3D2    597 G$PCA0CP5$0$0 == 0xd3d2
                    D3D2    598 _PCA0CP5	=	0xd3d2
                    EAE9    599 G$PCA0CP1$0$0 == 0xeae9
                    EAE9    600 _PCA0CP1	=	0xeae9
                    ECEB    601 G$PCA0CP2$0$0 == 0xeceb
                    ECEB    602 _PCA0CP2	=	0xeceb
                    EEED    603 G$PCA0CP3$0$0 == 0xeeed
                    EEED    604 _PCA0CP3	=	0xeeed
                    FAF9    605 G$PCA0$0$0 == 0xfaf9
                    FAF9    606 _PCA0	=	0xfaf9
                    FCFB    607 G$PCA0CP0$0$0 == 0xfcfb
                    FCFB    608 _PCA0CP0	=	0xfcfb
                    FEFD    609 G$PCA0CP4$0$0 == 0xfefd
                    FEFD    610 _PCA0CP4	=	0xfefd
                            611 ;--------------------------------------------------------
                            612 ; special function bits
                            613 ;--------------------------------------------------------
                            614 	.area RSEG    (ABS,DATA)
   0000                     615 	.org 0x0000
                    008F    616 G$TF1$0$0 == 0x008f
                    008F    617 _TF1	=	0x008f
                    008E    618 G$TR1$0$0 == 0x008e
                    008E    619 _TR1	=	0x008e
                    008D    620 G$TF0$0$0 == 0x008d
                    008D    621 _TF0	=	0x008d
                    008C    622 G$TR0$0$0 == 0x008c
                    008C    623 _TR0	=	0x008c
                    008B    624 G$IE1$0$0 == 0x008b
                    008B    625 _IE1	=	0x008b
                    008A    626 G$IT1$0$0 == 0x008a
                    008A    627 _IT1	=	0x008a
                    0089    628 G$IE0$0$0 == 0x0089
                    0089    629 _IE0	=	0x0089
                    0088    630 G$IT0$0$0 == 0x0088
                    0088    631 _IT0	=	0x0088
                    009F    632 G$S0MODE$0$0 == 0x009f
                    009F    633 _S0MODE	=	0x009f
                    009D    634 G$MCE0$0$0 == 0x009d
                    009D    635 _MCE0	=	0x009d
                    009C    636 G$REN0$0$0 == 0x009c
                    009C    637 _REN0	=	0x009c
                    009B    638 G$TB80$0$0 == 0x009b
                    009B    639 _TB80	=	0x009b
                    009A    640 G$RB80$0$0 == 0x009a
                    009A    641 _RB80	=	0x009a
                    0099    642 G$TI0$0$0 == 0x0099
                    0099    643 _TI0	=	0x0099
                    0098    644 G$RI0$0$0 == 0x0098
                    0098    645 _RI0	=	0x0098
                    00AF    646 G$EA$0$0 == 0x00af
                    00AF    647 _EA	=	0x00af
                    00AE    648 G$ESPI0$0$0 == 0x00ae
                    00AE    649 _ESPI0	=	0x00ae
                    00AD    650 G$ET2$0$0 == 0x00ad
                    00AD    651 _ET2	=	0x00ad
                    00AC    652 G$ES0$0$0 == 0x00ac
                    00AC    653 _ES0	=	0x00ac
                    00AB    654 G$ET1$0$0 == 0x00ab
                    00AB    655 _ET1	=	0x00ab
                    00AA    656 G$EX1$0$0 == 0x00aa
                    00AA    657 _EX1	=	0x00aa
                    00A9    658 G$ET0$0$0 == 0x00a9
                    00A9    659 _ET0	=	0x00a9
                    00A8    660 G$EX0$0$0 == 0x00a8
                    00A8    661 _EX0	=	0x00a8
                    00B7    662 G$SPIF1$0$0 == 0x00b7
                    00B7    663 _SPIF1	=	0x00b7
                    00B6    664 G$WCOL1$0$0 == 0x00b6
                    00B6    665 _WCOL1	=	0x00b6
                    00B5    666 G$MODF1$0$0 == 0x00b5
                    00B5    667 _MODF1	=	0x00b5
                    00B4    668 G$RXOVRN1$0$0 == 0x00b4
                    00B4    669 _RXOVRN1	=	0x00b4
                    00B3    670 G$NSS1MD1$0$0 == 0x00b3
                    00B3    671 _NSS1MD1	=	0x00b3
                    00B2    672 G$NSS1MD0$0$0 == 0x00b2
                    00B2    673 _NSS1MD0	=	0x00b2
                    00B1    674 G$TXBMT1$0$0 == 0x00b1
                    00B1    675 _TXBMT1	=	0x00b1
                    00B0    676 G$SPI1EN$0$0 == 0x00b0
                    00B0    677 _SPI1EN	=	0x00b0
                    00BE    678 G$PSPI0$0$0 == 0x00be
                    00BE    679 _PSPI0	=	0x00be
                    00BD    680 G$PT2$0$0 == 0x00bd
                    00BD    681 _PT2	=	0x00bd
                    00BC    682 G$PS0$0$0 == 0x00bc
                    00BC    683 _PS0	=	0x00bc
                    00BB    684 G$PT1$0$0 == 0x00bb
                    00BB    685 _PT1	=	0x00bb
                    00BA    686 G$PX1$0$0 == 0x00ba
                    00BA    687 _PX1	=	0x00ba
                    00B9    688 G$PT0$0$0 == 0x00b9
                    00B9    689 _PT0	=	0x00b9
                    00B8    690 G$PX0$0$0 == 0x00b8
                    00B8    691 _PX0	=	0x00b8
                    00C7    692 G$MASTER$0$0 == 0x00c7
                    00C7    693 _MASTER	=	0x00c7
                    00C6    694 G$TXMODE$0$0 == 0x00c6
                    00C6    695 _TXMODE	=	0x00c6
                    00C5    696 G$STA$0$0 == 0x00c5
                    00C5    697 _STA	=	0x00c5
                    00C4    698 G$STO$0$0 == 0x00c4
                    00C4    699 _STO	=	0x00c4
                    00C3    700 G$ACKRQ$0$0 == 0x00c3
                    00C3    701 _ACKRQ	=	0x00c3
                    00C2    702 G$ARBLOST$0$0 == 0x00c2
                    00C2    703 _ARBLOST	=	0x00c2
                    00C1    704 G$ACK$0$0 == 0x00c1
                    00C1    705 _ACK	=	0x00c1
                    00C0    706 G$SI$0$0 == 0x00c0
                    00C0    707 _SI	=	0x00c0
                    00CF    708 G$TF2H$0$0 == 0x00cf
                    00CF    709 _TF2H	=	0x00cf
                    00CE    710 G$TF2L$0$0 == 0x00ce
                    00CE    711 _TF2L	=	0x00ce
                    00CD    712 G$TF2LEN$0$0 == 0x00cd
                    00CD    713 _TF2LEN	=	0x00cd
                    00CC    714 G$TF2CEN$0$0 == 0x00cc
                    00CC    715 _TF2CEN	=	0x00cc
                    00CB    716 G$T2SPLIT$0$0 == 0x00cb
                    00CB    717 _T2SPLIT	=	0x00cb
                    00CA    718 G$TR2$0$0 == 0x00ca
                    00CA    719 _TR2	=	0x00ca
                    00C9    720 G$T2RCLK$0$0 == 0x00c9
                    00C9    721 _T2RCLK	=	0x00c9
                    00C8    722 G$T2XCLK$0$0 == 0x00c8
                    00C8    723 _T2XCLK	=	0x00c8
                    00D7    724 G$CY$0$0 == 0x00d7
                    00D7    725 _CY	=	0x00d7
                    00D6    726 G$AC$0$0 == 0x00d6
                    00D6    727 _AC	=	0x00d6
                    00D5    728 G$F0$0$0 == 0x00d5
                    00D5    729 _F0	=	0x00d5
                    00D4    730 G$RS1$0$0 == 0x00d4
                    00D4    731 _RS1	=	0x00d4
                    00D3    732 G$RS0$0$0 == 0x00d3
                    00D3    733 _RS0	=	0x00d3
                    00D2    734 G$OV$0$0 == 0x00d2
                    00D2    735 _OV	=	0x00d2
                    00D1    736 G$F1$0$0 == 0x00d1
                    00D1    737 _F1	=	0x00d1
                    00D0    738 G$P$0$0 == 0x00d0
                    00D0    739 _P	=	0x00d0
                    00DF    740 G$CF$0$0 == 0x00df
                    00DF    741 _CF	=	0x00df
                    00DE    742 G$CR$0$0 == 0x00de
                    00DE    743 _CR	=	0x00de
                    00DD    744 G$CCF5$0$0 == 0x00dd
                    00DD    745 _CCF5	=	0x00dd
                    00DC    746 G$CCF4$0$0 == 0x00dc
                    00DC    747 _CCF4	=	0x00dc
                    00DB    748 G$CCF3$0$0 == 0x00db
                    00DB    749 _CCF3	=	0x00db
                    00DA    750 G$CCF2$0$0 == 0x00da
                    00DA    751 _CCF2	=	0x00da
                    00D9    752 G$CCF1$0$0 == 0x00d9
                    00D9    753 _CCF1	=	0x00d9
                    00D8    754 G$CCF0$0$0 == 0x00d8
                    00D8    755 _CCF0	=	0x00d8
                    00EF    756 G$AD0EN$0$0 == 0x00ef
                    00EF    757 _AD0EN	=	0x00ef
                    00EE    758 G$BURSTEN$0$0 == 0x00ee
                    00EE    759 _BURSTEN	=	0x00ee
                    00ED    760 G$AD0INT$0$0 == 0x00ed
                    00ED    761 _AD0INT	=	0x00ed
                    00EC    762 G$AD0BUSY$0$0 == 0x00ec
                    00EC    763 _AD0BUSY	=	0x00ec
                    00EB    764 G$AD0WINT$0$0 == 0x00eb
                    00EB    765 _AD0WINT	=	0x00eb
                    00EA    766 G$AD0CM2$0$0 == 0x00ea
                    00EA    767 _AD0CM2	=	0x00ea
                    00E9    768 G$AD0CM1$0$0 == 0x00e9
                    00E9    769 _AD0CM1	=	0x00e9
                    00E8    770 G$AD0CM0$0$0 == 0x00e8
                    00E8    771 _AD0CM0	=	0x00e8
                    00FF    772 G$SPIF0$0$0 == 0x00ff
                    00FF    773 _SPIF0	=	0x00ff
                    00FE    774 G$WCOL0$0$0 == 0x00fe
                    00FE    775 _WCOL0	=	0x00fe
                    00FD    776 G$MODF0$0$0 == 0x00fd
                    00FD    777 _MODF0	=	0x00fd
                    00FC    778 G$RXOVRN0$0$0 == 0x00fc
                    00FC    779 _RXOVRN0	=	0x00fc
                    00FB    780 G$NSS0MD1$0$0 == 0x00fb
                    00FB    781 _NSS0MD1	=	0x00fb
                    00FA    782 G$NSS0MD0$0$0 == 0x00fa
                    00FA    783 _NSS0MD0	=	0x00fa
                    00F9    784 G$TXBMT0$0$0 == 0x00f9
                    00F9    785 _TXBMT0	=	0x00f9
                    00F8    786 G$SPI0EN$0$0 == 0x00f8
                    00F8    787 _SPI0EN	=	0x00f8
                    0087    788 G$MCU_SDA$0$0 == 0x0087
                    0087    789 _MCU_SDA	=	0x0087
                    0086    790 G$MCU_SCL$0$0 == 0x0086
                    0086    791 _MCU_SCL	=	0x0086
                    00A0    792 G$LED1$0$0 == 0x00a0
                    00A0    793 _LED1	=	0x00a0
                    00A1    794 G$LED2$0$0 == 0x00a1
                    00A1    795 _LED2	=	0x00a1
                    00A2    796 G$LED3$0$0 == 0x00a2
                    00A2    797 _LED3	=	0x00a2
                    00A3    798 G$LED4$0$0 == 0x00a3
                    00A3    799 _LED4	=	0x00a3
                    00A4    800 G$BUZZ$0$0 == 0x00a4
                    00A4    801 _BUZZ	=	0x00a4
                    0090    802 G$MCU_SCK$0$0 == 0x0090
                    0090    803 _MCU_SCK	=	0x0090
                    0091    804 G$MCU_MISO$0$0 == 0x0091
                    0091    805 _MCU_MISO	=	0x0091
                    0092    806 G$MCU_MOSI$0$0 == 0x0092
                    0092    807 _MCU_MOSI	=	0x0092
                    0093    808 G$RF_NSEL$0$0 == 0x0093
                    0093    809 _RF_NSEL	=	0x0093
                    0094    810 G$RF_NIRQ$0$0 == 0x0094
                    0094    811 _RF_NIRQ	=	0x0094
                    0095    812 G$RF_PWRDN$0$0 == 0x0095
                    0095    813 _RF_PWRDN	=	0x0095
                    0096    814 G$LCD_NSEL$0$0 == 0x0096
                    0096    815 _LCD_NSEL	=	0x0096
                    0097    816 G$LCD_A0$0$0 == 0x0097
                    0097    817 _LCD_A0	=	0x0097
                    0080    818 G$PB1$0$0 == 0x0080
                    0080    819 _PB1	=	0x0080
                    0081    820 G$PB2$0$0 == 0x0081
                    0081    821 _PB2	=	0x0081
                    0082    822 G$PB3$0$0 == 0x0082
                    0082    823 _PB3	=	0x0082
                    0083    824 G$PB4$0$0 == 0x0083
                    0083    825 _PB4	=	0x0083
                            826 ;--------------------------------------------------------
                            827 ; overlayable register banks
                            828 ;--------------------------------------------------------
                            829 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     830 	.ds 8
                            831 ;--------------------------------------------------------
                            832 ; internal ram data
                            833 ;--------------------------------------------------------
                            834 	.area DSEG    (DATA)
                            835 ;--------------------------------------------------------
                            836 ; overlayable items in internal ram 
                            837 ;--------------------------------------------------------
                            838 ;--------------------------------------------------------
                            839 ; indirectly addressable internal ram data
                            840 ;--------------------------------------------------------
                            841 	.area ISEG    (DATA)
                            842 ;--------------------------------------------------------
                            843 ; absolute internal ram data
                            844 ;--------------------------------------------------------
                            845 	.area IABS    (ABS,DATA)
                            846 	.area IABS    (ABS,DATA)
                            847 ;--------------------------------------------------------
                            848 ; bit data
                            849 ;--------------------------------------------------------
                            850 	.area BSEG    (BIT)
                            851 ;--------------------------------------------------------
                            852 ; paged external ram data
                            853 ;--------------------------------------------------------
                            854 	.area PSEG    (PAG,XDATA)
                            855 ;--------------------------------------------------------
                            856 ; external ram data
                            857 ;--------------------------------------------------------
                            858 	.area XSEG    (XDATA)
                    0000    859 Lradio_hal.radio_hal_SpiWriteByte$byteToWrite$1$35==.
   0000                     860 _radio_hal_SpiWriteByte_byteToWrite_1_35:
   0000                     861 	.ds 1
                    0001    862 Lradio_hal.radio_hal_SpiWriteData$pData$1$39==.
   0001                     863 _radio_hal_SpiWriteData_PARM_2:
   0001                     864 	.ds 3
                    0004    865 Lradio_hal.radio_hal_SpiWriteData$byteCount$1$39==.
   0004                     866 _radio_hal_SpiWriteData_byteCount_1_39:
   0004                     867 	.ds 1
                    0005    868 Lradio_hal.radio_hal_SpiReadData$pData$1$41==.
   0005                     869 _radio_hal_SpiReadData_PARM_2:
   0005                     870 	.ds 3
                    0008    871 Lradio_hal.radio_hal_SpiReadData$byteCount$1$41==.
   0008                     872 _radio_hal_SpiReadData_byteCount_1_41:
   0008                     873 	.ds 1
                            874 ;--------------------------------------------------------
                            875 ; absolute external ram data
                            876 ;--------------------------------------------------------
                            877 	.area XABS    (ABS,XDATA)
                            878 ;--------------------------------------------------------
                            879 ; external initialized ram data
                            880 ;--------------------------------------------------------
                            881 	.area XISEG   (XDATA)
                            882 	.area HOME    (CODE)
                            883 	.area GSINIT0 (CODE)
                            884 	.area GSINIT1 (CODE)
                            885 	.area GSINIT2 (CODE)
                            886 	.area GSINIT3 (CODE)
                            887 	.area GSINIT4 (CODE)
                            888 	.area GSINIT5 (CODE)
                            889 	.area GSINIT  (CODE)
                            890 	.area GSFINAL (CODE)
                            891 	.area CSEG    (CODE)
                            892 ;--------------------------------------------------------
                            893 ; global & static initialisations
                            894 ;--------------------------------------------------------
                            895 	.area HOME    (CODE)
                            896 	.area GSINIT  (CODE)
                            897 	.area GSFINAL (CODE)
                            898 	.area GSINIT  (CODE)
                            899 ;--------------------------------------------------------
                            900 ; Home
                            901 ;--------------------------------------------------------
                            902 	.area HOME    (CODE)
                            903 	.area HOME    (CODE)
                            904 ;--------------------------------------------------------
                            905 ; code
                            906 ;--------------------------------------------------------
                            907 	.area CSEG    (CODE)
                            908 ;------------------------------------------------------------
                            909 ;Allocation info for local variables in function 'radio_hal_Gpio0Level'
                            910 ;------------------------------------------------------------
                    0000    911 	G$radio_hal_Gpio0Level$0$0 ==.
                    0000    912 	C$radio_hal.c$38$0$0 ==.
                            913 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\Radio\radio_hal.c:38: BIT radio_hal_Gpio0Level(void)
                            914 ;	-----------------------------------------
                            915 ;	 function radio_hal_Gpio0Level
                            916 ;	-----------------------------------------
   0000                     917 _radio_hal_Gpio0Level:
                    0007    918 	ar7 = 0x07
                    0006    919 	ar6 = 0x06
                    0005    920 	ar5 = 0x05
                    0004    921 	ar4 = 0x04
                    0003    922 	ar3 = 0x03
                    0002    923 	ar2 = 0x02
                    0001    924 	ar1 = 0x01
                    0000    925 	ar0 = 0x00
                    0000    926 	C$radio_hal.c$47$1$18 ==.
                            927 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\Radio\radio_hal.c:47: return RF_GPIO0;
   0000 A2 80               928 	mov	c,_PB1
                    0002    929 	C$radio_hal.c$49$1$18 ==.
                    0002    930 	XG$radio_hal_Gpio0Level$0$0 ==.
   0002 22                  931 	ret
                            932 ;------------------------------------------------------------
                            933 ;Allocation info for local variables in function 'radio_hal_Gpio1Level'
                            934 ;------------------------------------------------------------
                    0003    935 	G$radio_hal_Gpio1Level$0$0 ==.
                    0003    936 	C$radio_hal.c$51$1$18 ==.
                            937 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\Radio\radio_hal.c:51: BIT radio_hal_Gpio1Level(void)
                            938 ;	-----------------------------------------
                            939 ;	 function radio_hal_Gpio1Level
                            940 ;	-----------------------------------------
   0003                     941 _radio_hal_Gpio1Level:
                    0003    942 	C$radio_hal.c$60$1$20 ==.
                            943 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\Radio\radio_hal.c:60: return RF_GPIO1;
   0003 A2 81               944 	mov	c,_PB2
                    0005    945 	C$radio_hal.c$62$1$20 ==.
                    0005    946 	XG$radio_hal_Gpio1Level$0$0 ==.
   0005 22                  947 	ret
                            948 ;------------------------------------------------------------
                            949 ;Allocation info for local variables in function 'radio_hal_Gpio2Level'
                            950 ;------------------------------------------------------------
                    0006    951 	G$radio_hal_Gpio2Level$0$0 ==.
                    0006    952 	C$radio_hal.c$64$1$20 ==.
                            953 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\Radio\radio_hal.c:64: BIT radio_hal_Gpio2Level(void)
                            954 ;	-----------------------------------------
                            955 ;	 function radio_hal_Gpio2Level
                            956 ;	-----------------------------------------
   0006                     957 _radio_hal_Gpio2Level:
                    0006    958 	C$radio_hal.c$73$1$22 ==.
                            959 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\Radio\radio_hal.c:73: return RF_GPIO2;
   0006 A2 82               960 	mov	c,_PB3
                    0008    961 	C$radio_hal.c$75$1$22 ==.
                    0008    962 	XG$radio_hal_Gpio2Level$0$0 ==.
   0008 22                  963 	ret
                            964 ;------------------------------------------------------------
                            965 ;Allocation info for local variables in function 'radio_hal_Gpio3Level'
                            966 ;------------------------------------------------------------
                    0009    967 	G$radio_hal_Gpio3Level$0$0 ==.
                    0009    968 	C$radio_hal.c$77$1$22 ==.
                            969 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\Radio\radio_hal.c:77: BIT radio_hal_Gpio3Level(void)
                            970 ;	-----------------------------------------
                            971 ;	 function radio_hal_Gpio3Level
                            972 ;	-----------------------------------------
   0009                     973 _radio_hal_Gpio3Level:
                    0009    974 	C$radio_hal.c$80$1$24 ==.
                            975 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\Radio\radio_hal.c:80: return RF_GPIO3;
   0009 A2 83               976 	mov	c,_PB4
                    000B    977 	C$radio_hal.c$84$1$24 ==.
                    000B    978 	XG$radio_hal_Gpio3Level$0$0 ==.
   000B 22                  979 	ret
                            980 ;------------------------------------------------------------
                            981 ;Allocation info for local variables in function 'radio_hal_NirqLevel'
                            982 ;------------------------------------------------------------
                    000C    983 	G$radio_hal_NirqLevel$0$0 ==.
                    000C    984 	C$radio_hal.c$86$1$24 ==.
                            985 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\Radio\radio_hal.c:86: BIT radio_hal_NirqLevel(void)
                            986 ;	-----------------------------------------
                            987 ;	 function radio_hal_NirqLevel
                            988 ;	-----------------------------------------
   000C                     989 _radio_hal_NirqLevel:
                    000C    990 	C$radio_hal.c$88$1$26 ==.
                            991 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\Radio\radio_hal.c:88: return RF_NIRQ;
   000C A2 94               992 	mov	c,_RF_NIRQ
                    000E    993 	C$radio_hal.c$89$1$26 ==.
                    000E    994 	XG$radio_hal_NirqLevel$0$0 ==.
   000E 22                  995 	ret
                            996 ;------------------------------------------------------------
                            997 ;Allocation info for local variables in function 'radio_hal_AssertShutdown'
                            998 ;------------------------------------------------------------
                    000F    999 	G$radio_hal_AssertShutdown$0$0 ==.
                    000F   1000 	C$radio_hal.c$91$1$26 ==.
                           1001 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\Radio\radio_hal.c:91: void radio_hal_AssertShutdown(void)
                           1002 ;	-----------------------------------------
                           1003 ;	 function radio_hal_AssertShutdown
                           1004 ;	-----------------------------------------
   000F                    1005 _radio_hal_AssertShutdown:
                    000F   1006 	C$radio_hal.c$94$1$28 ==.
                           1007 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\Radio\radio_hal.c:94: RF_PWRDN = 1;
   000F D2 95              1008 	setb	_RF_PWRDN
                    0011   1009 	C$radio_hal.c$98$1$28 ==.
                    0011   1010 	XG$radio_hal_AssertShutdown$0$0 ==.
   0011 22                 1011 	ret
                           1012 ;------------------------------------------------------------
                           1013 ;Allocation info for local variables in function 'radio_hal_DeassertShutdown'
                           1014 ;------------------------------------------------------------
                    0012   1015 	G$radio_hal_DeassertShutdown$0$0 ==.
                    0012   1016 	C$radio_hal.c$100$1$28 ==.
                           1017 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\Radio\radio_hal.c:100: void radio_hal_DeassertShutdown(void)
                           1018 ;	-----------------------------------------
                           1019 ;	 function radio_hal_DeassertShutdown
                           1020 ;	-----------------------------------------
   0012                    1021 _radio_hal_DeassertShutdown:
                    0012   1022 	C$radio_hal.c$103$1$30 ==.
                           1023 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\Radio\radio_hal.c:103: RF_PWRDN = 0;
   0012 C2 95              1024 	clr	_RF_PWRDN
                    0014   1025 	C$radio_hal.c$107$1$30 ==.
                    0014   1026 	XG$radio_hal_DeassertShutdown$0$0 ==.
   0014 22                 1027 	ret
                           1028 ;------------------------------------------------------------
                           1029 ;Allocation info for local variables in function 'radio_hal_ClearNsel'
                           1030 ;------------------------------------------------------------
                    0015   1031 	G$radio_hal_ClearNsel$0$0 ==.
                    0015   1032 	C$radio_hal.c$109$1$30 ==.
                           1033 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\Radio\radio_hal.c:109: void radio_hal_ClearNsel(void)
                           1034 ;	-----------------------------------------
                           1035 ;	 function radio_hal_ClearNsel
                           1036 ;	-----------------------------------------
   0015                    1037 _radio_hal_ClearNsel:
                    0015   1038 	C$radio_hal.c$111$1$32 ==.
                           1039 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\Radio\radio_hal.c:111: RF_NSEL = 0;
   0015 C2 93              1040 	clr	_RF_NSEL
                    0017   1041 	C$radio_hal.c$112$1$32 ==.
                    0017   1042 	XG$radio_hal_ClearNsel$0$0 ==.
   0017 22                 1043 	ret
                           1044 ;------------------------------------------------------------
                           1045 ;Allocation info for local variables in function 'radio_hal_SetNsel'
                           1046 ;------------------------------------------------------------
                    0018   1047 	G$radio_hal_SetNsel$0$0 ==.
                    0018   1048 	C$radio_hal.c$114$1$32 ==.
                           1049 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\Radio\radio_hal.c:114: void radio_hal_SetNsel(void)
                           1050 ;	-----------------------------------------
                           1051 ;	 function radio_hal_SetNsel
                           1052 ;	-----------------------------------------
   0018                    1053 _radio_hal_SetNsel:
                    0018   1054 	C$radio_hal.c$116$1$34 ==.
                           1055 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\Radio\radio_hal.c:116: RF_NSEL = 1;
   0018 D2 93              1056 	setb	_RF_NSEL
                    001A   1057 	C$radio_hal.c$117$1$34 ==.
                    001A   1058 	XG$radio_hal_SetNsel$0$0 ==.
   001A 22                 1059 	ret
                           1060 ;------------------------------------------------------------
                           1061 ;Allocation info for local variables in function 'radio_hal_SpiWriteByte'
                           1062 ;------------------------------------------------------------
                           1063 ;byteToWrite               Allocated with name '_radio_hal_SpiWriteByte_byteToWrite_1_35'
                           1064 ;------------------------------------------------------------
                    001B   1065 	G$radio_hal_SpiWriteByte$0$0 ==.
                    001B   1066 	C$radio_hal.c$119$1$34 ==.
                           1067 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\Radio\radio_hal.c:119: void radio_hal_SpiWriteByte(U8 byteToWrite)
                           1068 ;	-----------------------------------------
                           1069 ;	 function radio_hal_SpiWriteByte
                           1070 ;	-----------------------------------------
   001B                    1071 _radio_hal_SpiWriteByte:
   001B E5 82              1072 	mov	a,dpl
                    001D   1073 	C$radio_hal.c$122$1$36 ==.
                           1074 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\Radio\radio_hal.c:122: bSpi_ReadWriteSpi1(byteToWrite);
   001D 90s00r00           1075 	mov	dptr,#_radio_hal_SpiWriteByte_byteToWrite_1_35
   0020 F0                 1076 	movx	@dptr,a
   0021 F5 82              1077 	mov	dpl,a
   0023 12s00r00           1078 	lcall	_bSpi_ReadWriteSpi1
                    0026   1079 	C$radio_hal.c$126$1$36 ==.
                    0026   1080 	XG$radio_hal_SpiWriteByte$0$0 ==.
   0026 22                 1081 	ret
                           1082 ;------------------------------------------------------------
                           1083 ;Allocation info for local variables in function 'radio_hal_SpiReadByte'
                           1084 ;------------------------------------------------------------
                    0027   1085 	G$radio_hal_SpiReadByte$0$0 ==.
                    0027   1086 	C$radio_hal.c$128$1$36 ==.
                           1087 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\Radio\radio_hal.c:128: U8 radio_hal_SpiReadByte(void)
                           1088 ;	-----------------------------------------
                           1089 ;	 function radio_hal_SpiReadByte
                           1090 ;	-----------------------------------------
   0027                    1091 _radio_hal_SpiReadByte:
                    0027   1092 	C$radio_hal.c$131$1$38 ==.
                           1093 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\Radio\radio_hal.c:131: return bSpi_ReadWriteSpi1(0xFF);
   0027 75 82 FF           1094 	mov	dpl,#0xFF
   002A 12s00r00           1095 	lcall	_bSpi_ReadWriteSpi1
                    002D   1096 	C$radio_hal.c$135$1$38 ==.
                    002D   1097 	XG$radio_hal_SpiReadByte$0$0 ==.
   002D 22                 1098 	ret
                           1099 ;------------------------------------------------------------
                           1100 ;Allocation info for local variables in function 'radio_hal_SpiWriteData'
                           1101 ;------------------------------------------------------------
                           1102 ;pData                     Allocated with name '_radio_hal_SpiWriteData_PARM_2'
                           1103 ;byteCount                 Allocated with name '_radio_hal_SpiWriteData_byteCount_1_39'
                           1104 ;------------------------------------------------------------
                    002E   1105 	G$radio_hal_SpiWriteData$0$0 ==.
                    002E   1106 	C$radio_hal.c$137$1$38 ==.
                           1107 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\Radio\radio_hal.c:137: void radio_hal_SpiWriteData(U8 byteCount, U8* pData)
                           1108 ;	-----------------------------------------
                           1109 ;	 function radio_hal_SpiWriteData
                           1110 ;	-----------------------------------------
   002E                    1111 _radio_hal_SpiWriteData:
   002E E5 82              1112 	mov	a,dpl
                    0030   1113 	C$radio_hal.c$140$1$40 ==.
                           1114 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\Radio\radio_hal.c:140: vSpi_WriteDataSpi1(byteCount, pData);
   0030 90s00r04           1115 	mov	dptr,#_radio_hal_SpiWriteData_byteCount_1_39
   0033 F0                 1116 	movx	@dptr,a
   0034 FF                 1117 	mov	r7,a
   0035 90s00r01           1118 	mov	dptr,#_radio_hal_SpiWriteData_PARM_2
   0038 E0                 1119 	movx	a,@dptr
   0039 FC                 1120 	mov	r4,a
   003A A3                 1121 	inc	dptr
   003B E0                 1122 	movx	a,@dptr
   003C FD                 1123 	mov	r5,a
   003D A3                 1124 	inc	dptr
   003E E0                 1125 	movx	a,@dptr
   003F FE                 1126 	mov	r6,a
   0040 90s00r00           1127 	mov	dptr,#_vSpi_WriteDataSpi1_PARM_2
   0043 EC                 1128 	mov	a,r4
   0044 F0                 1129 	movx	@dptr,a
   0045 A3                 1130 	inc	dptr
   0046 ED                 1131 	mov	a,r5
   0047 F0                 1132 	movx	@dptr,a
   0048 A3                 1133 	inc	dptr
   0049 EE                 1134 	mov	a,r6
   004A F0                 1135 	movx	@dptr,a
   004B 8F 82              1136 	mov	dpl,r7
   004D 12s00r00           1137 	lcall	_vSpi_WriteDataSpi1
                    0050   1138 	C$radio_hal.c$144$1$40 ==.
                    0050   1139 	XG$radio_hal_SpiWriteData$0$0 ==.
   0050 22                 1140 	ret
                           1141 ;------------------------------------------------------------
                           1142 ;Allocation info for local variables in function 'radio_hal_SpiReadData'
                           1143 ;------------------------------------------------------------
                           1144 ;pData                     Allocated with name '_radio_hal_SpiReadData_PARM_2'
                           1145 ;byteCount                 Allocated with name '_radio_hal_SpiReadData_byteCount_1_41'
                           1146 ;------------------------------------------------------------
                    0051   1147 	G$radio_hal_SpiReadData$0$0 ==.
                    0051   1148 	C$radio_hal.c$146$1$40 ==.
                           1149 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\Radio\radio_hal.c:146: void radio_hal_SpiReadData(U8 byteCount, U8* pData)
                           1150 ;	-----------------------------------------
                           1151 ;	 function radio_hal_SpiReadData
                           1152 ;	-----------------------------------------
   0051                    1153 _radio_hal_SpiReadData:
   0051 E5 82              1154 	mov	a,dpl
                    0053   1155 	C$radio_hal.c$149$1$42 ==.
                           1156 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\Radio\radio_hal.c:149: vSpi_ReadDataSpi1(byteCount, pData);
   0053 90s00r08           1157 	mov	dptr,#_radio_hal_SpiReadData_byteCount_1_41
   0056 F0                 1158 	movx	@dptr,a
   0057 FF                 1159 	mov	r7,a
   0058 90s00r05           1160 	mov	dptr,#_radio_hal_SpiReadData_PARM_2
   005B E0                 1161 	movx	a,@dptr
   005C FC                 1162 	mov	r4,a
   005D A3                 1163 	inc	dptr
   005E E0                 1164 	movx	a,@dptr
   005F FD                 1165 	mov	r5,a
   0060 A3                 1166 	inc	dptr
   0061 E0                 1167 	movx	a,@dptr
   0062 FE                 1168 	mov	r6,a
   0063 90s00r00           1169 	mov	dptr,#_vSpi_ReadDataSpi1_PARM_2
   0066 EC                 1170 	mov	a,r4
   0067 F0                 1171 	movx	@dptr,a
   0068 A3                 1172 	inc	dptr
   0069 ED                 1173 	mov	a,r5
   006A F0                 1174 	movx	@dptr,a
   006B A3                 1175 	inc	dptr
   006C EE                 1176 	mov	a,r6
   006D F0                 1177 	movx	@dptr,a
   006E 8F 82              1178 	mov	dpl,r7
   0070 12s00r00           1179 	lcall	_vSpi_ReadDataSpi1
                    0073   1180 	C$radio_hal.c$153$1$42 ==.
                    0073   1181 	XG$radio_hal_SpiReadData$0$0 ==.
   0073 22                 1182 	ret
                           1183 	.area CSEG    (CODE)
                           1184 	.area CONST   (CODE)
                           1185 	.area XINIT   (CODE)
                           1186 	.area CABS    (ABS,CODE)
