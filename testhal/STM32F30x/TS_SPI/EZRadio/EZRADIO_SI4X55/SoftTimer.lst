                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.2.0 #8008 (Jul  6 2012) (MINGW32)
                              4 ; This file was generated Tue Apr 02 14:56:22 2013
                              5 ;--------------------------------------------------------
                              6 	.module SoftTimer
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _PB4
                             13 	.globl _PB3
                             14 	.globl _PB2
                             15 	.globl _PB1
                             16 	.globl _LCD_A0
                             17 	.globl _LCD_NSEL
                             18 	.globl _RF_PWRDN
                             19 	.globl _RF_NIRQ
                             20 	.globl _RF_NSEL
                             21 	.globl _MCU_MOSI
                             22 	.globl _MCU_MISO
                             23 	.globl _MCU_SCK
                             24 	.globl _BUZZ
                             25 	.globl _LED4
                             26 	.globl _LED3
                             27 	.globl _LED2
                             28 	.globl _LED1
                             29 	.globl _MCU_SCL
                             30 	.globl _MCU_SDA
                             31 	.globl _SPI0EN
                             32 	.globl _TXBMT0
                             33 	.globl _NSS0MD0
                             34 	.globl _NSS0MD1
                             35 	.globl _RXOVRN0
                             36 	.globl _MODF0
                             37 	.globl _WCOL0
                             38 	.globl _SPIF0
                             39 	.globl _AD0CM0
                             40 	.globl _AD0CM1
                             41 	.globl _AD0CM2
                             42 	.globl _AD0WINT
                             43 	.globl _AD0BUSY
                             44 	.globl _AD0INT
                             45 	.globl _BURSTEN
                             46 	.globl _AD0EN
                             47 	.globl _CCF0
                             48 	.globl _CCF1
                             49 	.globl _CCF2
                             50 	.globl _CCF3
                             51 	.globl _CCF4
                             52 	.globl _CCF5
                             53 	.globl _CR
                             54 	.globl _CF
                             55 	.globl _P
                             56 	.globl _F1
                             57 	.globl _OV
                             58 	.globl _RS0
                             59 	.globl _RS1
                             60 	.globl _F0
                             61 	.globl _AC
                             62 	.globl _CY
                             63 	.globl _T2XCLK
                             64 	.globl _T2RCLK
                             65 	.globl _TR2
                             66 	.globl _T2SPLIT
                             67 	.globl _TF2CEN
                             68 	.globl _TF2LEN
                             69 	.globl _TF2L
                             70 	.globl _TF2H
                             71 	.globl _SI
                             72 	.globl _ACK
                             73 	.globl _ARBLOST
                             74 	.globl _ACKRQ
                             75 	.globl _STO
                             76 	.globl _STA
                             77 	.globl _TXMODE
                             78 	.globl _MASTER
                             79 	.globl _PX0
                             80 	.globl _PT0
                             81 	.globl _PX1
                             82 	.globl _PT1
                             83 	.globl _PS0
                             84 	.globl _PT2
                             85 	.globl _PSPI0
                             86 	.globl _SPI1EN
                             87 	.globl _TXBMT1
                             88 	.globl _NSS1MD0
                             89 	.globl _NSS1MD1
                             90 	.globl _RXOVRN1
                             91 	.globl _MODF1
                             92 	.globl _WCOL1
                             93 	.globl _SPIF1
                             94 	.globl _EX0
                             95 	.globl _ET0
                             96 	.globl _EX1
                             97 	.globl _ET1
                             98 	.globl _ES0
                             99 	.globl _ET2
                            100 	.globl _ESPI0
                            101 	.globl _EA
                            102 	.globl _RI0
                            103 	.globl _TI0
                            104 	.globl _RB80
                            105 	.globl _TB80
                            106 	.globl _REN0
                            107 	.globl _MCE0
                            108 	.globl _S0MODE
                            109 	.globl _IT0
                            110 	.globl _IE0
                            111 	.globl _IT1
                            112 	.globl _IE1
                            113 	.globl _TR0
                            114 	.globl _TF0
                            115 	.globl _TR1
                            116 	.globl _TF1
                            117 	.globl _PCA0CP4
                            118 	.globl _PCA0CP0
                            119 	.globl _PCA0
                            120 	.globl _PCA0CP3
                            121 	.globl _PCA0CP2
                            122 	.globl _PCA0CP1
                            123 	.globl _PCA0CP5
                            124 	.globl _TMR2
                            125 	.globl _TMR2RL
                            126 	.globl _ADC0LT
                            127 	.globl _ADC0GT
                            128 	.globl _ADC0
                            129 	.globl _TMR3
                            130 	.globl _TMR3RL
                            131 	.globl _TOFF
                            132 	.globl _DP
                            133 	.globl _VDM0CN
                            134 	.globl _PCA0CPH4
                            135 	.globl _PCA0CPL4
                            136 	.globl _PCA0CPH0
                            137 	.globl _PCA0CPL0
                            138 	.globl _PCA0H
                            139 	.globl _PCA0L
                            140 	.globl _SPI0CN
                            141 	.globl _EIP2
                            142 	.globl _EIP1
                            143 	.globl _SMB0ADM
                            144 	.globl _SMB0ADR
                            145 	.globl _P2MDIN
                            146 	.globl _P1MDIN
                            147 	.globl _P0MDIN
                            148 	.globl _B
                            149 	.globl _RSTSRC
                            150 	.globl _PCA0CPH3
                            151 	.globl _PCA0CPL3
                            152 	.globl _PCA0CPH2
                            153 	.globl _PCA0CPL2
                            154 	.globl _PCA0CPH1
                            155 	.globl _PCA0CPL1
                            156 	.globl _ADC0CN
                            157 	.globl _EIE2
                            158 	.globl _EIE1
                            159 	.globl _FLWR
                            160 	.globl _IT01CF
                            161 	.globl _XBR2
                            162 	.globl _XBR1
                            163 	.globl _XBR0
                            164 	.globl _ACC
                            165 	.globl _PCA0PWM
                            166 	.globl _PCA0CPM4
                            167 	.globl _PCA0CPM3
                            168 	.globl _PCA0CPM2
                            169 	.globl _PCA0CPM1
                            170 	.globl _PCA0CPM0
                            171 	.globl _PCA0MD
                            172 	.globl _PCA0CN
                            173 	.globl _P0MAT
                            174 	.globl _P2SKIP
                            175 	.globl _P1SKIP
                            176 	.globl _P0SKIP
                            177 	.globl _PCA0CPH5
                            178 	.globl _PCA0CPL5
                            179 	.globl _REF0CN
                            180 	.globl _PSW
                            181 	.globl _P1MAT
                            182 	.globl _PCA0CPM5
                            183 	.globl _TMR2H
                            184 	.globl _TMR2L
                            185 	.globl _TMR2RLH
                            186 	.globl _TMR2RLL
                            187 	.globl _REG0CN
                            188 	.globl _TMR2CN
                            189 	.globl _P0MASK
                            190 	.globl _ADC0LTH
                            191 	.globl _ADC0LTL
                            192 	.globl _ADC0GTH
                            193 	.globl _ADC0GTL
                            194 	.globl _SMB0DAT
                            195 	.globl _SMB0CF
                            196 	.globl _SMB0CN
                            197 	.globl _P1MASK
                            198 	.globl _ADC0H
                            199 	.globl _ADC0L
                            200 	.globl _ADC0TK
                            201 	.globl _ADC0CF
                            202 	.globl _ADC0MX
                            203 	.globl _ADC0PWR
                            204 	.globl _ADC0AC
                            205 	.globl _IREF0CN
                            206 	.globl _IP
                            207 	.globl _FLKEY
                            208 	.globl _FLSCL
                            209 	.globl _PMU0CF
                            210 	.globl _OSCICL
                            211 	.globl _OSCICN
                            212 	.globl _OSCXCN
                            213 	.globl _SPI1CN
                            214 	.globl _ONESHOT
                            215 	.globl _EMI0TC
                            216 	.globl _RTC0KEY
                            217 	.globl _RTC0DAT
                            218 	.globl _RTC0ADR
                            219 	.globl _EMI0CF
                            220 	.globl _EMI0CN
                            221 	.globl _CLKSEL
                            222 	.globl _IE
                            223 	.globl _SFRPAGE
                            224 	.globl _P2DRV
                            225 	.globl _P2MDOUT
                            226 	.globl _P1DRV
                            227 	.globl _P1MDOUT
                            228 	.globl _P0DRV
                            229 	.globl _P0MDOUT
                            230 	.globl _SPI0DAT
                            231 	.globl _SPI0CKR
                            232 	.globl _SPI0CFG
                            233 	.globl _P2
                            234 	.globl _CPT0MX
                            235 	.globl _CPT1MX
                            236 	.globl _CPT0MD
                            237 	.globl _CPT1MD
                            238 	.globl _CPT0CN
                            239 	.globl _CPT1CN
                            240 	.globl _SBUF0
                            241 	.globl _SCON0
                            242 	.globl _CRC0CNT
                            243 	.globl _DC0CN
                            244 	.globl _CRC0AUTO
                            245 	.globl _DC0CF
                            246 	.globl _TMR3H
                            247 	.globl _CRC0FLIP
                            248 	.globl _TMR3L
                            249 	.globl _CRC0IN
                            250 	.globl _TMR3RLH
                            251 	.globl _CRC0CN
                            252 	.globl _TMR3RLL
                            253 	.globl _CRC0DAT
                            254 	.globl _TMR3CN
                            255 	.globl _P1
                            256 	.globl _PSCTL
                            257 	.globl _CKCON
                            258 	.globl _TH1
                            259 	.globl _TH0
                            260 	.globl _TL1
                            261 	.globl _TL0
                            262 	.globl _TMOD
                            263 	.globl _TCON
                            264 	.globl _PCON
                            265 	.globl _TOFFH
                            266 	.globl _SPI1DAT
                            267 	.globl _TOFFL
                            268 	.globl _SPI1CKR
                            269 	.globl _SPI1CFG
                            270 	.globl _DPH
                            271 	.globl _DPL
                            272 	.globl _SP
                            273 	.globl _P0
                            274 	.globl _SoftTimer_Add_PARM_2
                            275 	.globl _SoftTimer_Channels
                            276 	.globl _SoftTimer_Add
                            277 	.globl _SoftTimer_Remove
                            278 	.globl _SoftTimer_Elapsed
                            279 	.globl _Timer2ISR
                            280 	.globl _StartTimer2
                            281 	.globl _StopTimer2
                            282 	.globl _StartTimer3
                            283 	.globl _StopTimer3
                            284 	.globl _Timer3ISR
                            285 ;--------------------------------------------------------
                            286 ; special function registers
                            287 ;--------------------------------------------------------
                            288 	.area RSEG    (ABS,DATA)
   0000                     289 	.org 0x0000
                    0080    290 G$P0$0$0 == 0x0080
                    0080    291 _P0	=	0x0080
                    0081    292 G$SP$0$0 == 0x0081
                    0081    293 _SP	=	0x0081
                    0082    294 G$DPL$0$0 == 0x0082
                    0082    295 _DPL	=	0x0082
                    0083    296 G$DPH$0$0 == 0x0083
                    0083    297 _DPH	=	0x0083
                    0084    298 G$SPI1CFG$0$0 == 0x0084
                    0084    299 _SPI1CFG	=	0x0084
                    0085    300 G$SPI1CKR$0$0 == 0x0085
                    0085    301 _SPI1CKR	=	0x0085
                    0085    302 G$TOFFL$0$0 == 0x0085
                    0085    303 _TOFFL	=	0x0085
                    0086    304 G$SPI1DAT$0$0 == 0x0086
                    0086    305 _SPI1DAT	=	0x0086
                    0086    306 G$TOFFH$0$0 == 0x0086
                    0086    307 _TOFFH	=	0x0086
                    0087    308 G$PCON$0$0 == 0x0087
                    0087    309 _PCON	=	0x0087
                    0088    310 G$TCON$0$0 == 0x0088
                    0088    311 _TCON	=	0x0088
                    0089    312 G$TMOD$0$0 == 0x0089
                    0089    313 _TMOD	=	0x0089
                    008A    314 G$TL0$0$0 == 0x008a
                    008A    315 _TL0	=	0x008a
                    008B    316 G$TL1$0$0 == 0x008b
                    008B    317 _TL1	=	0x008b
                    008C    318 G$TH0$0$0 == 0x008c
                    008C    319 _TH0	=	0x008c
                    008D    320 G$TH1$0$0 == 0x008d
                    008D    321 _TH1	=	0x008d
                    008E    322 G$CKCON$0$0 == 0x008e
                    008E    323 _CKCON	=	0x008e
                    008F    324 G$PSCTL$0$0 == 0x008f
                    008F    325 _PSCTL	=	0x008f
                    0090    326 G$P1$0$0 == 0x0090
                    0090    327 _P1	=	0x0090
                    0091    328 G$TMR3CN$0$0 == 0x0091
                    0091    329 _TMR3CN	=	0x0091
                    0091    330 G$CRC0DAT$0$0 == 0x0091
                    0091    331 _CRC0DAT	=	0x0091
                    0092    332 G$TMR3RLL$0$0 == 0x0092
                    0092    333 _TMR3RLL	=	0x0092
                    0092    334 G$CRC0CN$0$0 == 0x0092
                    0092    335 _CRC0CN	=	0x0092
                    0093    336 G$TMR3RLH$0$0 == 0x0093
                    0093    337 _TMR3RLH	=	0x0093
                    0093    338 G$CRC0IN$0$0 == 0x0093
                    0093    339 _CRC0IN	=	0x0093
                    0094    340 G$TMR3L$0$0 == 0x0094
                    0094    341 _TMR3L	=	0x0094
                    0095    342 G$CRC0FLIP$0$0 == 0x0095
                    0095    343 _CRC0FLIP	=	0x0095
                    0095    344 G$TMR3H$0$0 == 0x0095
                    0095    345 _TMR3H	=	0x0095
                    0096    346 G$DC0CF$0$0 == 0x0096
                    0096    347 _DC0CF	=	0x0096
                    0096    348 G$CRC0AUTO$0$0 == 0x0096
                    0096    349 _CRC0AUTO	=	0x0096
                    0097    350 G$DC0CN$0$0 == 0x0097
                    0097    351 _DC0CN	=	0x0097
                    0097    352 G$CRC0CNT$0$0 == 0x0097
                    0097    353 _CRC0CNT	=	0x0097
                    0098    354 G$SCON0$0$0 == 0x0098
                    0098    355 _SCON0	=	0x0098
                    0099    356 G$SBUF0$0$0 == 0x0099
                    0099    357 _SBUF0	=	0x0099
                    009A    358 G$CPT1CN$0$0 == 0x009a
                    009A    359 _CPT1CN	=	0x009a
                    009B    360 G$CPT0CN$0$0 == 0x009b
                    009B    361 _CPT0CN	=	0x009b
                    009C    362 G$CPT1MD$0$0 == 0x009c
                    009C    363 _CPT1MD	=	0x009c
                    009D    364 G$CPT0MD$0$0 == 0x009d
                    009D    365 _CPT0MD	=	0x009d
                    009E    366 G$CPT1MX$0$0 == 0x009e
                    009E    367 _CPT1MX	=	0x009e
                    009F    368 G$CPT0MX$0$0 == 0x009f
                    009F    369 _CPT0MX	=	0x009f
                    00A0    370 G$P2$0$0 == 0x00a0
                    00A0    371 _P2	=	0x00a0
                    00A1    372 G$SPI0CFG$0$0 == 0x00a1
                    00A1    373 _SPI0CFG	=	0x00a1
                    00A2    374 G$SPI0CKR$0$0 == 0x00a2
                    00A2    375 _SPI0CKR	=	0x00a2
                    00A3    376 G$SPI0DAT$0$0 == 0x00a3
                    00A3    377 _SPI0DAT	=	0x00a3
                    00A4    378 G$P0MDOUT$0$0 == 0x00a4
                    00A4    379 _P0MDOUT	=	0x00a4
                    00A4    380 G$P0DRV$0$0 == 0x00a4
                    00A4    381 _P0DRV	=	0x00a4
                    00A5    382 G$P1MDOUT$0$0 == 0x00a5
                    00A5    383 _P1MDOUT	=	0x00a5
                    00A5    384 G$P1DRV$0$0 == 0x00a5
                    00A5    385 _P1DRV	=	0x00a5
                    00A6    386 G$P2MDOUT$0$0 == 0x00a6
                    00A6    387 _P2MDOUT	=	0x00a6
                    00A6    388 G$P2DRV$0$0 == 0x00a6
                    00A6    389 _P2DRV	=	0x00a6
                    00A7    390 G$SFRPAGE$0$0 == 0x00a7
                    00A7    391 _SFRPAGE	=	0x00a7
                    00A8    392 G$IE$0$0 == 0x00a8
                    00A8    393 _IE	=	0x00a8
                    00A9    394 G$CLKSEL$0$0 == 0x00a9
                    00A9    395 _CLKSEL	=	0x00a9
                    00AA    396 G$EMI0CN$0$0 == 0x00aa
                    00AA    397 _EMI0CN	=	0x00aa
                    00AB    398 G$EMI0CF$0$0 == 0x00ab
                    00AB    399 _EMI0CF	=	0x00ab
                    00AC    400 G$RTC0ADR$0$0 == 0x00ac
                    00AC    401 _RTC0ADR	=	0x00ac
                    00AD    402 G$RTC0DAT$0$0 == 0x00ad
                    00AD    403 _RTC0DAT	=	0x00ad
                    00AE    404 G$RTC0KEY$0$0 == 0x00ae
                    00AE    405 _RTC0KEY	=	0x00ae
                    00AF    406 G$EMI0TC$0$0 == 0x00af
                    00AF    407 _EMI0TC	=	0x00af
                    00AF    408 G$ONESHOT$0$0 == 0x00af
                    00AF    409 _ONESHOT	=	0x00af
                    00B0    410 G$SPI1CN$0$0 == 0x00b0
                    00B0    411 _SPI1CN	=	0x00b0
                    00B1    412 G$OSCXCN$0$0 == 0x00b1
                    00B1    413 _OSCXCN	=	0x00b1
                    00B2    414 G$OSCICN$0$0 == 0x00b2
                    00B2    415 _OSCICN	=	0x00b2
                    00B3    416 G$OSCICL$0$0 == 0x00b3
                    00B3    417 _OSCICL	=	0x00b3
                    00B5    418 G$PMU0CF$0$0 == 0x00b5
                    00B5    419 _PMU0CF	=	0x00b5
                    00B6    420 G$FLSCL$0$0 == 0x00b6
                    00B6    421 _FLSCL	=	0x00b6
                    00B7    422 G$FLKEY$0$0 == 0x00b7
                    00B7    423 _FLKEY	=	0x00b7
                    00B8    424 G$IP$0$0 == 0x00b8
                    00B8    425 _IP	=	0x00b8
                    00B9    426 G$IREF0CN$0$0 == 0x00b9
                    00B9    427 _IREF0CN	=	0x00b9
                    00BA    428 G$ADC0AC$0$0 == 0x00ba
                    00BA    429 _ADC0AC	=	0x00ba
                    00BA    430 G$ADC0PWR$0$0 == 0x00ba
                    00BA    431 _ADC0PWR	=	0x00ba
                    00BB    432 G$ADC0MX$0$0 == 0x00bb
                    00BB    433 _ADC0MX	=	0x00bb
                    00BC    434 G$ADC0CF$0$0 == 0x00bc
                    00BC    435 _ADC0CF	=	0x00bc
                    00BD    436 G$ADC0TK$0$0 == 0x00bd
                    00BD    437 _ADC0TK	=	0x00bd
                    00BD    438 G$ADC0L$0$0 == 0x00bd
                    00BD    439 _ADC0L	=	0x00bd
                    00BE    440 G$ADC0H$0$0 == 0x00be
                    00BE    441 _ADC0H	=	0x00be
                    00BF    442 G$P1MASK$0$0 == 0x00bf
                    00BF    443 _P1MASK	=	0x00bf
                    00C0    444 G$SMB0CN$0$0 == 0x00c0
                    00C0    445 _SMB0CN	=	0x00c0
                    00C1    446 G$SMB0CF$0$0 == 0x00c1
                    00C1    447 _SMB0CF	=	0x00c1
                    00C2    448 G$SMB0DAT$0$0 == 0x00c2
                    00C2    449 _SMB0DAT	=	0x00c2
                    00C3    450 G$ADC0GTL$0$0 == 0x00c3
                    00C3    451 _ADC0GTL	=	0x00c3
                    00C4    452 G$ADC0GTH$0$0 == 0x00c4
                    00C4    453 _ADC0GTH	=	0x00c4
                    00C5    454 G$ADC0LTL$0$0 == 0x00c5
                    00C5    455 _ADC0LTL	=	0x00c5
                    00C6    456 G$ADC0LTH$0$0 == 0x00c6
                    00C6    457 _ADC0LTH	=	0x00c6
                    00C7    458 G$P0MASK$0$0 == 0x00c7
                    00C7    459 _P0MASK	=	0x00c7
                    00C8    460 G$TMR2CN$0$0 == 0x00c8
                    00C8    461 _TMR2CN	=	0x00c8
                    00C9    462 G$REG0CN$0$0 == 0x00c9
                    00C9    463 _REG0CN	=	0x00c9
                    00CA    464 G$TMR2RLL$0$0 == 0x00ca
                    00CA    465 _TMR2RLL	=	0x00ca
                    00CB    466 G$TMR2RLH$0$0 == 0x00cb
                    00CB    467 _TMR2RLH	=	0x00cb
                    00CC    468 G$TMR2L$0$0 == 0x00cc
                    00CC    469 _TMR2L	=	0x00cc
                    00CD    470 G$TMR2H$0$0 == 0x00cd
                    00CD    471 _TMR2H	=	0x00cd
                    00CE    472 G$PCA0CPM5$0$0 == 0x00ce
                    00CE    473 _PCA0CPM5	=	0x00ce
                    00CF    474 G$P1MAT$0$0 == 0x00cf
                    00CF    475 _P1MAT	=	0x00cf
                    00D0    476 G$PSW$0$0 == 0x00d0
                    00D0    477 _PSW	=	0x00d0
                    00D1    478 G$REF0CN$0$0 == 0x00d1
                    00D1    479 _REF0CN	=	0x00d1
                    00D2    480 G$PCA0CPL5$0$0 == 0x00d2
                    00D2    481 _PCA0CPL5	=	0x00d2
                    00D3    482 G$PCA0CPH5$0$0 == 0x00d3
                    00D3    483 _PCA0CPH5	=	0x00d3
                    00D4    484 G$P0SKIP$0$0 == 0x00d4
                    00D4    485 _P0SKIP	=	0x00d4
                    00D5    486 G$P1SKIP$0$0 == 0x00d5
                    00D5    487 _P1SKIP	=	0x00d5
                    00D6    488 G$P2SKIP$0$0 == 0x00d6
                    00D6    489 _P2SKIP	=	0x00d6
                    00D7    490 G$P0MAT$0$0 == 0x00d7
                    00D7    491 _P0MAT	=	0x00d7
                    00D8    492 G$PCA0CN$0$0 == 0x00d8
                    00D8    493 _PCA0CN	=	0x00d8
                    00D9    494 G$PCA0MD$0$0 == 0x00d9
                    00D9    495 _PCA0MD	=	0x00d9
                    00DA    496 G$PCA0CPM0$0$0 == 0x00da
                    00DA    497 _PCA0CPM0	=	0x00da
                    00DB    498 G$PCA0CPM1$0$0 == 0x00db
                    00DB    499 _PCA0CPM1	=	0x00db
                    00DC    500 G$PCA0CPM2$0$0 == 0x00dc
                    00DC    501 _PCA0CPM2	=	0x00dc
                    00DD    502 G$PCA0CPM3$0$0 == 0x00dd
                    00DD    503 _PCA0CPM3	=	0x00dd
                    00DE    504 G$PCA0CPM4$0$0 == 0x00de
                    00DE    505 _PCA0CPM4	=	0x00de
                    00DF    506 G$PCA0PWM$0$0 == 0x00df
                    00DF    507 _PCA0PWM	=	0x00df
                    00E0    508 G$ACC$0$0 == 0x00e0
                    00E0    509 _ACC	=	0x00e0
                    00E1    510 G$XBR0$0$0 == 0x00e1
                    00E1    511 _XBR0	=	0x00e1
                    00E2    512 G$XBR1$0$0 == 0x00e2
                    00E2    513 _XBR1	=	0x00e2
                    00E3    514 G$XBR2$0$0 == 0x00e3
                    00E3    515 _XBR2	=	0x00e3
                    00E4    516 G$IT01CF$0$0 == 0x00e4
                    00E4    517 _IT01CF	=	0x00e4
                    00E5    518 G$FLWR$0$0 == 0x00e5
                    00E5    519 _FLWR	=	0x00e5
                    00E6    520 G$EIE1$0$0 == 0x00e6
                    00E6    521 _EIE1	=	0x00e6
                    00E7    522 G$EIE2$0$0 == 0x00e7
                    00E7    523 _EIE2	=	0x00e7
                    00E8    524 G$ADC0CN$0$0 == 0x00e8
                    00E8    525 _ADC0CN	=	0x00e8
                    00E9    526 G$PCA0CPL1$0$0 == 0x00e9
                    00E9    527 _PCA0CPL1	=	0x00e9
                    00EA    528 G$PCA0CPH1$0$0 == 0x00ea
                    00EA    529 _PCA0CPH1	=	0x00ea
                    00EB    530 G$PCA0CPL2$0$0 == 0x00eb
                    00EB    531 _PCA0CPL2	=	0x00eb
                    00EC    532 G$PCA0CPH2$0$0 == 0x00ec
                    00EC    533 _PCA0CPH2	=	0x00ec
                    00ED    534 G$PCA0CPL3$0$0 == 0x00ed
                    00ED    535 _PCA0CPL3	=	0x00ed
                    00EE    536 G$PCA0CPH3$0$0 == 0x00ee
                    00EE    537 _PCA0CPH3	=	0x00ee
                    00EF    538 G$RSTSRC$0$0 == 0x00ef
                    00EF    539 _RSTSRC	=	0x00ef
                    00F0    540 G$B$0$0 == 0x00f0
                    00F0    541 _B	=	0x00f0
                    00F1    542 G$P0MDIN$0$0 == 0x00f1
                    00F1    543 _P0MDIN	=	0x00f1
                    00F2    544 G$P1MDIN$0$0 == 0x00f2
                    00F2    545 _P1MDIN	=	0x00f2
                    00F3    546 G$P2MDIN$0$0 == 0x00f3
                    00F3    547 _P2MDIN	=	0x00f3
                    00F4    548 G$SMB0ADR$0$0 == 0x00f4
                    00F4    549 _SMB0ADR	=	0x00f4
                    00F5    550 G$SMB0ADM$0$0 == 0x00f5
                    00F5    551 _SMB0ADM	=	0x00f5
                    00F6    552 G$EIP1$0$0 == 0x00f6
                    00F6    553 _EIP1	=	0x00f6
                    00F7    554 G$EIP2$0$0 == 0x00f7
                    00F7    555 _EIP2	=	0x00f7
                    00F8    556 G$SPI0CN$0$0 == 0x00f8
                    00F8    557 _SPI0CN	=	0x00f8
                    00F9    558 G$PCA0L$0$0 == 0x00f9
                    00F9    559 _PCA0L	=	0x00f9
                    00FA    560 G$PCA0H$0$0 == 0x00fa
                    00FA    561 _PCA0H	=	0x00fa
                    00FB    562 G$PCA0CPL0$0$0 == 0x00fb
                    00FB    563 _PCA0CPL0	=	0x00fb
                    00FC    564 G$PCA0CPH0$0$0 == 0x00fc
                    00FC    565 _PCA0CPH0	=	0x00fc
                    00FD    566 G$PCA0CPL4$0$0 == 0x00fd
                    00FD    567 _PCA0CPL4	=	0x00fd
                    00FE    568 G$PCA0CPH4$0$0 == 0x00fe
                    00FE    569 _PCA0CPH4	=	0x00fe
                    00FF    570 G$VDM0CN$0$0 == 0x00ff
                    00FF    571 _VDM0CN	=	0x00ff
                    8382    572 G$DP$0$0 == 0x8382
                    8382    573 _DP	=	0x8382
                    8685    574 G$TOFF$0$0 == 0x8685
                    8685    575 _TOFF	=	0x8685
                    9392    576 G$TMR3RL$0$0 == 0x9392
                    9392    577 _TMR3RL	=	0x9392
                    9594    578 G$TMR3$0$0 == 0x9594
                    9594    579 _TMR3	=	0x9594
                    BEBD    580 G$ADC0$0$0 == 0xbebd
                    BEBD    581 _ADC0	=	0xbebd
                    C4C3    582 G$ADC0GT$0$0 == 0xc4c3
                    C4C3    583 _ADC0GT	=	0xc4c3
                    C6C5    584 G$ADC0LT$0$0 == 0xc6c5
                    C6C5    585 _ADC0LT	=	0xc6c5
                    CBCA    586 G$TMR2RL$0$0 == 0xcbca
                    CBCA    587 _TMR2RL	=	0xcbca
                    CDCC    588 G$TMR2$0$0 == 0xcdcc
                    CDCC    589 _TMR2	=	0xcdcc
                    D3D2    590 G$PCA0CP5$0$0 == 0xd3d2
                    D3D2    591 _PCA0CP5	=	0xd3d2
                    EAE9    592 G$PCA0CP1$0$0 == 0xeae9
                    EAE9    593 _PCA0CP1	=	0xeae9
                    ECEB    594 G$PCA0CP2$0$0 == 0xeceb
                    ECEB    595 _PCA0CP2	=	0xeceb
                    EEED    596 G$PCA0CP3$0$0 == 0xeeed
                    EEED    597 _PCA0CP3	=	0xeeed
                    FAF9    598 G$PCA0$0$0 == 0xfaf9
                    FAF9    599 _PCA0	=	0xfaf9
                    FCFB    600 G$PCA0CP0$0$0 == 0xfcfb
                    FCFB    601 _PCA0CP0	=	0xfcfb
                    FEFD    602 G$PCA0CP4$0$0 == 0xfefd
                    FEFD    603 _PCA0CP4	=	0xfefd
                            604 ;--------------------------------------------------------
                            605 ; special function bits
                            606 ;--------------------------------------------------------
                            607 	.area RSEG    (ABS,DATA)
   0000                     608 	.org 0x0000
                    008F    609 G$TF1$0$0 == 0x008f
                    008F    610 _TF1	=	0x008f
                    008E    611 G$TR1$0$0 == 0x008e
                    008E    612 _TR1	=	0x008e
                    008D    613 G$TF0$0$0 == 0x008d
                    008D    614 _TF0	=	0x008d
                    008C    615 G$TR0$0$0 == 0x008c
                    008C    616 _TR0	=	0x008c
                    008B    617 G$IE1$0$0 == 0x008b
                    008B    618 _IE1	=	0x008b
                    008A    619 G$IT1$0$0 == 0x008a
                    008A    620 _IT1	=	0x008a
                    0089    621 G$IE0$0$0 == 0x0089
                    0089    622 _IE0	=	0x0089
                    0088    623 G$IT0$0$0 == 0x0088
                    0088    624 _IT0	=	0x0088
                    009F    625 G$S0MODE$0$0 == 0x009f
                    009F    626 _S0MODE	=	0x009f
                    009D    627 G$MCE0$0$0 == 0x009d
                    009D    628 _MCE0	=	0x009d
                    009C    629 G$REN0$0$0 == 0x009c
                    009C    630 _REN0	=	0x009c
                    009B    631 G$TB80$0$0 == 0x009b
                    009B    632 _TB80	=	0x009b
                    009A    633 G$RB80$0$0 == 0x009a
                    009A    634 _RB80	=	0x009a
                    0099    635 G$TI0$0$0 == 0x0099
                    0099    636 _TI0	=	0x0099
                    0098    637 G$RI0$0$0 == 0x0098
                    0098    638 _RI0	=	0x0098
                    00AF    639 G$EA$0$0 == 0x00af
                    00AF    640 _EA	=	0x00af
                    00AE    641 G$ESPI0$0$0 == 0x00ae
                    00AE    642 _ESPI0	=	0x00ae
                    00AD    643 G$ET2$0$0 == 0x00ad
                    00AD    644 _ET2	=	0x00ad
                    00AC    645 G$ES0$0$0 == 0x00ac
                    00AC    646 _ES0	=	0x00ac
                    00AB    647 G$ET1$0$0 == 0x00ab
                    00AB    648 _ET1	=	0x00ab
                    00AA    649 G$EX1$0$0 == 0x00aa
                    00AA    650 _EX1	=	0x00aa
                    00A9    651 G$ET0$0$0 == 0x00a9
                    00A9    652 _ET0	=	0x00a9
                    00A8    653 G$EX0$0$0 == 0x00a8
                    00A8    654 _EX0	=	0x00a8
                    00B7    655 G$SPIF1$0$0 == 0x00b7
                    00B7    656 _SPIF1	=	0x00b7
                    00B6    657 G$WCOL1$0$0 == 0x00b6
                    00B6    658 _WCOL1	=	0x00b6
                    00B5    659 G$MODF1$0$0 == 0x00b5
                    00B5    660 _MODF1	=	0x00b5
                    00B4    661 G$RXOVRN1$0$0 == 0x00b4
                    00B4    662 _RXOVRN1	=	0x00b4
                    00B3    663 G$NSS1MD1$0$0 == 0x00b3
                    00B3    664 _NSS1MD1	=	0x00b3
                    00B2    665 G$NSS1MD0$0$0 == 0x00b2
                    00B2    666 _NSS1MD0	=	0x00b2
                    00B1    667 G$TXBMT1$0$0 == 0x00b1
                    00B1    668 _TXBMT1	=	0x00b1
                    00B0    669 G$SPI1EN$0$0 == 0x00b0
                    00B0    670 _SPI1EN	=	0x00b0
                    00BE    671 G$PSPI0$0$0 == 0x00be
                    00BE    672 _PSPI0	=	0x00be
                    00BD    673 G$PT2$0$0 == 0x00bd
                    00BD    674 _PT2	=	0x00bd
                    00BC    675 G$PS0$0$0 == 0x00bc
                    00BC    676 _PS0	=	0x00bc
                    00BB    677 G$PT1$0$0 == 0x00bb
                    00BB    678 _PT1	=	0x00bb
                    00BA    679 G$PX1$0$0 == 0x00ba
                    00BA    680 _PX1	=	0x00ba
                    00B9    681 G$PT0$0$0 == 0x00b9
                    00B9    682 _PT0	=	0x00b9
                    00B8    683 G$PX0$0$0 == 0x00b8
                    00B8    684 _PX0	=	0x00b8
                    00C7    685 G$MASTER$0$0 == 0x00c7
                    00C7    686 _MASTER	=	0x00c7
                    00C6    687 G$TXMODE$0$0 == 0x00c6
                    00C6    688 _TXMODE	=	0x00c6
                    00C5    689 G$STA$0$0 == 0x00c5
                    00C5    690 _STA	=	0x00c5
                    00C4    691 G$STO$0$0 == 0x00c4
                    00C4    692 _STO	=	0x00c4
                    00C3    693 G$ACKRQ$0$0 == 0x00c3
                    00C3    694 _ACKRQ	=	0x00c3
                    00C2    695 G$ARBLOST$0$0 == 0x00c2
                    00C2    696 _ARBLOST	=	0x00c2
                    00C1    697 G$ACK$0$0 == 0x00c1
                    00C1    698 _ACK	=	0x00c1
                    00C0    699 G$SI$0$0 == 0x00c0
                    00C0    700 _SI	=	0x00c0
                    00CF    701 G$TF2H$0$0 == 0x00cf
                    00CF    702 _TF2H	=	0x00cf
                    00CE    703 G$TF2L$0$0 == 0x00ce
                    00CE    704 _TF2L	=	0x00ce
                    00CD    705 G$TF2LEN$0$0 == 0x00cd
                    00CD    706 _TF2LEN	=	0x00cd
                    00CC    707 G$TF2CEN$0$0 == 0x00cc
                    00CC    708 _TF2CEN	=	0x00cc
                    00CB    709 G$T2SPLIT$0$0 == 0x00cb
                    00CB    710 _T2SPLIT	=	0x00cb
                    00CA    711 G$TR2$0$0 == 0x00ca
                    00CA    712 _TR2	=	0x00ca
                    00C9    713 G$T2RCLK$0$0 == 0x00c9
                    00C9    714 _T2RCLK	=	0x00c9
                    00C8    715 G$T2XCLK$0$0 == 0x00c8
                    00C8    716 _T2XCLK	=	0x00c8
                    00D7    717 G$CY$0$0 == 0x00d7
                    00D7    718 _CY	=	0x00d7
                    00D6    719 G$AC$0$0 == 0x00d6
                    00D6    720 _AC	=	0x00d6
                    00D5    721 G$F0$0$0 == 0x00d5
                    00D5    722 _F0	=	0x00d5
                    00D4    723 G$RS1$0$0 == 0x00d4
                    00D4    724 _RS1	=	0x00d4
                    00D3    725 G$RS0$0$0 == 0x00d3
                    00D3    726 _RS0	=	0x00d3
                    00D2    727 G$OV$0$0 == 0x00d2
                    00D2    728 _OV	=	0x00d2
                    00D1    729 G$F1$0$0 == 0x00d1
                    00D1    730 _F1	=	0x00d1
                    00D0    731 G$P$0$0 == 0x00d0
                    00D0    732 _P	=	0x00d0
                    00DF    733 G$CF$0$0 == 0x00df
                    00DF    734 _CF	=	0x00df
                    00DE    735 G$CR$0$0 == 0x00de
                    00DE    736 _CR	=	0x00de
                    00DD    737 G$CCF5$0$0 == 0x00dd
                    00DD    738 _CCF5	=	0x00dd
                    00DC    739 G$CCF4$0$0 == 0x00dc
                    00DC    740 _CCF4	=	0x00dc
                    00DB    741 G$CCF3$0$0 == 0x00db
                    00DB    742 _CCF3	=	0x00db
                    00DA    743 G$CCF2$0$0 == 0x00da
                    00DA    744 _CCF2	=	0x00da
                    00D9    745 G$CCF1$0$0 == 0x00d9
                    00D9    746 _CCF1	=	0x00d9
                    00D8    747 G$CCF0$0$0 == 0x00d8
                    00D8    748 _CCF0	=	0x00d8
                    00EF    749 G$AD0EN$0$0 == 0x00ef
                    00EF    750 _AD0EN	=	0x00ef
                    00EE    751 G$BURSTEN$0$0 == 0x00ee
                    00EE    752 _BURSTEN	=	0x00ee
                    00ED    753 G$AD0INT$0$0 == 0x00ed
                    00ED    754 _AD0INT	=	0x00ed
                    00EC    755 G$AD0BUSY$0$0 == 0x00ec
                    00EC    756 _AD0BUSY	=	0x00ec
                    00EB    757 G$AD0WINT$0$0 == 0x00eb
                    00EB    758 _AD0WINT	=	0x00eb
                    00EA    759 G$AD0CM2$0$0 == 0x00ea
                    00EA    760 _AD0CM2	=	0x00ea
                    00E9    761 G$AD0CM1$0$0 == 0x00e9
                    00E9    762 _AD0CM1	=	0x00e9
                    00E8    763 G$AD0CM0$0$0 == 0x00e8
                    00E8    764 _AD0CM0	=	0x00e8
                    00FF    765 G$SPIF0$0$0 == 0x00ff
                    00FF    766 _SPIF0	=	0x00ff
                    00FE    767 G$WCOL0$0$0 == 0x00fe
                    00FE    768 _WCOL0	=	0x00fe
                    00FD    769 G$MODF0$0$0 == 0x00fd
                    00FD    770 _MODF0	=	0x00fd
                    00FC    771 G$RXOVRN0$0$0 == 0x00fc
                    00FC    772 _RXOVRN0	=	0x00fc
                    00FB    773 G$NSS0MD1$0$0 == 0x00fb
                    00FB    774 _NSS0MD1	=	0x00fb
                    00FA    775 G$NSS0MD0$0$0 == 0x00fa
                    00FA    776 _NSS0MD0	=	0x00fa
                    00F9    777 G$TXBMT0$0$0 == 0x00f9
                    00F9    778 _TXBMT0	=	0x00f9
                    00F8    779 G$SPI0EN$0$0 == 0x00f8
                    00F8    780 _SPI0EN	=	0x00f8
                    0087    781 G$MCU_SDA$0$0 == 0x0087
                    0087    782 _MCU_SDA	=	0x0087
                    0086    783 G$MCU_SCL$0$0 == 0x0086
                    0086    784 _MCU_SCL	=	0x0086
                    00A0    785 G$LED1$0$0 == 0x00a0
                    00A0    786 _LED1	=	0x00a0
                    00A1    787 G$LED2$0$0 == 0x00a1
                    00A1    788 _LED2	=	0x00a1
                    00A2    789 G$LED3$0$0 == 0x00a2
                    00A2    790 _LED3	=	0x00a2
                    00A3    791 G$LED4$0$0 == 0x00a3
                    00A3    792 _LED4	=	0x00a3
                    00A4    793 G$BUZZ$0$0 == 0x00a4
                    00A4    794 _BUZZ	=	0x00a4
                    0090    795 G$MCU_SCK$0$0 == 0x0090
                    0090    796 _MCU_SCK	=	0x0090
                    0091    797 G$MCU_MISO$0$0 == 0x0091
                    0091    798 _MCU_MISO	=	0x0091
                    0092    799 G$MCU_MOSI$0$0 == 0x0092
                    0092    800 _MCU_MOSI	=	0x0092
                    0093    801 G$RF_NSEL$0$0 == 0x0093
                    0093    802 _RF_NSEL	=	0x0093
                    0094    803 G$RF_NIRQ$0$0 == 0x0094
                    0094    804 _RF_NIRQ	=	0x0094
                    0095    805 G$RF_PWRDN$0$0 == 0x0095
                    0095    806 _RF_PWRDN	=	0x0095
                    0096    807 G$LCD_NSEL$0$0 == 0x0096
                    0096    808 _LCD_NSEL	=	0x0096
                    0097    809 G$LCD_A0$0$0 == 0x0097
                    0097    810 _LCD_A0	=	0x0097
                    0080    811 G$PB1$0$0 == 0x0080
                    0080    812 _PB1	=	0x0080
                    0081    813 G$PB2$0$0 == 0x0081
                    0081    814 _PB2	=	0x0081
                    0082    815 G$PB3$0$0 == 0x0082
                    0082    816 _PB3	=	0x0082
                    0083    817 G$PB4$0$0 == 0x0083
                    0083    818 _PB4	=	0x0083
                            819 ;--------------------------------------------------------
                            820 ; overlayable register banks
                            821 ;--------------------------------------------------------
                            822 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     823 	.ds 8
                            824 ;--------------------------------------------------------
                            825 ; internal ram data
                            826 ;--------------------------------------------------------
                            827 	.area DSEG    (DATA)
                            828 ;--------------------------------------------------------
                            829 ; overlayable items in internal ram 
                            830 ;--------------------------------------------------------
                            831 ;--------------------------------------------------------
                            832 ; indirectly addressable internal ram data
                            833 ;--------------------------------------------------------
                            834 	.area ISEG    (DATA)
                            835 ;--------------------------------------------------------
                            836 ; absolute internal ram data
                            837 ;--------------------------------------------------------
                            838 	.area IABS    (ABS,DATA)
                            839 	.area IABS    (ABS,DATA)
                            840 ;--------------------------------------------------------
                            841 ; bit data
                            842 ;--------------------------------------------------------
                            843 	.area BSEG    (BIT)
                    0000    844 LSoftTimer.SoftTimer_Remove$lActive$1$17==.
   0000                     845 _SoftTimer_Remove_lActive_1_17:
   0000                     846 	.ds 1
                    0001    847 LSoftTimer.SoftTimer_Elapsed$lActive$1$24==.
   0001                     848 _SoftTimer_Elapsed_lActive_1_24:
   0001                     849 	.ds 1
                    0002    850 LSoftTimer.Timer3ISR$sloc0$1$0==.
   0002                     851 _Timer3ISR_sloc0_1_0:
   0002                     852 	.ds 1
                            853 ;--------------------------------------------------------
                            854 ; paged external ram data
                            855 ;--------------------------------------------------------
                            856 	.area PSEG    (PAG,XDATA)
                            857 ;--------------------------------------------------------
                            858 ; external ram data
                            859 ;--------------------------------------------------------
                            860 	.area XSEG    (XDATA)
                    0000    861 G$SoftTimer_Channels$0$0==.
   0000                     862 _SoftTimer_Channels::
   0000                     863 	.ds 12
                    000C    864 LSoftTimer.SoftTimer_Add$Channel$1$12==.
   000C                     865 _SoftTimer_Add_PARM_2:
   000C                     866 	.ds 1
                    000D    867 LSoftTimer.SoftTimer_Add$Ticks$1$12==.
   000D                     868 _SoftTimer_Add_Ticks_1_12:
   000D                     869 	.ds 2
                    000F    870 LSoftTimer.SoftTimer_Remove$Channel$1$16==.
   000F                     871 _SoftTimer_Remove_Channel_1_16:
   000F                     872 	.ds 1
                    0010    873 LSoftTimer.SoftTimer_Elapsed$Channel$1$23==.
   0010                     874 _SoftTimer_Elapsed_Channel_1_23:
   0010                     875 	.ds 1
                    0011    876 LSoftTimer.StartTimer3$Reload$1$38==.
   0011                     877 _StartTimer3_Reload_1_38:
   0011                     878 	.ds 2
                            879 ;--------------------------------------------------------
                            880 ; absolute external ram data
                            881 ;--------------------------------------------------------
                            882 	.area XABS    (ABS,XDATA)
                            883 ;--------------------------------------------------------
                            884 ; external initialized ram data
                            885 ;--------------------------------------------------------
                            886 	.area XISEG   (XDATA)
                            887 	.area HOME    (CODE)
                            888 	.area GSINIT0 (CODE)
                            889 	.area GSINIT1 (CODE)
                            890 	.area GSINIT2 (CODE)
                            891 	.area GSINIT3 (CODE)
                            892 	.area GSINIT4 (CODE)
                            893 	.area GSINIT5 (CODE)
                            894 	.area GSINIT  (CODE)
                            895 	.area GSFINAL (CODE)
                            896 	.area CSEG    (CODE)
                            897 ;--------------------------------------------------------
                            898 ; global & static initialisations
                            899 ;--------------------------------------------------------
                            900 	.area HOME    (CODE)
                            901 	.area GSINIT  (CODE)
                            902 	.area GSFINAL (CODE)
                            903 	.area GSINIT  (CODE)
                            904 ;--------------------------------------------------------
                            905 ; Home
                            906 ;--------------------------------------------------------
                            907 	.area HOME    (CODE)
                            908 	.area HOME    (CODE)
                            909 ;--------------------------------------------------------
                            910 ; code
                            911 ;--------------------------------------------------------
                            912 	.area CSEG    (CODE)
                            913 ;------------------------------------------------------------
                            914 ;Allocation info for local variables in function 'SoftTimer_Add'
                            915 ;------------------------------------------------------------
                            916 ;Channel                   Allocated with name '_SoftTimer_Add_PARM_2'
                            917 ;Ticks                     Allocated with name '_SoftTimer_Add_Ticks_1_12'
                            918 ;------------------------------------------------------------
                    0000    919 	G$SoftTimer_Add$0$0 ==.
                    0000    920 	C$SoftTimer.c$68$0$0 ==.
                            921 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:68: void SoftTimer_Add(U16 Ticks, eSoftTimerChannels Channel)
                            922 ;	-----------------------------------------
                            923 ;	 function SoftTimer_Add
                            924 ;	-----------------------------------------
   0000                     925 _SoftTimer_Add:
                    0007    926 	ar7 = 0x07
                    0006    927 	ar6 = 0x06
                    0005    928 	ar5 = 0x05
                    0004    929 	ar4 = 0x04
                    0003    930 	ar3 = 0x03
                    0002    931 	ar2 = 0x02
                    0001    932 	ar1 = 0x01
                    0000    933 	ar0 = 0x00
   0000 AF 83               934 	mov	r7,dph
   0002 E5 82               935 	mov	a,dpl
   0004 90s00r0D            936 	mov	dptr,#_SoftTimer_Add_Ticks_1_12
   0007 F0                  937 	movx	@dptr,a
   0008 A3                  938 	inc	dptr
   0009 EF                  939 	mov	a,r7
   000A F0                  940 	movx	@dptr,a
                    000B    941 	C$SoftTimer.c$70$1$13 ==.
                            942 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:70: if ((Channel < SOFTTIMER_NUMOF_CHANNELS) && (Ticks > 0u))
   000B 90s00r0C            943 	mov	dptr,#_SoftTimer_Add_PARM_2
   000E E0                  944 	movx	a,@dptr
   000F FF                  945 	mov	r7,a
   0010 BF 04 00            946 	cjne	r7,#0x04,00114$
   0013                     947 00114$:
   0013 50 41               948 	jnc	00106$
   0015 90s00r0D            949 	mov	dptr,#_SoftTimer_Add_Ticks_1_12
   0018 E0                  950 	movx	a,@dptr
   0019 FD                  951 	mov	r5,a
   001A A3                  952 	inc	dptr
   001B E0                  953 	movx	a,@dptr
   001C FE                  954 	mov	r6,a
   001D 4D                  955 	orl	a,r5
   001E 60 36               956 	jz	00106$
                    0020    957 	C$SoftTimer.c$72$2$14 ==.
                            958 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:72: SoftTimer_Channels[Channel].Elapsed = FALSE;
   0020 EF                  959 	mov	a,r7
   0021 75 F0 03            960 	mov	b,#0x03
   0024 A4                  961 	mul	ab
   0025 24r00               962 	add	a,#_SoftTimer_Channels
   0027 FC                  963 	mov	r4,a
   0028 E4                  964 	clr	a
   0029 34s00               965 	addc	a,#(_SoftTimer_Channels >> 8)
   002B FF                  966 	mov	r7,a
   002C 8C 82               967 	mov	dpl,r4
   002E 8F 83               968 	mov	dph,r7
   0030 A3                  969 	inc	dptr
   0031 A3                  970 	inc	dptr
   0032 E4                  971 	clr	a
   0033 F0                  972 	movx	@dptr,a
                    0034    973 	C$SoftTimer.c$73$2$14 ==.
                            974 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:73: SoftTimer_Channels[Channel].Ticks   = ++Ticks;
   0034 90s00r0D            975 	mov	dptr,#_SoftTimer_Add_Ticks_1_12
   0037 74 01               976 	mov	a,#0x01
   0039 2D                  977 	add	a,r5
   003A F0                  978 	movx	@dptr,a
   003B E4                  979 	clr	a
   003C 3E                  980 	addc	a,r6
   003D A3                  981 	inc	dptr
   003E F0                  982 	movx	@dptr,a
   003F 90s00r0D            983 	mov	dptr,#_SoftTimer_Add_Ticks_1_12
   0042 E0                  984 	movx	a,@dptr
   0043 FD                  985 	mov	r5,a
   0044 A3                  986 	inc	dptr
   0045 E0                  987 	movx	a,@dptr
   0046 FE                  988 	mov	r6,a
   0047 8C 82               989 	mov	dpl,r4
   0049 8F 83               990 	mov	dph,r7
   004B ED                  991 	mov	a,r5
   004C F0                  992 	movx	@dptr,a
   004D A3                  993 	inc	dptr
   004E EE                  994 	mov	a,r6
   004F F0                  995 	movx	@dptr,a
                    0050    996 	C$SoftTimer.c$75$2$14 ==.
                            997 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:75: if (FALSE == TR2)
   0050 20 CA 03            998 	jb	_TR2,00106$
                    0053    999 	C$SoftTimer.c$77$3$15 ==.
                           1000 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:77: StartTimer2();
   0053 12s01rAB           1001 	lcall	_StartTimer2
   0056                    1002 00106$:
                    0056   1003 	C$SoftTimer.c$80$1$13 ==.
                    0056   1004 	XG$SoftTimer_Add$0$0 ==.
   0056 22                 1005 	ret
                           1006 ;------------------------------------------------------------
                           1007 ;Allocation info for local variables in function 'SoftTimer_Remove'
                           1008 ;------------------------------------------------------------
                           1009 ;Channel                   Allocated with name '_SoftTimer_Remove_Channel_1_16'
                           1010 ;ii                        Allocated with name '_SoftTimer_Remove_ii_1_17'
                           1011 ;------------------------------------------------------------
                    0057   1012 	G$SoftTimer_Remove$0$0 ==.
                    0057   1013 	C$SoftTimer.c$92$1$13 ==.
                           1014 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:92: void SoftTimer_Remove(eSoftTimerChannels Channel)
                           1015 ;	-----------------------------------------
                           1016 ;	 function SoftTimer_Remove
                           1017 ;	-----------------------------------------
   0057                    1018 _SoftTimer_Remove:
   0057 E5 82              1019 	mov	a,dpl
   0059 90s00r0F           1020 	mov	dptr,#_SoftTimer_Remove_Channel_1_16
   005C F0                 1021 	movx	@dptr,a
                    005D   1022 	C$SoftTimer.c$95$1$13 ==.
                           1023 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:95: BIT lActive = FALSE;
   005D C2*00              1024 	clr	_SoftTimer_Remove_lActive_1_17
                    005F   1025 	C$SoftTimer.c$97$1$17 ==.
                           1026 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:97: if (Channel < SOFTTIMER_NUMOF_CHANNELS)
   005F 90s00r0F           1027 	mov	dptr,#_SoftTimer_Remove_Channel_1_16
   0062 E0                 1028 	movx	a,@dptr
   0063 FF                 1029 	mov	r7,a
   0064 BF 04 00           1030 	cjne	r7,#0x04,00128$
   0067                    1031 00128$:
   0067 50 1C              1032 	jnc	00102$
                    0069   1033 	C$SoftTimer.c$99$2$18 ==.
                           1034 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:99: SoftTimer_Channels[Channel].Elapsed = FALSE;
   0069 EF                 1035 	mov	a,r7
   006A 75 F0 03           1036 	mov	b,#0x03
   006D A4                 1037 	mul	ab
   006E 24r00              1038 	add	a,#_SoftTimer_Channels
   0070 FE                 1039 	mov	r6,a
   0071 E4                 1040 	clr	a
   0072 34s00              1041 	addc	a,#(_SoftTimer_Channels >> 8)
   0074 FF                 1042 	mov	r7,a
   0075 8E 82              1043 	mov	dpl,r6
   0077 8F 83              1044 	mov	dph,r7
   0079 A3                 1045 	inc	dptr
   007A A3                 1046 	inc	dptr
   007B E4                 1047 	clr	a
   007C F0                 1048 	movx	@dptr,a
                    007D   1049 	C$SoftTimer.c$100$2$18 ==.
                           1050 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:100: SoftTimer_Channels[Channel].Ticks   = 0u;
   007D 8E 82              1051 	mov	dpl,r6
   007F 8F 83              1052 	mov	dph,r7
   0081 E4                 1053 	clr	a
   0082 F0                 1054 	movx	@dptr,a
   0083 A3                 1055 	inc	dptr
   0084 F0                 1056 	movx	@dptr,a
   0085                    1057 00102$:
                    0085   1058 	C$SoftTimer.c$104$1$17 ==.
                           1059 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:104: if (TRUE == TR2)
   0085 A2 CA              1060 	mov	c,_TR2
   0087 E4                 1061 	clr	a
   0088 33                 1062 	rlc	a
   0089 FF                 1063 	mov	r7,a
   008A BF 01 28           1064 	cjne	r7,#0x01,00113$
                    008D   1065 	C$SoftTimer.c$106$3$20 ==.
                           1066 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:106: for (ii = 0u; ii < SOFTTIMER_NUMOF_CHANNELS; ii++)
   008D 7F 00              1067 	mov	r7,#0x00
   008F                    1068 00109$:
   008F BF 04 00           1069 	cjne	r7,#0x04,00132$
   0092                    1070 00132$:
   0092 50 1B              1071 	jnc	00112$
                    0094   1072 	C$SoftTimer.c$108$3$20 ==.
                           1073 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:108: if (SoftTimer_Channels[ii].Ticks > 0u)
   0094 EF                 1074 	mov	a,r7
   0095 75 F0 03           1075 	mov	b,#0x03
   0098 A4                 1076 	mul	ab
   0099 24r00              1077 	add	a,#_SoftTimer_Channels
   009B F5 82              1078 	mov	dpl,a
   009D E4                 1079 	clr	a
   009E 34s00              1080 	addc	a,#(_SoftTimer_Channels >> 8)
   00A0 F5 83              1081 	mov	dph,a
   00A2 E0                 1082 	movx	a,@dptr
   00A3 FD                 1083 	mov	r5,a
   00A4 A3                 1084 	inc	dptr
   00A5 E0                 1085 	movx	a,@dptr
   00A6 FE                 1086 	mov	r6,a
   00A7 4D                 1087 	orl	a,r5
   00A8 60 02              1088 	jz	00111$
                    00AA   1089 	C$SoftTimer.c$110$4$21 ==.
                           1090 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:110: lActive = TRUE;
   00AA D2*00              1091 	setb	_SoftTimer_Remove_lActive_1_17
   00AC                    1092 00111$:
                    00AC   1093 	C$SoftTimer.c$106$2$19 ==.
                           1094 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:106: for (ii = 0u; ii < SOFTTIMER_NUMOF_CHANNELS; ii++)
   00AC 0F                 1095 	inc	r7
   00AD 80 E0              1096 	sjmp	00109$
   00AF                    1097 00112$:
                    00AF   1098 	C$SoftTimer.c$114$2$19 ==.
                           1099 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:114: if (FALSE == lActive)
   00AF 20*00 03           1100 	jb	_SoftTimer_Remove_lActive_1_17,00113$
                    00B2   1101 	C$SoftTimer.c$116$3$22 ==.
                           1102 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:116: StopTimer2();
   00B2 12s01rC0           1103 	lcall	_StopTimer2
   00B5                    1104 00113$:
                    00B5   1105 	C$SoftTimer.c$119$1$17 ==.
                    00B5   1106 	XG$SoftTimer_Remove$0$0 ==.
   00B5 22                 1107 	ret
                           1108 ;------------------------------------------------------------
                           1109 ;Allocation info for local variables in function 'SoftTimer_Elapsed'
                           1110 ;------------------------------------------------------------
                           1111 ;Channel                   Allocated with name '_SoftTimer_Elapsed_Channel_1_23'
                           1112 ;ii                        Allocated with name '_SoftTimer_Elapsed_ii_1_24'
                           1113 ;------------------------------------------------------------
                    00B6   1114 	G$SoftTimer_Elapsed$0$0 ==.
                    00B6   1115 	C$SoftTimer.c$133$1$17 ==.
                           1116 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:133: U8 SoftTimer_Elapsed(eSoftTimerChannels Channel)
                           1117 ;	-----------------------------------------
                           1118 ;	 function SoftTimer_Elapsed
                           1119 ;	-----------------------------------------
   00B6                    1120 _SoftTimer_Elapsed:
   00B6 E5 82              1121 	mov	a,dpl
   00B8 90s00r10           1122 	mov	dptr,#_SoftTimer_Elapsed_Channel_1_23
   00BB F0                 1123 	movx	@dptr,a
                    00BC   1124 	C$SoftTimer.c$136$1$17 ==.
                           1125 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:136: BIT lActive = FALSE;
   00BC C2*01              1126 	clr	_SoftTimer_Elapsed_lActive_1_24
                    00BE   1127 	C$SoftTimer.c$139$1$24 ==.
                           1128 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:139: if (TRUE == TR2)
   00BE A2 CA              1129 	mov	c,_TR2
   00C0 E4                 1130 	clr	a
   00C1 33                 1131 	rlc	a
   00C2 FF                 1132 	mov	r7,a
   00C3 BF 01 28           1133 	cjne	r7,#0x01,00106$
                    00C6   1134 	C$SoftTimer.c$141$3$26 ==.
                           1135 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:141: for (ii = 0u; ii < SOFTTIMER_NUMOF_CHANNELS; ii++)
   00C6 7F 00              1136 	mov	r7,#0x00
   00C8                    1137 00111$:
   00C8 BF 04 00           1138 	cjne	r7,#0x04,00134$
   00CB                    1139 00134$:
   00CB 50 1B              1140 	jnc	00114$
                    00CD   1141 	C$SoftTimer.c$143$3$26 ==.
                           1142 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:143: if (SoftTimer_Channels[ii].Ticks > 0u)
   00CD EF                 1143 	mov	a,r7
   00CE 75 F0 03           1144 	mov	b,#0x03
   00D1 A4                 1145 	mul	ab
   00D2 24r00              1146 	add	a,#_SoftTimer_Channels
   00D4 F5 82              1147 	mov	dpl,a
   00D6 E4                 1148 	clr	a
   00D7 34s00              1149 	addc	a,#(_SoftTimer_Channels >> 8)
   00D9 F5 83              1150 	mov	dph,a
   00DB E0                 1151 	movx	a,@dptr
   00DC FD                 1152 	mov	r5,a
   00DD A3                 1153 	inc	dptr
   00DE E0                 1154 	movx	a,@dptr
   00DF FE                 1155 	mov	r6,a
   00E0 4D                 1156 	orl	a,r5
   00E1 60 02              1157 	jz	00113$
                    00E3   1158 	C$SoftTimer.c$145$4$27 ==.
                           1159 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:145: lActive = TRUE;
   00E3 D2*01              1160 	setb	_SoftTimer_Elapsed_lActive_1_24
   00E5                    1161 00113$:
                    00E5   1162 	C$SoftTimer.c$141$2$25 ==.
                           1163 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:141: for (ii = 0u; ii < SOFTTIMER_NUMOF_CHANNELS; ii++)
   00E5 0F                 1164 	inc	r7
   00E6 80 E0              1165 	sjmp	00111$
   00E8                    1166 00114$:
                    00E8   1167 	C$SoftTimer.c$149$2$25 ==.
                           1168 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:149: if (FALSE == lActive)
   00E8 20*01 03           1169 	jb	_SoftTimer_Elapsed_lActive_1_24,00106$
                    00EB   1170 	C$SoftTimer.c$151$3$28 ==.
                           1171 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:151: StopTimer2();
   00EB 12s01rC0           1172 	lcall	_StopTimer2
   00EE                    1173 00106$:
                    00EE   1174 	C$SoftTimer.c$155$1$24 ==.
                           1175 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:155: if (Channel < SOFTTIMER_NUMOF_CHANNELS)
   00EE 90s00r10           1176 	mov	dptr,#_SoftTimer_Elapsed_Channel_1_23
   00F1 E0                 1177 	movx	a,@dptr
   00F2 FF                 1178 	mov	r7,a
   00F3 BF 04 00           1179 	cjne	r7,#0x04,00138$
   00F6                    1180 00138$:
   00F6 50 2C              1181 	jnc	00110$
                    00F8   1182 	C$SoftTimer.c$157$2$29 ==.
                           1183 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:157: if (TRUE == SoftTimer_Channels[Channel].Elapsed)
   00F8 EF                 1184 	mov	a,r7
   00F9 75 F0 03           1185 	mov	b,#0x03
   00FC A4                 1186 	mul	ab
   00FD 24r00              1187 	add	a,#_SoftTimer_Channels
   00FF FE                 1188 	mov	r6,a
   0100 E4                 1189 	clr	a
   0101 34s00              1190 	addc	a,#(_SoftTimer_Channels >> 8)
   0103 FF                 1191 	mov	r7,a
   0104 74 02              1192 	mov	a,#0x02
   0106 2E                 1193 	add	a,r6
   0107 FE                 1194 	mov	r6,a
   0108 E4                 1195 	clr	a
   0109 3F                 1196 	addc	a,r7
   010A FF                 1197 	mov	r7,a
   010B 8E 82              1198 	mov	dpl,r6
   010D 8F 83              1199 	mov	dph,r7
   010F E0                 1200 	movx	a,@dptr
   0110 FD                 1201 	mov	r5,a
   0111 BD 01 0B           1202 	cjne	r5,#0x01,00108$
                    0114   1203 	C$SoftTimer.c$159$3$30 ==.
                           1204 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:159: SoftTimer_Channels[Channel].Elapsed = FALSE;
   0114 8E 82              1205 	mov	dpl,r6
   0116 8F 83              1206 	mov	dph,r7
   0118 E4                 1207 	clr	a
   0119 F0                 1208 	movx	@dptr,a
                    011A   1209 	C$SoftTimer.c$161$3$30 ==.
                           1210 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:161: return TRUE;
   011A 75 82 01           1211 	mov	dpl,#0x01
   011D 80 08              1212 	sjmp	00115$
   011F                    1213 00108$:
                    011F   1214 	C$SoftTimer.c$164$2$29 ==.
                           1215 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:164: return FALSE;
   011F 75 82 00           1216 	mov	dpl,#0x00
   0122 80 03              1217 	sjmp	00115$
   0124                    1218 00110$:
                    0124   1219 	C$SoftTimer.c$167$1$24 ==.
                           1220 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:167: return TRUE;
   0124 75 82 01           1221 	mov	dpl,#0x01
   0127                    1222 00115$:
                    0127   1223 	C$SoftTimer.c$168$1$24 ==.
                    0127   1224 	XG$SoftTimer_Elapsed$0$0 ==.
   0127 22                 1225 	ret
                           1226 ;------------------------------------------------------------
                           1227 ;Allocation info for local variables in function 'Timer2ISR'
                           1228 ;------------------------------------------------------------
                           1229 ;ii                        Allocated with name '_Timer2ISR_ii_1_32'
                           1230 ;------------------------------------------------------------
                    0128   1231 	G$Timer2ISR$0$0 ==.
                    0128   1232 	C$SoftTimer.c$178$1$24 ==.
                           1233 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:178: INTERRUPT(Timer2ISR, INTERRUPT_TIMER2)
                           1234 ;	-----------------------------------------
                           1235 ;	 function Timer2ISR
                           1236 ;	-----------------------------------------
   0128                    1237 _Timer2ISR:
   0128 C0 E0              1238 	push	acc
   012A C0 F0              1239 	push	b
   012C C0 82              1240 	push	dpl
   012E C0 83              1241 	push	dph
   0130 C0 07              1242 	push	ar7
   0132 C0 06              1243 	push	ar6
   0134 C0 05              1244 	push	ar5
   0136 C0 04              1245 	push	ar4
   0138 C0 03              1246 	push	ar3
   013A C0 02              1247 	push	ar2
   013C C0 D0              1248 	push	psw
   013E 75 D0 00           1249 	mov	psw,#0x00
                    0141   1250 	C$SoftTimer.c$183$1$32 ==.
                           1251 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:183: TF2H = FALSE;
   0141 C2 CF              1252 	clr	_TF2H
                    0143   1253 	C$SoftTimer.c$185$2$33 ==.
                           1254 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:185: for (ii = 0u; ii < SOFTTIMER_NUMOF_CHANNELS; ii++)
   0143 7F 00              1255 	mov	r7,#0x00
   0145                    1256 00104$:
   0145 BF 04 00           1257 	cjne	r7,#0x04,00117$
   0148                    1258 00117$:
   0148 50 4A              1259 	jnc	00108$
                    014A   1260 	C$SoftTimer.c$187$2$33 ==.
                           1261 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:187: if (SoftTimer_Channels[ii].Ticks > 1u)
   014A EF                 1262 	mov	a,r7
   014B 75 F0 03           1263 	mov	b,#0x03
   014E A4                 1264 	mul	ab
   014F FE                 1265 	mov	r6,a
   0150 24r00              1266 	add	a,#_SoftTimer_Channels
   0152 FC                 1267 	mov	r4,a
   0153 E4                 1268 	clr	a
   0154 34s00              1269 	addc	a,#(_SoftTimer_Channels >> 8)
   0156 FD                 1270 	mov	r5,a
   0157 8C 82              1271 	mov	dpl,r4
   0159 8D 83              1272 	mov	dph,r5
   015B E0                 1273 	movx	a,@dptr
   015C FA                 1274 	mov	r2,a
   015D A3                 1275 	inc	dptr
   015E E0                 1276 	movx	a,@dptr
   015F FB                 1277 	mov	r3,a
   0160 C3                 1278 	clr	c
   0161 74 01              1279 	mov	a,#0x01
   0163 9A                 1280 	subb	a,r2
   0164 E4                 1281 	clr	a
   0165 9B                 1282 	subb	a,r3
   0166 50 10              1283 	jnc	00102$
                    0168   1284 	C$SoftTimer.c$189$3$34 ==.
                           1285 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:189: SoftTimer_Channels[ii].Ticks--;
   0168 1A                 1286 	dec	r2
   0169 BA FF 01           1287 	cjne	r2,#0xFF,00120$
   016C 1B                 1288 	dec	r3
   016D                    1289 00120$:
   016D 8C 82              1290 	mov	dpl,r4
   016F 8D 83              1291 	mov	dph,r5
   0171 EA                 1292 	mov	a,r2
   0172 F0                 1293 	movx	@dptr,a
   0173 A3                 1294 	inc	dptr
   0174 EB                 1295 	mov	a,r3
   0175 F0                 1296 	movx	@dptr,a
   0176 80 19              1297 	sjmp	00106$
   0178                    1298 00102$:
                    0178   1299 	C$SoftTimer.c$193$3$35 ==.
                           1300 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:193: SoftTimer_Channels[ii].Elapsed = TRUE;
   0178 EE                 1301 	mov	a,r6
   0179 24r00              1302 	add	a,#_SoftTimer_Channels
   017B FE                 1303 	mov	r6,a
   017C E4                 1304 	clr	a
   017D 34s00              1305 	addc	a,#(_SoftTimer_Channels >> 8)
   017F FD                 1306 	mov	r5,a
   0180 8E 82              1307 	mov	dpl,r6
   0182 8D 83              1308 	mov	dph,r5
   0184 A3                 1309 	inc	dptr
   0185 A3                 1310 	inc	dptr
   0186 74 01              1311 	mov	a,#0x01
   0188 F0                 1312 	movx	@dptr,a
                    0189   1313 	C$SoftTimer.c$194$3$35 ==.
                           1314 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:194: SoftTimer_Channels[ii].Ticks = 0u;
   0189 8E 82              1315 	mov	dpl,r6
   018B 8D 83              1316 	mov	dph,r5
   018D E4                 1317 	clr	a
   018E F0                 1318 	movx	@dptr,a
   018F A3                 1319 	inc	dptr
   0190 F0                 1320 	movx	@dptr,a
   0191                    1321 00106$:
                    0191   1322 	C$SoftTimer.c$185$1$32 ==.
                           1323 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:185: for (ii = 0u; ii < SOFTTIMER_NUMOF_CHANNELS; ii++)
   0191 0F                 1324 	inc	r7
   0192 80 B1              1325 	sjmp	00104$
   0194                    1326 00108$:
   0194 D0 D0              1327 	pop	psw
   0196 D0 02              1328 	pop	ar2
   0198 D0 03              1329 	pop	ar3
   019A D0 04              1330 	pop	ar4
   019C D0 05              1331 	pop	ar5
   019E D0 06              1332 	pop	ar6
   01A0 D0 07              1333 	pop	ar7
   01A2 D0 83              1334 	pop	dph
   01A4 D0 82              1335 	pop	dpl
   01A6 D0 F0              1336 	pop	b
   01A8 D0 E0              1337 	pop	acc
                    01AA   1338 	C$SoftTimer.c$197$1$32 ==.
                    01AA   1339 	XG$Timer2ISR$0$0 ==.
   01AA 32                 1340 	reti
                           1341 ;------------------------------------------------------------
                           1342 ;Allocation info for local variables in function 'StartTimer2'
                           1343 ;------------------------------------------------------------
                    01AB   1344 	G$StartTimer2$0$0 ==.
                    01AB   1345 	C$SoftTimer.c$207$1$32 ==.
                           1346 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:207: void StartTimer2()
                           1347 ;	-----------------------------------------
                           1348 ;	 function StartTimer2
                           1349 ;	-----------------------------------------
   01AB                    1350 _StartTimer2:
                    01AB   1351 	C$SoftTimer.c$210$1$36 ==.
                           1352 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:210: CKCON &= ~(1u << 4u);
   01AB AF 8E              1353 	mov	r7,_CKCON
   01AD 74 EF              1354 	mov	a,#0xEF
   01AF 5F                 1355 	anl	a,r7
   01B0 F5 8E              1356 	mov	_CKCON,a
                    01B2   1357 	C$SoftTimer.c$213$1$36 ==.
                           1358 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:213: TMR2CN = 0u;
   01B2 75 C8 00           1359 	mov	_TMR2CN,#0x00
                    01B5   1360 	C$SoftTimer.c$216$1$36 ==.
                           1361 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:216: TMR2RL = (0xFFFF - (10u * (SYS_CLK_KHZ / 12u)));
   01B5 75 CA 45           1362 	mov	((_TMR2RL >> 0) & 0xFF),#0x45
   01B8 75 CB B0           1363 	mov	((_TMR2RL >> 8) & 0xFF),#0xB0
                    01BB   1364 	C$SoftTimer.c$219$1$36 ==.
                           1365 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:219: ET2 = TRUE;
   01BB D2 AD              1366 	setb	_ET2
                    01BD   1367 	C$SoftTimer.c$222$1$36 ==.
                           1368 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:222: TR2 = TRUE;
   01BD D2 CA              1369 	setb	_TR2
                    01BF   1370 	C$SoftTimer.c$223$1$36 ==.
                    01BF   1371 	XG$StartTimer2$0$0 ==.
   01BF 22                 1372 	ret
                           1373 ;------------------------------------------------------------
                           1374 ;Allocation info for local variables in function 'StopTimer2'
                           1375 ;------------------------------------------------------------
                    01C0   1376 	G$StopTimer2$0$0 ==.
                    01C0   1377 	C$SoftTimer.c$233$1$36 ==.
                           1378 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:233: void StopTimer2()
                           1379 ;	-----------------------------------------
                           1380 ;	 function StopTimer2
                           1381 ;	-----------------------------------------
   01C0                    1382 _StopTimer2:
                    01C0   1383 	C$SoftTimer.c$236$1$37 ==.
                           1384 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:236: ET2 = FALSE;
   01C0 C2 AD              1385 	clr	_ET2
                    01C2   1386 	C$SoftTimer.c$239$1$37 ==.
                           1387 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:239: TR2 = FALSE;
   01C2 C2 CA              1388 	clr	_TR2
                    01C4   1389 	C$SoftTimer.c$242$1$37 ==.
                           1390 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:242: TMR2CN = 0u;
   01C4 75 C8 00           1391 	mov	_TMR2CN,#0x00
                    01C7   1392 	C$SoftTimer.c$243$1$37 ==.
                    01C7   1393 	XG$StopTimer2$0$0 ==.
   01C7 22                 1394 	ret
                           1395 ;------------------------------------------------------------
                           1396 ;Allocation info for local variables in function 'StartTimer3'
                           1397 ;------------------------------------------------------------
                           1398 ;Reload                    Allocated with name '_StartTimer3_Reload_1_38'
                           1399 ;------------------------------------------------------------
                    01C8   1400 	G$StartTimer3$0$0 ==.
                    01C8   1401 	C$SoftTimer.c$255$1$37 ==.
                           1402 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:255: void StartTimer3(U16 Reload)
                           1403 ;	-----------------------------------------
                           1404 ;	 function StartTimer3
                           1405 ;	-----------------------------------------
   01C8                    1406 _StartTimer3:
   01C8 AF 83              1407 	mov	r7,dph
   01CA E5 82              1408 	mov	a,dpl
   01CC 90s00r11           1409 	mov	dptr,#_StartTimer3_Reload_1_38
   01CF F0                 1410 	movx	@dptr,a
   01D0 A3                 1411 	inc	dptr
   01D1 EF                 1412 	mov	a,r7
   01D2 F0                 1413 	movx	@dptr,a
                    01D3   1414 	C$SoftTimer.c$258$1$39 ==.
                           1415 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:258: CKCON &= 0x3F;
   01D3 53 8E 3F           1416 	anl	_CKCON,#0x3F
                    01D6   1417 	C$SoftTimer.c$259$1$39 ==.
                           1418 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:259: CKCON |= 0x40;
   01D6 43 8E 40           1419 	orl	_CKCON,#0x40
                    01D9   1420 	C$SoftTimer.c$262$1$39 ==.
                           1421 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:262: TMR3CN = 0u;
   01D9 75 91 00           1422 	mov	_TMR3CN,#0x00
                    01DC   1423 	C$SoftTimer.c$265$1$39 ==.
                           1424 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:265: TMR3RL = Reload;
   01DC 90s00r11           1425 	mov	dptr,#_StartTimer3_Reload_1_38
   01DF E0                 1426 	movx	a,@dptr
   01E0 F5 92              1427 	mov	((_TMR3RL >> 0) & 0xFF),a
   01E2 A3                 1428 	inc	dptr
   01E3 E0                 1429 	movx	a,@dptr
   01E4 F5 93              1430 	mov	((_TMR3RL >> 8) & 0xFF),a
                    01E6   1431 	C$SoftTimer.c$268$1$39 ==.
                           1432 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:268: EIE1 |= 0x80;
   01E6 43 E6 80           1433 	orl	_EIE1,#0x80
                    01E9   1434 	C$SoftTimer.c$271$1$39 ==.
                           1435 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:271: TMR3CN |= 0x04;
   01E9 43 91 04           1436 	orl	_TMR3CN,#0x04
                    01EC   1437 	C$SoftTimer.c$272$1$39 ==.
                    01EC   1438 	XG$StartTimer3$0$0 ==.
   01EC 22                 1439 	ret
                           1440 ;------------------------------------------------------------
                           1441 ;Allocation info for local variables in function 'StopTimer3'
                           1442 ;------------------------------------------------------------
                    01ED   1443 	G$StopTimer3$0$0 ==.
                    01ED   1444 	C$SoftTimer.c$282$1$39 ==.
                           1445 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:282: void StopTimer3()
                           1446 ;	-----------------------------------------
                           1447 ;	 function StopTimer3
                           1448 ;	-----------------------------------------
   01ED                    1449 _StopTimer3:
                    01ED   1450 	C$SoftTimer.c$285$1$40 ==.
                           1451 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:285: EIE1 &= ~0x80;
   01ED AF E6              1452 	mov	r7,_EIE1
   01EF 74 7F              1453 	mov	a,#0x7F
   01F1 5F                 1454 	anl	a,r7
   01F2 F5 E6              1455 	mov	_EIE1,a
                    01F4   1456 	C$SoftTimer.c$288$1$40 ==.
                           1457 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:288: TMR3CN &= ~0x04;
   01F4 AF 91              1458 	mov	r7,_TMR3CN
   01F6 74 FB              1459 	mov	a,#0xFB
   01F8 5F                 1460 	anl	a,r7
   01F9 F5 91              1461 	mov	_TMR3CN,a
                    01FB   1462 	C$SoftTimer.c$291$1$40 ==.
                           1463 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:291: TMR3CN = 0u;
   01FB 75 91 00           1464 	mov	_TMR3CN,#0x00
                    01FE   1465 	C$SoftTimer.c$292$1$40 ==.
                    01FE   1466 	XG$StopTimer3$0$0 ==.
   01FE 22                 1467 	ret
                           1468 ;------------------------------------------------------------
                           1469 ;Allocation info for local variables in function 'Timer3ISR'
                           1470 ;------------------------------------------------------------
                    01FF   1471 	G$Timer3ISR$0$0 ==.
                    01FF   1472 	C$SoftTimer.c$302$1$40 ==.
                           1473 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:302: INTERRUPT(Timer3ISR, INTERRUPT_TIMER3)
                           1474 ;	-----------------------------------------
                           1475 ;	 function Timer3ISR
                           1476 ;	-----------------------------------------
   01FF                    1477 _Timer3ISR:
   01FF C0 E0              1478 	push	acc
   0201 C0 82              1479 	push	dpl
   0203 C0 83              1480 	push	dph
   0205 C0 07              1481 	push	ar7
   0207 C0 D0              1482 	push	psw
   0209 75 D0 00           1483 	mov	psw,#0x00
                    020C   1484 	C$SoftTimer.c$305$1$42 ==.
                           1485 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:305: TMR3CN &= ~0xC0;
   020C AF 91              1486 	mov	r7,_TMR3CN
   020E 74 3F              1487 	mov	a,#0x3F
   0210 5F                 1488 	anl	a,r7
   0211 F5 91              1489 	mov	_TMR3CN,a
                    0213   1490 	C$SoftTimer.c$308$1$42 ==.
                           1491 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:308: BUZZ = !BUZZ;
   0213 A2 A4              1492 	mov	c,_BUZZ
   0215 B3                 1493 	cpl	c
   0216 92*02              1494 	mov  _Timer3ISR_sloc0_1_0,c
   0218 92 A4              1495 	mov	_BUZZ,c
                    021A   1496 	C$SoftTimer.c$310$1$42 ==.
                           1497 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:310: if (0u == --ReceiverDemo_InternalData.ReceiverDemo_BeepLength)
   021A 90s00r02           1498 	mov	dptr,#(_ReceiverDemo_InternalData + 0x0002)
   021D E0                 1499 	movx	a,@dptr
   021E FF                 1500 	mov	r7,a
   021F 1F                 1501 	dec	r7
   0220 90s00r02           1502 	mov	dptr,#(_ReceiverDemo_InternalData + 0x0002)
   0223 EF                 1503 	mov	a,r7
   0224 F0                 1504 	movx	@dptr,a
   0225 EF                 1505 	mov	a,r7
   0226 70 11              1506 	jnz	00103$
                    0228   1507 	C$SoftTimer.c$312$2$43 ==.
                           1508 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:312: EIE1 &= ~0x80;
   0228 AF E6              1509 	mov	r7,_EIE1
   022A 74 7F              1510 	mov	a,#0x7F
   022C 5F                 1511 	anl	a,r7
   022D F5 E6              1512 	mov	_EIE1,a
                    022F   1513 	C$SoftTimer.c$315$2$43 ==.
                           1514 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:315: TMR3CN &= ~0x04;
   022F AF 91              1515 	mov	r7,_TMR3CN
   0231 74 FB              1516 	mov	a,#0xFB
   0233 5F                 1517 	anl	a,r7
   0234 F5 91              1518 	mov	_TMR3CN,a
                    0236   1519 	C$SoftTimer.c$318$2$43 ==.
                           1520 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\SoftTimer.c:318: TMR3CN = 0u;
   0236 75 91 00           1521 	mov	_TMR3CN,#0x00
   0239                    1522 00103$:
   0239 D0 D0              1523 	pop	psw
   023B D0 07              1524 	pop	ar7
   023D D0 83              1525 	pop	dph
   023F D0 82              1526 	pop	dpl
   0241 D0 E0              1527 	pop	acc
                    0243   1528 	C$SoftTimer.c$320$1$42 ==.
                    0243   1529 	XG$Timer3ISR$0$0 ==.
   0243 32                 1530 	reti
                           1531 ;	eliminated unneeded push/pop b
                           1532 	.area CSEG    (CODE)
                           1533 	.area CONST   (CODE)
                           1534 	.area XINIT   (CODE)
                           1535 	.area CABS    (ABS,CODE)
