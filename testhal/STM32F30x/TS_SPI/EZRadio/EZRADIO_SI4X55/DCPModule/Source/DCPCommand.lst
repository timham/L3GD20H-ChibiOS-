                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.2.0 #8008 (Jul  6 2012) (MINGW32)
                              4 ; This file was generated Tue Apr 02 14:56:18 2013
                              5 ;--------------------------------------------------------
                              6 	.module DCPCommand
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _DCP_SupportedCommandSets
                             13 	.globl _DCP_IF_CalcEDC
                             14 	.globl _strlen
                             15 	.globl _memcpy
                             16 	.globl _PB4
                             17 	.globl _PB3
                             18 	.globl _PB2
                             19 	.globl _PB1
                             20 	.globl _LCD_A0
                             21 	.globl _LCD_NSEL
                             22 	.globl _RF_PWRDN
                             23 	.globl _RF_NIRQ
                             24 	.globl _RF_NSEL
                             25 	.globl _MCU_MOSI
                             26 	.globl _MCU_MISO
                             27 	.globl _MCU_SCK
                             28 	.globl _BUZZ
                             29 	.globl _LED4
                             30 	.globl _LED3
                             31 	.globl _LED2
                             32 	.globl _LED1
                             33 	.globl _MCU_SCL
                             34 	.globl _MCU_SDA
                             35 	.globl _SPI0EN
                             36 	.globl _TXBMT0
                             37 	.globl _NSS0MD0
                             38 	.globl _NSS0MD1
                             39 	.globl _RXOVRN0
                             40 	.globl _MODF0
                             41 	.globl _WCOL0
                             42 	.globl _SPIF0
                             43 	.globl _AD0CM0
                             44 	.globl _AD0CM1
                             45 	.globl _AD0CM2
                             46 	.globl _AD0WINT
                             47 	.globl _AD0BUSY
                             48 	.globl _AD0INT
                             49 	.globl _BURSTEN
                             50 	.globl _AD0EN
                             51 	.globl _CCF0
                             52 	.globl _CCF1
                             53 	.globl _CCF2
                             54 	.globl _CCF3
                             55 	.globl _CCF4
                             56 	.globl _CCF5
                             57 	.globl _CR
                             58 	.globl _CF
                             59 	.globl _P
                             60 	.globl _F1
                             61 	.globl _OV
                             62 	.globl _RS0
                             63 	.globl _RS1
                             64 	.globl _F0
                             65 	.globl _AC
                             66 	.globl _CY
                             67 	.globl _T2XCLK
                             68 	.globl _T2RCLK
                             69 	.globl _TR2
                             70 	.globl _T2SPLIT
                             71 	.globl _TF2CEN
                             72 	.globl _TF2LEN
                             73 	.globl _TF2L
                             74 	.globl _TF2H
                             75 	.globl _SI
                             76 	.globl _ACK
                             77 	.globl _ARBLOST
                             78 	.globl _ACKRQ
                             79 	.globl _STO
                             80 	.globl _STA
                             81 	.globl _TXMODE
                             82 	.globl _MASTER
                             83 	.globl _PX0
                             84 	.globl _PT0
                             85 	.globl _PX1
                             86 	.globl _PT1
                             87 	.globl _PS0
                             88 	.globl _PT2
                             89 	.globl _PSPI0
                             90 	.globl _SPI1EN
                             91 	.globl _TXBMT1
                             92 	.globl _NSS1MD0
                             93 	.globl _NSS1MD1
                             94 	.globl _RXOVRN1
                             95 	.globl _MODF1
                             96 	.globl _WCOL1
                             97 	.globl _SPIF1
                             98 	.globl _EX0
                             99 	.globl _ET0
                            100 	.globl _EX1
                            101 	.globl _ET1
                            102 	.globl _ES0
                            103 	.globl _ET2
                            104 	.globl _ESPI0
                            105 	.globl _EA
                            106 	.globl _RI0
                            107 	.globl _TI0
                            108 	.globl _RB80
                            109 	.globl _TB80
                            110 	.globl _REN0
                            111 	.globl _MCE0
                            112 	.globl _S0MODE
                            113 	.globl _IT0
                            114 	.globl _IE0
                            115 	.globl _IT1
                            116 	.globl _IE1
                            117 	.globl _TR0
                            118 	.globl _TF0
                            119 	.globl _TR1
                            120 	.globl _TF1
                            121 	.globl _PCA0CP4
                            122 	.globl _PCA0CP0
                            123 	.globl _PCA0
                            124 	.globl _PCA0CP3
                            125 	.globl _PCA0CP2
                            126 	.globl _PCA0CP1
                            127 	.globl _PCA0CP5
                            128 	.globl _TMR2
                            129 	.globl _TMR2RL
                            130 	.globl _ADC0LT
                            131 	.globl _ADC0GT
                            132 	.globl _ADC0
                            133 	.globl _TMR3
                            134 	.globl _TMR3RL
                            135 	.globl _TOFF
                            136 	.globl _DP
                            137 	.globl _VDM0CN
                            138 	.globl _PCA0CPH4
                            139 	.globl _PCA0CPL4
                            140 	.globl _PCA0CPH0
                            141 	.globl _PCA0CPL0
                            142 	.globl _PCA0H
                            143 	.globl _PCA0L
                            144 	.globl _SPI0CN
                            145 	.globl _EIP2
                            146 	.globl _EIP1
                            147 	.globl _SMB0ADM
                            148 	.globl _SMB0ADR
                            149 	.globl _P2MDIN
                            150 	.globl _P1MDIN
                            151 	.globl _P0MDIN
                            152 	.globl _B
                            153 	.globl _RSTSRC
                            154 	.globl _PCA0CPH3
                            155 	.globl _PCA0CPL3
                            156 	.globl _PCA0CPH2
                            157 	.globl _PCA0CPL2
                            158 	.globl _PCA0CPH1
                            159 	.globl _PCA0CPL1
                            160 	.globl _ADC0CN
                            161 	.globl _EIE2
                            162 	.globl _EIE1
                            163 	.globl _FLWR
                            164 	.globl _IT01CF
                            165 	.globl _XBR2
                            166 	.globl _XBR1
                            167 	.globl _XBR0
                            168 	.globl _ACC
                            169 	.globl _PCA0PWM
                            170 	.globl _PCA0CPM4
                            171 	.globl _PCA0CPM3
                            172 	.globl _PCA0CPM2
                            173 	.globl _PCA0CPM1
                            174 	.globl _PCA0CPM0
                            175 	.globl _PCA0MD
                            176 	.globl _PCA0CN
                            177 	.globl _P0MAT
                            178 	.globl _P2SKIP
                            179 	.globl _P1SKIP
                            180 	.globl _P0SKIP
                            181 	.globl _PCA0CPH5
                            182 	.globl _PCA0CPL5
                            183 	.globl _REF0CN
                            184 	.globl _PSW
                            185 	.globl _P1MAT
                            186 	.globl _PCA0CPM5
                            187 	.globl _TMR2H
                            188 	.globl _TMR2L
                            189 	.globl _TMR2RLH
                            190 	.globl _TMR2RLL
                            191 	.globl _REG0CN
                            192 	.globl _TMR2CN
                            193 	.globl _P0MASK
                            194 	.globl _ADC0LTH
                            195 	.globl _ADC0LTL
                            196 	.globl _ADC0GTH
                            197 	.globl _ADC0GTL
                            198 	.globl _SMB0DAT
                            199 	.globl _SMB0CF
                            200 	.globl _SMB0CN
                            201 	.globl _P1MASK
                            202 	.globl _ADC0H
                            203 	.globl _ADC0L
                            204 	.globl _ADC0TK
                            205 	.globl _ADC0CF
                            206 	.globl _ADC0MX
                            207 	.globl _ADC0PWR
                            208 	.globl _ADC0AC
                            209 	.globl _IREF0CN
                            210 	.globl _IP
                            211 	.globl _FLKEY
                            212 	.globl _FLSCL
                            213 	.globl _PMU0CF
                            214 	.globl _OSCICL
                            215 	.globl _OSCICN
                            216 	.globl _OSCXCN
                            217 	.globl _SPI1CN
                            218 	.globl _ONESHOT
                            219 	.globl _EMI0TC
                            220 	.globl _RTC0KEY
                            221 	.globl _RTC0DAT
                            222 	.globl _RTC0ADR
                            223 	.globl _EMI0CF
                            224 	.globl _EMI0CN
                            225 	.globl _CLKSEL
                            226 	.globl _IE
                            227 	.globl _SFRPAGE
                            228 	.globl _P2DRV
                            229 	.globl _P2MDOUT
                            230 	.globl _P1DRV
                            231 	.globl _P1MDOUT
                            232 	.globl _P0DRV
                            233 	.globl _P0MDOUT
                            234 	.globl _SPI0DAT
                            235 	.globl _SPI0CKR
                            236 	.globl _SPI0CFG
                            237 	.globl _P2
                            238 	.globl _CPT0MX
                            239 	.globl _CPT1MX
                            240 	.globl _CPT0MD
                            241 	.globl _CPT1MD
                            242 	.globl _CPT0CN
                            243 	.globl _CPT1CN
                            244 	.globl _SBUF0
                            245 	.globl _SCON0
                            246 	.globl _CRC0CNT
                            247 	.globl _DC0CN
                            248 	.globl _CRC0AUTO
                            249 	.globl _DC0CF
                            250 	.globl _TMR3H
                            251 	.globl _CRC0FLIP
                            252 	.globl _TMR3L
                            253 	.globl _CRC0IN
                            254 	.globl _TMR3RLH
                            255 	.globl _CRC0CN
                            256 	.globl _TMR3RLL
                            257 	.globl _CRC0DAT
                            258 	.globl _TMR3CN
                            259 	.globl _P1
                            260 	.globl _PSCTL
                            261 	.globl _CKCON
                            262 	.globl _TH1
                            263 	.globl _TH0
                            264 	.globl _TL1
                            265 	.globl _TL0
                            266 	.globl _TMOD
                            267 	.globl _TCON
                            268 	.globl _PCON
                            269 	.globl _TOFFH
                            270 	.globl _SPI1DAT
                            271 	.globl _TOFFL
                            272 	.globl _SPI1CKR
                            273 	.globl _SPI1CFG
                            274 	.globl _DPH
                            275 	.globl _DPL
                            276 	.globl _SP
                            277 	.globl _P0
                            278 	.globl _DCP_CommandSetSupported
                            279 	.globl _DCP_GeneralCommandSetHandler
                            280 ;--------------------------------------------------------
                            281 ; special function registers
                            282 ;--------------------------------------------------------
                            283 	.area RSEG    (ABS,DATA)
   0000                     284 	.org 0x0000
                    0080    285 G$P0$0$0 == 0x0080
                    0080    286 _P0	=	0x0080
                    0081    287 G$SP$0$0 == 0x0081
                    0081    288 _SP	=	0x0081
                    0082    289 G$DPL$0$0 == 0x0082
                    0082    290 _DPL	=	0x0082
                    0083    291 G$DPH$0$0 == 0x0083
                    0083    292 _DPH	=	0x0083
                    0084    293 G$SPI1CFG$0$0 == 0x0084
                    0084    294 _SPI1CFG	=	0x0084
                    0085    295 G$SPI1CKR$0$0 == 0x0085
                    0085    296 _SPI1CKR	=	0x0085
                    0085    297 G$TOFFL$0$0 == 0x0085
                    0085    298 _TOFFL	=	0x0085
                    0086    299 G$SPI1DAT$0$0 == 0x0086
                    0086    300 _SPI1DAT	=	0x0086
                    0086    301 G$TOFFH$0$0 == 0x0086
                    0086    302 _TOFFH	=	0x0086
                    0087    303 G$PCON$0$0 == 0x0087
                    0087    304 _PCON	=	0x0087
                    0088    305 G$TCON$0$0 == 0x0088
                    0088    306 _TCON	=	0x0088
                    0089    307 G$TMOD$0$0 == 0x0089
                    0089    308 _TMOD	=	0x0089
                    008A    309 G$TL0$0$0 == 0x008a
                    008A    310 _TL0	=	0x008a
                    008B    311 G$TL1$0$0 == 0x008b
                    008B    312 _TL1	=	0x008b
                    008C    313 G$TH0$0$0 == 0x008c
                    008C    314 _TH0	=	0x008c
                    008D    315 G$TH1$0$0 == 0x008d
                    008D    316 _TH1	=	0x008d
                    008E    317 G$CKCON$0$0 == 0x008e
                    008E    318 _CKCON	=	0x008e
                    008F    319 G$PSCTL$0$0 == 0x008f
                    008F    320 _PSCTL	=	0x008f
                    0090    321 G$P1$0$0 == 0x0090
                    0090    322 _P1	=	0x0090
                    0091    323 G$TMR3CN$0$0 == 0x0091
                    0091    324 _TMR3CN	=	0x0091
                    0091    325 G$CRC0DAT$0$0 == 0x0091
                    0091    326 _CRC0DAT	=	0x0091
                    0092    327 G$TMR3RLL$0$0 == 0x0092
                    0092    328 _TMR3RLL	=	0x0092
                    0092    329 G$CRC0CN$0$0 == 0x0092
                    0092    330 _CRC0CN	=	0x0092
                    0093    331 G$TMR3RLH$0$0 == 0x0093
                    0093    332 _TMR3RLH	=	0x0093
                    0093    333 G$CRC0IN$0$0 == 0x0093
                    0093    334 _CRC0IN	=	0x0093
                    0094    335 G$TMR3L$0$0 == 0x0094
                    0094    336 _TMR3L	=	0x0094
                    0095    337 G$CRC0FLIP$0$0 == 0x0095
                    0095    338 _CRC0FLIP	=	0x0095
                    0095    339 G$TMR3H$0$0 == 0x0095
                    0095    340 _TMR3H	=	0x0095
                    0096    341 G$DC0CF$0$0 == 0x0096
                    0096    342 _DC0CF	=	0x0096
                    0096    343 G$CRC0AUTO$0$0 == 0x0096
                    0096    344 _CRC0AUTO	=	0x0096
                    0097    345 G$DC0CN$0$0 == 0x0097
                    0097    346 _DC0CN	=	0x0097
                    0097    347 G$CRC0CNT$0$0 == 0x0097
                    0097    348 _CRC0CNT	=	0x0097
                    0098    349 G$SCON0$0$0 == 0x0098
                    0098    350 _SCON0	=	0x0098
                    0099    351 G$SBUF0$0$0 == 0x0099
                    0099    352 _SBUF0	=	0x0099
                    009A    353 G$CPT1CN$0$0 == 0x009a
                    009A    354 _CPT1CN	=	0x009a
                    009B    355 G$CPT0CN$0$0 == 0x009b
                    009B    356 _CPT0CN	=	0x009b
                    009C    357 G$CPT1MD$0$0 == 0x009c
                    009C    358 _CPT1MD	=	0x009c
                    009D    359 G$CPT0MD$0$0 == 0x009d
                    009D    360 _CPT0MD	=	0x009d
                    009E    361 G$CPT1MX$0$0 == 0x009e
                    009E    362 _CPT1MX	=	0x009e
                    009F    363 G$CPT0MX$0$0 == 0x009f
                    009F    364 _CPT0MX	=	0x009f
                    00A0    365 G$P2$0$0 == 0x00a0
                    00A0    366 _P2	=	0x00a0
                    00A1    367 G$SPI0CFG$0$0 == 0x00a1
                    00A1    368 _SPI0CFG	=	0x00a1
                    00A2    369 G$SPI0CKR$0$0 == 0x00a2
                    00A2    370 _SPI0CKR	=	0x00a2
                    00A3    371 G$SPI0DAT$0$0 == 0x00a3
                    00A3    372 _SPI0DAT	=	0x00a3
                    00A4    373 G$P0MDOUT$0$0 == 0x00a4
                    00A4    374 _P0MDOUT	=	0x00a4
                    00A4    375 G$P0DRV$0$0 == 0x00a4
                    00A4    376 _P0DRV	=	0x00a4
                    00A5    377 G$P1MDOUT$0$0 == 0x00a5
                    00A5    378 _P1MDOUT	=	0x00a5
                    00A5    379 G$P1DRV$0$0 == 0x00a5
                    00A5    380 _P1DRV	=	0x00a5
                    00A6    381 G$P2MDOUT$0$0 == 0x00a6
                    00A6    382 _P2MDOUT	=	0x00a6
                    00A6    383 G$P2DRV$0$0 == 0x00a6
                    00A6    384 _P2DRV	=	0x00a6
                    00A7    385 G$SFRPAGE$0$0 == 0x00a7
                    00A7    386 _SFRPAGE	=	0x00a7
                    00A8    387 G$IE$0$0 == 0x00a8
                    00A8    388 _IE	=	0x00a8
                    00A9    389 G$CLKSEL$0$0 == 0x00a9
                    00A9    390 _CLKSEL	=	0x00a9
                    00AA    391 G$EMI0CN$0$0 == 0x00aa
                    00AA    392 _EMI0CN	=	0x00aa
                    00AB    393 G$EMI0CF$0$0 == 0x00ab
                    00AB    394 _EMI0CF	=	0x00ab
                    00AC    395 G$RTC0ADR$0$0 == 0x00ac
                    00AC    396 _RTC0ADR	=	0x00ac
                    00AD    397 G$RTC0DAT$0$0 == 0x00ad
                    00AD    398 _RTC0DAT	=	0x00ad
                    00AE    399 G$RTC0KEY$0$0 == 0x00ae
                    00AE    400 _RTC0KEY	=	0x00ae
                    00AF    401 G$EMI0TC$0$0 == 0x00af
                    00AF    402 _EMI0TC	=	0x00af
                    00AF    403 G$ONESHOT$0$0 == 0x00af
                    00AF    404 _ONESHOT	=	0x00af
                    00B0    405 G$SPI1CN$0$0 == 0x00b0
                    00B0    406 _SPI1CN	=	0x00b0
                    00B1    407 G$OSCXCN$0$0 == 0x00b1
                    00B1    408 _OSCXCN	=	0x00b1
                    00B2    409 G$OSCICN$0$0 == 0x00b2
                    00B2    410 _OSCICN	=	0x00b2
                    00B3    411 G$OSCICL$0$0 == 0x00b3
                    00B3    412 _OSCICL	=	0x00b3
                    00B5    413 G$PMU0CF$0$0 == 0x00b5
                    00B5    414 _PMU0CF	=	0x00b5
                    00B6    415 G$FLSCL$0$0 == 0x00b6
                    00B6    416 _FLSCL	=	0x00b6
                    00B7    417 G$FLKEY$0$0 == 0x00b7
                    00B7    418 _FLKEY	=	0x00b7
                    00B8    419 G$IP$0$0 == 0x00b8
                    00B8    420 _IP	=	0x00b8
                    00B9    421 G$IREF0CN$0$0 == 0x00b9
                    00B9    422 _IREF0CN	=	0x00b9
                    00BA    423 G$ADC0AC$0$0 == 0x00ba
                    00BA    424 _ADC0AC	=	0x00ba
                    00BA    425 G$ADC0PWR$0$0 == 0x00ba
                    00BA    426 _ADC0PWR	=	0x00ba
                    00BB    427 G$ADC0MX$0$0 == 0x00bb
                    00BB    428 _ADC0MX	=	0x00bb
                    00BC    429 G$ADC0CF$0$0 == 0x00bc
                    00BC    430 _ADC0CF	=	0x00bc
                    00BD    431 G$ADC0TK$0$0 == 0x00bd
                    00BD    432 _ADC0TK	=	0x00bd
                    00BD    433 G$ADC0L$0$0 == 0x00bd
                    00BD    434 _ADC0L	=	0x00bd
                    00BE    435 G$ADC0H$0$0 == 0x00be
                    00BE    436 _ADC0H	=	0x00be
                    00BF    437 G$P1MASK$0$0 == 0x00bf
                    00BF    438 _P1MASK	=	0x00bf
                    00C0    439 G$SMB0CN$0$0 == 0x00c0
                    00C0    440 _SMB0CN	=	0x00c0
                    00C1    441 G$SMB0CF$0$0 == 0x00c1
                    00C1    442 _SMB0CF	=	0x00c1
                    00C2    443 G$SMB0DAT$0$0 == 0x00c2
                    00C2    444 _SMB0DAT	=	0x00c2
                    00C3    445 G$ADC0GTL$0$0 == 0x00c3
                    00C3    446 _ADC0GTL	=	0x00c3
                    00C4    447 G$ADC0GTH$0$0 == 0x00c4
                    00C4    448 _ADC0GTH	=	0x00c4
                    00C5    449 G$ADC0LTL$0$0 == 0x00c5
                    00C5    450 _ADC0LTL	=	0x00c5
                    00C6    451 G$ADC0LTH$0$0 == 0x00c6
                    00C6    452 _ADC0LTH	=	0x00c6
                    00C7    453 G$P0MASK$0$0 == 0x00c7
                    00C7    454 _P0MASK	=	0x00c7
                    00C8    455 G$TMR2CN$0$0 == 0x00c8
                    00C8    456 _TMR2CN	=	0x00c8
                    00C9    457 G$REG0CN$0$0 == 0x00c9
                    00C9    458 _REG0CN	=	0x00c9
                    00CA    459 G$TMR2RLL$0$0 == 0x00ca
                    00CA    460 _TMR2RLL	=	0x00ca
                    00CB    461 G$TMR2RLH$0$0 == 0x00cb
                    00CB    462 _TMR2RLH	=	0x00cb
                    00CC    463 G$TMR2L$0$0 == 0x00cc
                    00CC    464 _TMR2L	=	0x00cc
                    00CD    465 G$TMR2H$0$0 == 0x00cd
                    00CD    466 _TMR2H	=	0x00cd
                    00CE    467 G$PCA0CPM5$0$0 == 0x00ce
                    00CE    468 _PCA0CPM5	=	0x00ce
                    00CF    469 G$P1MAT$0$0 == 0x00cf
                    00CF    470 _P1MAT	=	0x00cf
                    00D0    471 G$PSW$0$0 == 0x00d0
                    00D0    472 _PSW	=	0x00d0
                    00D1    473 G$REF0CN$0$0 == 0x00d1
                    00D1    474 _REF0CN	=	0x00d1
                    00D2    475 G$PCA0CPL5$0$0 == 0x00d2
                    00D2    476 _PCA0CPL5	=	0x00d2
                    00D3    477 G$PCA0CPH5$0$0 == 0x00d3
                    00D3    478 _PCA0CPH5	=	0x00d3
                    00D4    479 G$P0SKIP$0$0 == 0x00d4
                    00D4    480 _P0SKIP	=	0x00d4
                    00D5    481 G$P1SKIP$0$0 == 0x00d5
                    00D5    482 _P1SKIP	=	0x00d5
                    00D6    483 G$P2SKIP$0$0 == 0x00d6
                    00D6    484 _P2SKIP	=	0x00d6
                    00D7    485 G$P0MAT$0$0 == 0x00d7
                    00D7    486 _P0MAT	=	0x00d7
                    00D8    487 G$PCA0CN$0$0 == 0x00d8
                    00D8    488 _PCA0CN	=	0x00d8
                    00D9    489 G$PCA0MD$0$0 == 0x00d9
                    00D9    490 _PCA0MD	=	0x00d9
                    00DA    491 G$PCA0CPM0$0$0 == 0x00da
                    00DA    492 _PCA0CPM0	=	0x00da
                    00DB    493 G$PCA0CPM1$0$0 == 0x00db
                    00DB    494 _PCA0CPM1	=	0x00db
                    00DC    495 G$PCA0CPM2$0$0 == 0x00dc
                    00DC    496 _PCA0CPM2	=	0x00dc
                    00DD    497 G$PCA0CPM3$0$0 == 0x00dd
                    00DD    498 _PCA0CPM3	=	0x00dd
                    00DE    499 G$PCA0CPM4$0$0 == 0x00de
                    00DE    500 _PCA0CPM4	=	0x00de
                    00DF    501 G$PCA0PWM$0$0 == 0x00df
                    00DF    502 _PCA0PWM	=	0x00df
                    00E0    503 G$ACC$0$0 == 0x00e0
                    00E0    504 _ACC	=	0x00e0
                    00E1    505 G$XBR0$0$0 == 0x00e1
                    00E1    506 _XBR0	=	0x00e1
                    00E2    507 G$XBR1$0$0 == 0x00e2
                    00E2    508 _XBR1	=	0x00e2
                    00E3    509 G$XBR2$0$0 == 0x00e3
                    00E3    510 _XBR2	=	0x00e3
                    00E4    511 G$IT01CF$0$0 == 0x00e4
                    00E4    512 _IT01CF	=	0x00e4
                    00E5    513 G$FLWR$0$0 == 0x00e5
                    00E5    514 _FLWR	=	0x00e5
                    00E6    515 G$EIE1$0$0 == 0x00e6
                    00E6    516 _EIE1	=	0x00e6
                    00E7    517 G$EIE2$0$0 == 0x00e7
                    00E7    518 _EIE2	=	0x00e7
                    00E8    519 G$ADC0CN$0$0 == 0x00e8
                    00E8    520 _ADC0CN	=	0x00e8
                    00E9    521 G$PCA0CPL1$0$0 == 0x00e9
                    00E9    522 _PCA0CPL1	=	0x00e9
                    00EA    523 G$PCA0CPH1$0$0 == 0x00ea
                    00EA    524 _PCA0CPH1	=	0x00ea
                    00EB    525 G$PCA0CPL2$0$0 == 0x00eb
                    00EB    526 _PCA0CPL2	=	0x00eb
                    00EC    527 G$PCA0CPH2$0$0 == 0x00ec
                    00EC    528 _PCA0CPH2	=	0x00ec
                    00ED    529 G$PCA0CPL3$0$0 == 0x00ed
                    00ED    530 _PCA0CPL3	=	0x00ed
                    00EE    531 G$PCA0CPH3$0$0 == 0x00ee
                    00EE    532 _PCA0CPH3	=	0x00ee
                    00EF    533 G$RSTSRC$0$0 == 0x00ef
                    00EF    534 _RSTSRC	=	0x00ef
                    00F0    535 G$B$0$0 == 0x00f0
                    00F0    536 _B	=	0x00f0
                    00F1    537 G$P0MDIN$0$0 == 0x00f1
                    00F1    538 _P0MDIN	=	0x00f1
                    00F2    539 G$P1MDIN$0$0 == 0x00f2
                    00F2    540 _P1MDIN	=	0x00f2
                    00F3    541 G$P2MDIN$0$0 == 0x00f3
                    00F3    542 _P2MDIN	=	0x00f3
                    00F4    543 G$SMB0ADR$0$0 == 0x00f4
                    00F4    544 _SMB0ADR	=	0x00f4
                    00F5    545 G$SMB0ADM$0$0 == 0x00f5
                    00F5    546 _SMB0ADM	=	0x00f5
                    00F6    547 G$EIP1$0$0 == 0x00f6
                    00F6    548 _EIP1	=	0x00f6
                    00F7    549 G$EIP2$0$0 == 0x00f7
                    00F7    550 _EIP2	=	0x00f7
                    00F8    551 G$SPI0CN$0$0 == 0x00f8
                    00F8    552 _SPI0CN	=	0x00f8
                    00F9    553 G$PCA0L$0$0 == 0x00f9
                    00F9    554 _PCA0L	=	0x00f9
                    00FA    555 G$PCA0H$0$0 == 0x00fa
                    00FA    556 _PCA0H	=	0x00fa
                    00FB    557 G$PCA0CPL0$0$0 == 0x00fb
                    00FB    558 _PCA0CPL0	=	0x00fb
                    00FC    559 G$PCA0CPH0$0$0 == 0x00fc
                    00FC    560 _PCA0CPH0	=	0x00fc
                    00FD    561 G$PCA0CPL4$0$0 == 0x00fd
                    00FD    562 _PCA0CPL4	=	0x00fd
                    00FE    563 G$PCA0CPH4$0$0 == 0x00fe
                    00FE    564 _PCA0CPH4	=	0x00fe
                    00FF    565 G$VDM0CN$0$0 == 0x00ff
                    00FF    566 _VDM0CN	=	0x00ff
                    8382    567 G$DP$0$0 == 0x8382
                    8382    568 _DP	=	0x8382
                    8685    569 G$TOFF$0$0 == 0x8685
                    8685    570 _TOFF	=	0x8685
                    9392    571 G$TMR3RL$0$0 == 0x9392
                    9392    572 _TMR3RL	=	0x9392
                    9594    573 G$TMR3$0$0 == 0x9594
                    9594    574 _TMR3	=	0x9594
                    BEBD    575 G$ADC0$0$0 == 0xbebd
                    BEBD    576 _ADC0	=	0xbebd
                    C4C3    577 G$ADC0GT$0$0 == 0xc4c3
                    C4C3    578 _ADC0GT	=	0xc4c3
                    C6C5    579 G$ADC0LT$0$0 == 0xc6c5
                    C6C5    580 _ADC0LT	=	0xc6c5
                    CBCA    581 G$TMR2RL$0$0 == 0xcbca
                    CBCA    582 _TMR2RL	=	0xcbca
                    CDCC    583 G$TMR2$0$0 == 0xcdcc
                    CDCC    584 _TMR2	=	0xcdcc
                    D3D2    585 G$PCA0CP5$0$0 == 0xd3d2
                    D3D2    586 _PCA0CP5	=	0xd3d2
                    EAE9    587 G$PCA0CP1$0$0 == 0xeae9
                    EAE9    588 _PCA0CP1	=	0xeae9
                    ECEB    589 G$PCA0CP2$0$0 == 0xeceb
                    ECEB    590 _PCA0CP2	=	0xeceb
                    EEED    591 G$PCA0CP3$0$0 == 0xeeed
                    EEED    592 _PCA0CP3	=	0xeeed
                    FAF9    593 G$PCA0$0$0 == 0xfaf9
                    FAF9    594 _PCA0	=	0xfaf9
                    FCFB    595 G$PCA0CP0$0$0 == 0xfcfb
                    FCFB    596 _PCA0CP0	=	0xfcfb
                    FEFD    597 G$PCA0CP4$0$0 == 0xfefd
                    FEFD    598 _PCA0CP4	=	0xfefd
                            599 ;--------------------------------------------------------
                            600 ; special function bits
                            601 ;--------------------------------------------------------
                            602 	.area RSEG    (ABS,DATA)
   0000                     603 	.org 0x0000
                    008F    604 G$TF1$0$0 == 0x008f
                    008F    605 _TF1	=	0x008f
                    008E    606 G$TR1$0$0 == 0x008e
                    008E    607 _TR1	=	0x008e
                    008D    608 G$TF0$0$0 == 0x008d
                    008D    609 _TF0	=	0x008d
                    008C    610 G$TR0$0$0 == 0x008c
                    008C    611 _TR0	=	0x008c
                    008B    612 G$IE1$0$0 == 0x008b
                    008B    613 _IE1	=	0x008b
                    008A    614 G$IT1$0$0 == 0x008a
                    008A    615 _IT1	=	0x008a
                    0089    616 G$IE0$0$0 == 0x0089
                    0089    617 _IE0	=	0x0089
                    0088    618 G$IT0$0$0 == 0x0088
                    0088    619 _IT0	=	0x0088
                    009F    620 G$S0MODE$0$0 == 0x009f
                    009F    621 _S0MODE	=	0x009f
                    009D    622 G$MCE0$0$0 == 0x009d
                    009D    623 _MCE0	=	0x009d
                    009C    624 G$REN0$0$0 == 0x009c
                    009C    625 _REN0	=	0x009c
                    009B    626 G$TB80$0$0 == 0x009b
                    009B    627 _TB80	=	0x009b
                    009A    628 G$RB80$0$0 == 0x009a
                    009A    629 _RB80	=	0x009a
                    0099    630 G$TI0$0$0 == 0x0099
                    0099    631 _TI0	=	0x0099
                    0098    632 G$RI0$0$0 == 0x0098
                    0098    633 _RI0	=	0x0098
                    00AF    634 G$EA$0$0 == 0x00af
                    00AF    635 _EA	=	0x00af
                    00AE    636 G$ESPI0$0$0 == 0x00ae
                    00AE    637 _ESPI0	=	0x00ae
                    00AD    638 G$ET2$0$0 == 0x00ad
                    00AD    639 _ET2	=	0x00ad
                    00AC    640 G$ES0$0$0 == 0x00ac
                    00AC    641 _ES0	=	0x00ac
                    00AB    642 G$ET1$0$0 == 0x00ab
                    00AB    643 _ET1	=	0x00ab
                    00AA    644 G$EX1$0$0 == 0x00aa
                    00AA    645 _EX1	=	0x00aa
                    00A9    646 G$ET0$0$0 == 0x00a9
                    00A9    647 _ET0	=	0x00a9
                    00A8    648 G$EX0$0$0 == 0x00a8
                    00A8    649 _EX0	=	0x00a8
                    00B7    650 G$SPIF1$0$0 == 0x00b7
                    00B7    651 _SPIF1	=	0x00b7
                    00B6    652 G$WCOL1$0$0 == 0x00b6
                    00B6    653 _WCOL1	=	0x00b6
                    00B5    654 G$MODF1$0$0 == 0x00b5
                    00B5    655 _MODF1	=	0x00b5
                    00B4    656 G$RXOVRN1$0$0 == 0x00b4
                    00B4    657 _RXOVRN1	=	0x00b4
                    00B3    658 G$NSS1MD1$0$0 == 0x00b3
                    00B3    659 _NSS1MD1	=	0x00b3
                    00B2    660 G$NSS1MD0$0$0 == 0x00b2
                    00B2    661 _NSS1MD0	=	0x00b2
                    00B1    662 G$TXBMT1$0$0 == 0x00b1
                    00B1    663 _TXBMT1	=	0x00b1
                    00B0    664 G$SPI1EN$0$0 == 0x00b0
                    00B0    665 _SPI1EN	=	0x00b0
                    00BE    666 G$PSPI0$0$0 == 0x00be
                    00BE    667 _PSPI0	=	0x00be
                    00BD    668 G$PT2$0$0 == 0x00bd
                    00BD    669 _PT2	=	0x00bd
                    00BC    670 G$PS0$0$0 == 0x00bc
                    00BC    671 _PS0	=	0x00bc
                    00BB    672 G$PT1$0$0 == 0x00bb
                    00BB    673 _PT1	=	0x00bb
                    00BA    674 G$PX1$0$0 == 0x00ba
                    00BA    675 _PX1	=	0x00ba
                    00B9    676 G$PT0$0$0 == 0x00b9
                    00B9    677 _PT0	=	0x00b9
                    00B8    678 G$PX0$0$0 == 0x00b8
                    00B8    679 _PX0	=	0x00b8
                    00C7    680 G$MASTER$0$0 == 0x00c7
                    00C7    681 _MASTER	=	0x00c7
                    00C6    682 G$TXMODE$0$0 == 0x00c6
                    00C6    683 _TXMODE	=	0x00c6
                    00C5    684 G$STA$0$0 == 0x00c5
                    00C5    685 _STA	=	0x00c5
                    00C4    686 G$STO$0$0 == 0x00c4
                    00C4    687 _STO	=	0x00c4
                    00C3    688 G$ACKRQ$0$0 == 0x00c3
                    00C3    689 _ACKRQ	=	0x00c3
                    00C2    690 G$ARBLOST$0$0 == 0x00c2
                    00C2    691 _ARBLOST	=	0x00c2
                    00C1    692 G$ACK$0$0 == 0x00c1
                    00C1    693 _ACK	=	0x00c1
                    00C0    694 G$SI$0$0 == 0x00c0
                    00C0    695 _SI	=	0x00c0
                    00CF    696 G$TF2H$0$0 == 0x00cf
                    00CF    697 _TF2H	=	0x00cf
                    00CE    698 G$TF2L$0$0 == 0x00ce
                    00CE    699 _TF2L	=	0x00ce
                    00CD    700 G$TF2LEN$0$0 == 0x00cd
                    00CD    701 _TF2LEN	=	0x00cd
                    00CC    702 G$TF2CEN$0$0 == 0x00cc
                    00CC    703 _TF2CEN	=	0x00cc
                    00CB    704 G$T2SPLIT$0$0 == 0x00cb
                    00CB    705 _T2SPLIT	=	0x00cb
                    00CA    706 G$TR2$0$0 == 0x00ca
                    00CA    707 _TR2	=	0x00ca
                    00C9    708 G$T2RCLK$0$0 == 0x00c9
                    00C9    709 _T2RCLK	=	0x00c9
                    00C8    710 G$T2XCLK$0$0 == 0x00c8
                    00C8    711 _T2XCLK	=	0x00c8
                    00D7    712 G$CY$0$0 == 0x00d7
                    00D7    713 _CY	=	0x00d7
                    00D6    714 G$AC$0$0 == 0x00d6
                    00D6    715 _AC	=	0x00d6
                    00D5    716 G$F0$0$0 == 0x00d5
                    00D5    717 _F0	=	0x00d5
                    00D4    718 G$RS1$0$0 == 0x00d4
                    00D4    719 _RS1	=	0x00d4
                    00D3    720 G$RS0$0$0 == 0x00d3
                    00D3    721 _RS0	=	0x00d3
                    00D2    722 G$OV$0$0 == 0x00d2
                    00D2    723 _OV	=	0x00d2
                    00D1    724 G$F1$0$0 == 0x00d1
                    00D1    725 _F1	=	0x00d1
                    00D0    726 G$P$0$0 == 0x00d0
                    00D0    727 _P	=	0x00d0
                    00DF    728 G$CF$0$0 == 0x00df
                    00DF    729 _CF	=	0x00df
                    00DE    730 G$CR$0$0 == 0x00de
                    00DE    731 _CR	=	0x00de
                    00DD    732 G$CCF5$0$0 == 0x00dd
                    00DD    733 _CCF5	=	0x00dd
                    00DC    734 G$CCF4$0$0 == 0x00dc
                    00DC    735 _CCF4	=	0x00dc
                    00DB    736 G$CCF3$0$0 == 0x00db
                    00DB    737 _CCF3	=	0x00db
                    00DA    738 G$CCF2$0$0 == 0x00da
                    00DA    739 _CCF2	=	0x00da
                    00D9    740 G$CCF1$0$0 == 0x00d9
                    00D9    741 _CCF1	=	0x00d9
                    00D8    742 G$CCF0$0$0 == 0x00d8
                    00D8    743 _CCF0	=	0x00d8
                    00EF    744 G$AD0EN$0$0 == 0x00ef
                    00EF    745 _AD0EN	=	0x00ef
                    00EE    746 G$BURSTEN$0$0 == 0x00ee
                    00EE    747 _BURSTEN	=	0x00ee
                    00ED    748 G$AD0INT$0$0 == 0x00ed
                    00ED    749 _AD0INT	=	0x00ed
                    00EC    750 G$AD0BUSY$0$0 == 0x00ec
                    00EC    751 _AD0BUSY	=	0x00ec
                    00EB    752 G$AD0WINT$0$0 == 0x00eb
                    00EB    753 _AD0WINT	=	0x00eb
                    00EA    754 G$AD0CM2$0$0 == 0x00ea
                    00EA    755 _AD0CM2	=	0x00ea
                    00E9    756 G$AD0CM1$0$0 == 0x00e9
                    00E9    757 _AD0CM1	=	0x00e9
                    00E8    758 G$AD0CM0$0$0 == 0x00e8
                    00E8    759 _AD0CM0	=	0x00e8
                    00FF    760 G$SPIF0$0$0 == 0x00ff
                    00FF    761 _SPIF0	=	0x00ff
                    00FE    762 G$WCOL0$0$0 == 0x00fe
                    00FE    763 _WCOL0	=	0x00fe
                    00FD    764 G$MODF0$0$0 == 0x00fd
                    00FD    765 _MODF0	=	0x00fd
                    00FC    766 G$RXOVRN0$0$0 == 0x00fc
                    00FC    767 _RXOVRN0	=	0x00fc
                    00FB    768 G$NSS0MD1$0$0 == 0x00fb
                    00FB    769 _NSS0MD1	=	0x00fb
                    00FA    770 G$NSS0MD0$0$0 == 0x00fa
                    00FA    771 _NSS0MD0	=	0x00fa
                    00F9    772 G$TXBMT0$0$0 == 0x00f9
                    00F9    773 _TXBMT0	=	0x00f9
                    00F8    774 G$SPI0EN$0$0 == 0x00f8
                    00F8    775 _SPI0EN	=	0x00f8
                    0087    776 G$MCU_SDA$0$0 == 0x0087
                    0087    777 _MCU_SDA	=	0x0087
                    0086    778 G$MCU_SCL$0$0 == 0x0086
                    0086    779 _MCU_SCL	=	0x0086
                    00A0    780 G$LED1$0$0 == 0x00a0
                    00A0    781 _LED1	=	0x00a0
                    00A1    782 G$LED2$0$0 == 0x00a1
                    00A1    783 _LED2	=	0x00a1
                    00A2    784 G$LED3$0$0 == 0x00a2
                    00A2    785 _LED3	=	0x00a2
                    00A3    786 G$LED4$0$0 == 0x00a3
                    00A3    787 _LED4	=	0x00a3
                    00A4    788 G$BUZZ$0$0 == 0x00a4
                    00A4    789 _BUZZ	=	0x00a4
                    0090    790 G$MCU_SCK$0$0 == 0x0090
                    0090    791 _MCU_SCK	=	0x0090
                    0091    792 G$MCU_MISO$0$0 == 0x0091
                    0091    793 _MCU_MISO	=	0x0091
                    0092    794 G$MCU_MOSI$0$0 == 0x0092
                    0092    795 _MCU_MOSI	=	0x0092
                    0093    796 G$RF_NSEL$0$0 == 0x0093
                    0093    797 _RF_NSEL	=	0x0093
                    0094    798 G$RF_NIRQ$0$0 == 0x0094
                    0094    799 _RF_NIRQ	=	0x0094
                    0095    800 G$RF_PWRDN$0$0 == 0x0095
                    0095    801 _RF_PWRDN	=	0x0095
                    0096    802 G$LCD_NSEL$0$0 == 0x0096
                    0096    803 _LCD_NSEL	=	0x0096
                    0097    804 G$LCD_A0$0$0 == 0x0097
                    0097    805 _LCD_A0	=	0x0097
                    0080    806 G$PB1$0$0 == 0x0080
                    0080    807 _PB1	=	0x0080
                    0081    808 G$PB2$0$0 == 0x0081
                    0081    809 _PB2	=	0x0081
                    0082    810 G$PB3$0$0 == 0x0082
                    0082    811 _PB3	=	0x0082
                    0083    812 G$PB4$0$0 == 0x0083
                    0083    813 _PB4	=	0x0083
                            814 ;--------------------------------------------------------
                            815 ; overlayable register banks
                            816 ;--------------------------------------------------------
                            817 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     818 	.ds 8
                            819 ;--------------------------------------------------------
                            820 ; internal ram data
                            821 ;--------------------------------------------------------
                            822 	.area DSEG    (DATA)
                    0000    823 LDCPCommand.DCP_GeneralCommandSetHandler$sloc0$1$0==.
   0000                     824 _DCP_GeneralCommandSetHandler_sloc0_1_0:
   0000                     825 	.ds 3
                    0003    826 LDCPCommand.DCP_GeneralCommandSetHandler$sloc1$1$0==.
   0003                     827 _DCP_GeneralCommandSetHandler_sloc1_1_0:
   0003                     828 	.ds 3
                    0006    829 LDCPCommand.DCP_GeneralCommandSetHandler$sloc2$1$0==.
   0006                     830 _DCP_GeneralCommandSetHandler_sloc2_1_0:
   0006                     831 	.ds 3
                    0009    832 LDCPCommand.DCP_GeneralCommandSetHandler$sloc3$1$0==.
   0009                     833 _DCP_GeneralCommandSetHandler_sloc3_1_0:
   0009                     834 	.ds 3
                            835 ;--------------------------------------------------------
                            836 ; overlayable items in internal ram 
                            837 ;--------------------------------------------------------
                            838 ;--------------------------------------------------------
                            839 ; indirectly addressable internal ram data
                            840 ;--------------------------------------------------------
                            841 	.area ISEG    (DATA)
                            842 ;--------------------------------------------------------
                            843 ; absolute internal ram data
                            844 ;--------------------------------------------------------
                            845 	.area IABS    (ABS,DATA)
                            846 	.area IABS    (ABS,DATA)
                            847 ;--------------------------------------------------------
                            848 ; bit data
                            849 ;--------------------------------------------------------
                            850 	.area BSEG    (BIT)
                            851 ;--------------------------------------------------------
                            852 ; paged external ram data
                            853 ;--------------------------------------------------------
                            854 	.area PSEG    (PAG,XDATA)
                            855 ;--------------------------------------------------------
                            856 ; external ram data
                            857 ;--------------------------------------------------------
                            858 	.area XSEG    (XDATA)
                    0000    859 LDCPCommand.DCP_CommandSetSupported$pRxPacket$1$83==.
   0000                     860 _DCP_CommandSetSupported_pRxPacket_1_83:
   0000                     861 	.ds 3
                    0003    862 LDCPCommand.DCP_GeneralCommandSetHandler$pRxPacket$1$87==.
   0003                     863 _DCP_GeneralCommandSetHandler_pRxPacket_1_87:
   0003                     864 	.ds 3
                    0006    865 LDCPCommand.DCP_GeneralCommandSetHandler$pGeneralCS$1$88==.
   0006                     866 _DCP_GeneralCommandSetHandler_pGeneralCS_1_88:
   0006                     867 	.ds 3
                            868 ;--------------------------------------------------------
                            869 ; absolute external ram data
                            870 ;--------------------------------------------------------
                            871 	.area XABS    (ABS,XDATA)
                            872 ;--------------------------------------------------------
                            873 ; external initialized ram data
                            874 ;--------------------------------------------------------
                            875 	.area XISEG   (XDATA)
                            876 	.area HOME    (CODE)
                            877 	.area GSINIT0 (CODE)
                            878 	.area GSINIT1 (CODE)
                            879 	.area GSINIT2 (CODE)
                            880 	.area GSINIT3 (CODE)
                            881 	.area GSINIT4 (CODE)
                            882 	.area GSINIT5 (CODE)
                            883 	.area GSINIT  (CODE)
                            884 	.area GSFINAL (CODE)
                            885 	.area CSEG    (CODE)
                            886 ;--------------------------------------------------------
                            887 ; global & static initialisations
                            888 ;--------------------------------------------------------
                            889 	.area HOME    (CODE)
                            890 	.area GSINIT  (CODE)
                            891 	.area GSFINAL (CODE)
                            892 	.area GSINIT  (CODE)
                            893 ;--------------------------------------------------------
                            894 ; Home
                            895 ;--------------------------------------------------------
                            896 	.area HOME    (CODE)
                            897 	.area HOME    (CODE)
                            898 ;--------------------------------------------------------
                            899 ; code
                            900 ;--------------------------------------------------------
                            901 	.area CSEG    (CODE)
                            902 ;------------------------------------------------------------
                            903 ;Allocation info for local variables in function 'DCP_CommandSetSupported'
                            904 ;------------------------------------------------------------
                            905 ;pRxPacket                 Allocated with name '_DCP_CommandSetSupported_pRxPacket_1_83'
                            906 ;ii                        Allocated with name '_DCP_CommandSetSupported_ii_1_84'
                            907 ;------------------------------------------------------------
                    0000    908 	G$DCP_CommandSetSupported$0$0 ==.
                    0000    909 	C$DCPCommand.c$60$0$0 ==.
                            910 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:60: U8 DCP_CommandSetSupported(U8 * pRxPacket)
                            911 ;	-----------------------------------------
                            912 ;	 function DCP_CommandSetSupported
                            913 ;	-----------------------------------------
   0000                     914 _DCP_CommandSetSupported:
                    0007    915 	ar7 = 0x07
                    0006    916 	ar6 = 0x06
                    0005    917 	ar5 = 0x05
                    0004    918 	ar4 = 0x04
                    0003    919 	ar3 = 0x03
                    0002    920 	ar2 = 0x02
                    0001    921 	ar1 = 0x01
                    0000    922 	ar0 = 0x00
   0000 AF F0               923 	mov	r7,b
   0002 AE 83               924 	mov	r6,dph
   0004 E5 82               925 	mov	a,dpl
   0006 90s00r00            926 	mov	dptr,#_DCP_CommandSetSupported_pRxPacket_1_83
   0009 F0                  927 	movx	@dptr,a
   000A A3                  928 	inc	dptr
   000B EE                  929 	mov	a,r6
   000C F0                  930 	movx	@dptr,a
   000D A3                  931 	inc	dptr
   000E EF                  932 	mov	a,r7
   000F F0                  933 	movx	@dptr,a
                    0010    934 	C$DCPCommand.c$64$2$85 ==.
                            935 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:64: for (ii = 0u; ii < NUMOF_CMDSET; ii++)
   0010 90s00r00            936 	mov	dptr,#_DCP_CommandSetSupported_pRxPacket_1_83
   0013 E0                  937 	movx	a,@dptr
   0014 FD                  938 	mov	r5,a
   0015 A3                  939 	inc	dptr
   0016 E0                  940 	movx	a,@dptr
   0017 FE                  941 	mov	r6,a
   0018 A3                  942 	inc	dptr
   0019 E0                  943 	movx	a,@dptr
   001A FF                  944 	mov	r7,a
   001B 74 02               945 	mov	a,#0x02
   001D 2D                  946 	add	a,r5
   001E FD                  947 	mov	r5,a
   001F E4                  948 	clr	a
   0020 3E                  949 	addc	a,r6
   0021 FE                  950 	mov	r6,a
   0022 8D 82               951 	mov	dpl,r5
   0024 8E 83               952 	mov	dph,r6
   0026 8F F0               953 	mov	b,r7
   0028 12s00r00            954 	lcall	__gptrget
   002B 54 3C               955 	anl	a,#0x3C
   002D FD                  956 	mov	r5,a
   002E 03                  957 	rr	a
   002F 03                  958 	rr	a
   0030 54 3F               959 	anl	a,#0x3F
   0032 FF                  960 	mov	r7,a
   0033 7E 00               961 	mov	r6,#0x00
   0035                     962 00103$:
   0035 BE 01 00            963 	cjne	r6,#0x01,00115$
   0038                     964 00115$:
   0038 50 1A               965 	jnc	00106$
                    003A    966 	C$DCPCommand.c$66$2$85 ==.
                            967 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:66: if (DCP_SupportedCommandSets[ii].CmdSet == ((*(pRxPacket + 2u) & 0x3C) >> 2u))
   003A EE                  968 	mov	a,r6
   003B 75 F0 03            969 	mov	b,#0x03
   003E A4                  970 	mul	ab
   003F 90s00r00            971 	mov	dptr,#_DCP_SupportedCommandSets
   0042 93                  972 	movc	a,@a+dptr
   0043 FD                  973 	mov	r5,a
   0044 B5 07 0A            974 	cjne	a,ar7,00105$
                    0047    975 	C$DCPCommand.c$69$3$86 ==.
                            976 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:69: DCPInternalData.CommandSetIndex = ii;
   0047 90s00r06            977 	mov	dptr,#(_DCPInternalData + 0x0006)
   004A EE                  978 	mov	a,r6
   004B F0                  979 	movx	@dptr,a
                    004C    980 	C$DCPCommand.c$71$3$86 ==.
                            981 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:71: return TRUE;
   004C 75 82 01            982 	mov	dpl,#0x01
   004F 80 06               983 	sjmp	00107$
   0051                     984 00105$:
                    0051    985 	C$DCPCommand.c$64$1$84 ==.
                            986 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:64: for (ii = 0u; ii < NUMOF_CMDSET; ii++)
   0051 0E                  987 	inc	r6
   0052 80 E1               988 	sjmp	00103$
   0054                     989 00106$:
                    0054    990 	C$DCPCommand.c$75$1$84 ==.
                            991 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:75: return FALSE;
   0054 75 82 00            992 	mov	dpl,#0x00
   0057                     993 00107$:
                    0057    994 	C$DCPCommand.c$76$1$84 ==.
                    0057    995 	XG$DCP_CommandSetSupported$0$0 ==.
   0057 22                  996 	ret
                            997 ;------------------------------------------------------------
                            998 ;Allocation info for local variables in function 'DCP_GeneralCommandSetHandler'
                            999 ;------------------------------------------------------------
                           1000 ;sloc0                     Allocated with name '_DCP_GeneralCommandSetHandler_sloc0_1_0'
                           1001 ;sloc1                     Allocated with name '_DCP_GeneralCommandSetHandler_sloc1_1_0'
                           1002 ;sloc2                     Allocated with name '_DCP_GeneralCommandSetHandler_sloc2_1_0'
                           1003 ;sloc3                     Allocated with name '_DCP_GeneralCommandSetHandler_sloc3_1_0'
                           1004 ;pRxPacket                 Allocated with name '_DCP_GeneralCommandSetHandler_pRxPacket_1_87'
                           1005 ;ii                        Allocated with name '_DCP_GeneralCommandSetHandler_ii_1_88'
                           1006 ;pGeneralCS                Allocated with name '_DCP_GeneralCommandSetHandler_pGeneralCS_1_88'
                           1007 ;------------------------------------------------------------
                    0058   1008 	G$DCP_GeneralCommandSetHandler$0$0 ==.
                    0058   1009 	C$DCPCommand.c$95$1$84 ==.
                           1010 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:95: U8 DCP_GeneralCommandSetHandler(U8 * pRxPacket)
                           1011 ;	-----------------------------------------
                           1012 ;	 function DCP_GeneralCommandSetHandler
                           1013 ;	-----------------------------------------
   0058                    1014 _DCP_GeneralCommandSetHandler:
   0058 AF F0              1015 	mov	r7,b
   005A AE 83              1016 	mov	r6,dph
   005C E5 82              1017 	mov	a,dpl
   005E 90s00r03           1018 	mov	dptr,#_DCP_GeneralCommandSetHandler_pRxPacket_1_87
   0061 F0                 1019 	movx	@dptr,a
   0062 A3                 1020 	inc	dptr
   0063 EE                 1021 	mov	a,r6
   0064 F0                 1022 	movx	@dptr,a
   0065 A3                 1023 	inc	dptr
   0066 EF                 1024 	mov	a,r7
   0067 F0                 1025 	movx	@dptr,a
                    0068   1026 	C$DCPCommand.c$98$1$88 ==.
                           1027 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:98: tGeneralCommandSet *pGeneralCS = (tGeneralCommandSet *) pRxPacket;
   0068 90s00r03           1028 	mov	dptr,#_DCP_GeneralCommandSetHandler_pRxPacket_1_87
   006B E0                 1029 	movx	a,@dptr
   006C FD                 1030 	mov	r5,a
   006D A3                 1031 	inc	dptr
   006E E0                 1032 	movx	a,@dptr
   006F FE                 1033 	mov	r6,a
   0070 A3                 1034 	inc	dptr
   0071 E0                 1035 	movx	a,@dptr
   0072 FF                 1036 	mov	r7,a
   0073 90s00r06           1037 	mov	dptr,#_DCP_GeneralCommandSetHandler_pGeneralCS_1_88
   0076 ED                 1038 	mov	a,r5
   0077 F0                 1039 	movx	@dptr,a
   0078 A3                 1040 	inc	dptr
   0079 EE                 1041 	mov	a,r6
   007A F0                 1042 	movx	@dptr,a
   007B A3                 1043 	inc	dptr
   007C EF                 1044 	mov	a,r7
   007D F0                 1045 	movx	@dptr,a
                    007E   1046 	C$DCPCommand.c$101$1$88 ==.
                           1047 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:101: switch (pGeneralCS->subCommand)
   007E 74 03              1048 	mov	a,#0x03
   0080 2D                 1049 	add	a,r5
   0081 F5*00              1050 	mov	_DCP_GeneralCommandSetHandler_sloc0_1_0,a
   0083 E4                 1051 	clr	a
   0084 3E                 1052 	addc	a,r6
   0085 F5*01              1053 	mov	(_DCP_GeneralCommandSetHandler_sloc0_1_0 + 1),a
   0087 8F*02              1054 	mov	(_DCP_GeneralCommandSetHandler_sloc0_1_0 + 2),r7
   0089 85*00 82           1055 	mov	dpl,_DCP_GeneralCommandSetHandler_sloc0_1_0
   008C 85*01 83           1056 	mov	dph,(_DCP_GeneralCommandSetHandler_sloc0_1_0 + 1)
   008F 85*02 F0           1057 	mov	b,(_DCP_GeneralCommandSetHandler_sloc0_1_0 + 2)
   0092 12s00r00           1058 	lcall	__gptrget
   0095 F9                 1059 	mov	r1,a
   0096 B9 01 02           1060 	cjne	r1,#0x01,00108$
   0099 80 03              1061 	sjmp	00109$
   009B                    1062 00108$:
   009B 02s04r3F           1063 	ljmp	00102$
   009E                    1064 00109$:
                    009E   1065 	C$DCPCommand.c$107$2$89 ==.
                           1066 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:107: pGeneralCS->Length = 5u + strlen(Ascii_Info.HW_NAME) + strlen(Ascii_Info.HW_VERSION) +
   009E 74 01              1067 	mov	a,#0x01
   00A0 2D                 1068 	add	a,r5
   00A1 F5*03              1069 	mov	_DCP_GeneralCommandSetHandler_sloc1_1_0,a
   00A3 E4                 1070 	clr	a
   00A4 3E                 1071 	addc	a,r6
   00A5 F5*04              1072 	mov	(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 1),a
   00A7 8F*05              1073 	mov	(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 2),r7
   00A9 90s00r00           1074 	mov	dptr,#_Ascii_Info
   00AC E4                 1075 	clr	a
   00AD 93                 1076 	movc	a,@a+dptr
   00AE FA                 1077 	mov	r2,a
   00AF A3                 1078 	inc	dptr
   00B0 E4                 1079 	clr	a
   00B1 93                 1080 	movc	a,@a+dptr
   00B2 FB                 1081 	mov	r3,a
   00B3 A3                 1082 	inc	dptr
   00B4 E4                 1083 	clr	a
   00B5 93                 1084 	movc	a,@a+dptr
   00B6 FC                 1085 	mov	r4,a
   00B7 8A 82              1086 	mov	dpl,r2
   00B9 8B 83              1087 	mov	dph,r3
   00BB 8C F0              1088 	mov	b,r4
   00BD C0 07              1089 	push	ar7
   00BF C0 06              1090 	push	ar6
   00C1 C0 05              1091 	push	ar5
   00C3 12s00r00           1092 	lcall	_strlen
   00C6 AB 82              1093 	mov	r3,dpl
   00C8 74 05              1094 	mov	a,#0x05
   00CA 2B                 1095 	add	a,r3
   00CB FB                 1096 	mov	r3,a
   00CC 90s00r03           1097 	mov	dptr,#(_Ascii_Info + 0x0003)
   00CF E4                 1098 	clr	a
   00D0 93                 1099 	movc	a,@a+dptr
   00D1 F9                 1100 	mov	r1,a
   00D2 A3                 1101 	inc	dptr
   00D3 E4                 1102 	clr	a
   00D4 93                 1103 	movc	a,@a+dptr
   00D5 FA                 1104 	mov	r2,a
   00D6 A3                 1105 	inc	dptr
   00D7 E4                 1106 	clr	a
   00D8 93                 1107 	movc	a,@a+dptr
   00D9 FC                 1108 	mov	r4,a
   00DA 89 82              1109 	mov	dpl,r1
   00DC 8A 83              1110 	mov	dph,r2
   00DE 8C F0              1111 	mov	b,r4
   00E0 C0 03              1112 	push	ar3
   00E2 12s00r00           1113 	lcall	_strlen
   00E5 AA 82              1114 	mov	r2,dpl
   00E7 D0 03              1115 	pop	ar3
   00E9 EA                 1116 	mov	a,r2
   00EA 2B                 1117 	add	a,r3
   00EB FB                 1118 	mov	r3,a
                    00EC   1119 	C$DCPCommand.c$108$2$89 ==.
                           1120 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:108: strlen(Ascii_Info.APP_FW_VERSION) + strlen(Ascii_Info.APP_FW_NAME);
   00EC 90s00r06           1121 	mov	dptr,#(_Ascii_Info + 0x0006)
   00EF E4                 1122 	clr	a
   00F0 93                 1123 	movc	a,@a+dptr
   00F1 F9                 1124 	mov	r1,a
   00F2 A3                 1125 	inc	dptr
   00F3 E4                 1126 	clr	a
   00F4 93                 1127 	movc	a,@a+dptr
   00F5 FA                 1128 	mov	r2,a
   00F6 A3                 1129 	inc	dptr
   00F7 E4                 1130 	clr	a
   00F8 93                 1131 	movc	a,@a+dptr
   00F9 FC                 1132 	mov	r4,a
   00FA 89 82              1133 	mov	dpl,r1
   00FC 8A 83              1134 	mov	dph,r2
   00FE 8C F0              1135 	mov	b,r4
   0100 C0 03              1136 	push	ar3
   0102 12s00r00           1137 	lcall	_strlen
   0105 AA 82              1138 	mov	r2,dpl
   0107 D0 03              1139 	pop	ar3
   0109 EA                 1140 	mov	a,r2
   010A 2B                 1141 	add	a,r3
   010B FB                 1142 	mov	r3,a
   010C 90s00r09           1143 	mov	dptr,#(_Ascii_Info + 0x0009)
   010F E4                 1144 	clr	a
   0110 93                 1145 	movc	a,@a+dptr
   0111 F9                 1146 	mov	r1,a
   0112 A3                 1147 	inc	dptr
   0113 E4                 1148 	clr	a
   0114 93                 1149 	movc	a,@a+dptr
   0115 FA                 1150 	mov	r2,a
   0116 A3                 1151 	inc	dptr
   0117 E4                 1152 	clr	a
   0118 93                 1153 	movc	a,@a+dptr
   0119 FC                 1154 	mov	r4,a
   011A 89 82              1155 	mov	dpl,r1
   011C 8A 83              1156 	mov	dph,r2
   011E 8C F0              1157 	mov	b,r4
   0120 C0 03              1158 	push	ar3
   0122 12s00r00           1159 	lcall	_strlen
   0125 AA 82              1160 	mov	r2,dpl
   0127 D0 03              1161 	pop	ar3
   0129 D0 05              1162 	pop	ar5
   012B D0 06              1163 	pop	ar6
   012D D0 07              1164 	pop	ar7
   012F EA                 1165 	mov	a,r2
   0130 2B                 1166 	add	a,r3
   0131 85*03 82           1167 	mov	dpl,_DCP_GeneralCommandSetHandler_sloc1_1_0
   0134 85*04 83           1168 	mov	dph,(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 1)
   0137 85*05 F0           1169 	mov	b,(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 2)
   013A 12s00r00           1170 	lcall	__gptrput
                    013D   1171 	C$DCPCommand.c$111$2$89 ==.
                           1172 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:111: pGeneralCS->Control = (MSG_INDICATION << 6u) | (COMMAND_SET_GENERAL << 2u) | DCPInternalData.SyncCounter;
   013D 74 02              1173 	mov	a,#0x02
   013F 2D                 1174 	add	a,r5
   0140 FA                 1175 	mov	r2,a
   0141 E4                 1176 	clr	a
   0142 3E                 1177 	addc	a,r6
   0143 FB                 1178 	mov	r3,a
   0144 8F 04              1179 	mov	ar4,r7
   0146 90s00r05           1180 	mov	dptr,#(_DCPInternalData + 0x0005)
   0149 E0                 1181 	movx	a,@dptr
   014A F9                 1182 	mov	r1,a
   014B 43 01 C0           1183 	orl	ar1,#0xC0
   014E 8A 82              1184 	mov	dpl,r2
   0150 8B 83              1185 	mov	dph,r3
   0152 8C F0              1186 	mov	b,r4
   0154 E9                 1187 	mov	a,r1
   0155 12s00r00           1188 	lcall	__gptrput
                    0158   1189 	C$DCPCommand.c$114$2$89 ==.
                           1190 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:114: pGeneralCS->subCommand = GENERAL_CS_DEVICE_INFO_IND;
   0158 85*00 82           1191 	mov	dpl,_DCP_GeneralCommandSetHandler_sloc0_1_0
   015B 85*01 83           1192 	mov	dph,(_DCP_GeneralCommandSetHandler_sloc0_1_0 + 1)
   015E 85*02 F0           1193 	mov	b,(_DCP_GeneralCommandSetHandler_sloc0_1_0 + 2)
   0161 74 02              1194 	mov	a,#0x02
   0163 12s00r00           1195 	lcall	__gptrput
                    0166   1196 	C$DCPCommand.c$117$2$89 ==.
                           1197 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:117: pRxPacket = ((U8 *) &pGeneralCS->subCommand) + 1u;
   0166 90s00r03           1198 	mov	dptr,#_DCP_GeneralCommandSetHandler_pRxPacket_1_87
   0169 74 04              1199 	mov	a,#0x04
   016B 2D                 1200 	add	a,r5
   016C F0                 1201 	movx	@dptr,a
   016D E4                 1202 	clr	a
   016E 3E                 1203 	addc	a,r6
   016F A3                 1204 	inc	dptr
   0170 F0                 1205 	movx	@dptr,a
   0171 A3                 1206 	inc	dptr
   0172 EF                 1207 	mov	a,r7
   0173 F0                 1208 	movx	@dptr,a
                    0174   1209 	C$DCPCommand.c$120$2$89 ==.
                           1210 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:120: memcpy(pRxPacket, Ascii_Info.HW_NAME, strlen(Ascii_Info.HW_NAME));
   0174 90s00r03           1211 	mov	dptr,#_DCP_GeneralCommandSetHandler_pRxPacket_1_87
   0177 E0                 1212 	movx	a,@dptr
   0178 F5*03              1213 	mov	_DCP_GeneralCommandSetHandler_sloc1_1_0,a
   017A A3                 1214 	inc	dptr
   017B E0                 1215 	movx	a,@dptr
   017C F5*04              1216 	mov	(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 1),a
   017E A3                 1217 	inc	dptr
   017F E0                 1218 	movx	a,@dptr
   0180 F5*05              1219 	mov	(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 2),a
   0182 85*03*06           1220 	mov	_DCP_GeneralCommandSetHandler_sloc2_1_0,_DCP_GeneralCommandSetHandler_sloc1_1_0
   0185 85*04*07           1221 	mov	(_DCP_GeneralCommandSetHandler_sloc2_1_0 + 1),(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 1)
   0188 85*05*08           1222 	mov	(_DCP_GeneralCommandSetHandler_sloc2_1_0 + 2),(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 2)
   018B 90s00r00           1223 	mov	dptr,#_Ascii_Info
   018E E4                 1224 	clr	a
   018F 93                 1225 	movc	a,@a+dptr
   0190 F5*09              1226 	mov	_DCP_GeneralCommandSetHandler_sloc3_1_0,a
   0192 A3                 1227 	inc	dptr
   0193 E4                 1228 	clr	a
   0194 93                 1229 	movc	a,@a+dptr
   0195 F5*0A              1230 	mov	(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 1),a
   0197 A3                 1231 	inc	dptr
   0198 E4                 1232 	clr	a
   0199 93                 1233 	movc	a,@a+dptr
   019A F5*0B              1234 	mov	(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 2),a
   019C A8*09              1235 	mov	r0,_DCP_GeneralCommandSetHandler_sloc3_1_0
   019E A9*0A              1236 	mov	r1,(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 1)
   01A0 AC*0B              1237 	mov	r4,(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 2)
   01A2 85*09 82           1238 	mov	dpl,_DCP_GeneralCommandSetHandler_sloc3_1_0
   01A5 85*0A 83           1239 	mov	dph,(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 1)
   01A8 85*0B F0           1240 	mov	b,(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 2)
   01AB C0 04              1241 	push	ar4
   01AD C0 01              1242 	push	ar1
   01AF C0 00              1243 	push	ar0
   01B1 12s00r00           1244 	lcall	_strlen
   01B4 AA 82              1245 	mov	r2,dpl
   01B6 AB 83              1246 	mov	r3,dph
   01B8 D0 00              1247 	pop	ar0
   01BA D0 01              1248 	pop	ar1
   01BC D0 04              1249 	pop	ar4
   01BE 90s00r00           1250 	mov	dptr,#_memcpy_PARM_2
   01C1 E8                 1251 	mov	a,r0
   01C2 F0                 1252 	movx	@dptr,a
   01C3 A3                 1253 	inc	dptr
   01C4 E9                 1254 	mov	a,r1
   01C5 F0                 1255 	movx	@dptr,a
   01C6 A3                 1256 	inc	dptr
   01C7 EC                 1257 	mov	a,r4
   01C8 F0                 1258 	movx	@dptr,a
   01C9 90s00r00           1259 	mov	dptr,#_memcpy_PARM_3
   01CC EA                 1260 	mov	a,r2
   01CD F0                 1261 	movx	@dptr,a
   01CE A3                 1262 	inc	dptr
   01CF EB                 1263 	mov	a,r3
   01D0 F0                 1264 	movx	@dptr,a
   01D1 85*06 82           1265 	mov	dpl,_DCP_GeneralCommandSetHandler_sloc2_1_0
   01D4 85*07 83           1266 	mov	dph,(_DCP_GeneralCommandSetHandler_sloc2_1_0 + 1)
   01D7 85*08 F0           1267 	mov	b,(_DCP_GeneralCommandSetHandler_sloc2_1_0 + 2)
   01DA 12s00r00           1268 	lcall	_memcpy
                    01DD   1269 	C$DCPCommand.c$121$2$89 ==.
                           1270 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:121: pRxPacket += strlen(Ascii_Info.HW_NAME);
   01DD 90s00r00           1271 	mov	dptr,#_Ascii_Info
   01E0 E4                 1272 	clr	a
   01E1 93                 1273 	movc	a,@a+dptr
   01E2 FA                 1274 	mov	r2,a
   01E3 A3                 1275 	inc	dptr
   01E4 E4                 1276 	clr	a
   01E5 93                 1277 	movc	a,@a+dptr
   01E6 FB                 1278 	mov	r3,a
   01E7 A3                 1279 	inc	dptr
   01E8 E4                 1280 	clr	a
   01E9 93                 1281 	movc	a,@a+dptr
   01EA FC                 1282 	mov	r4,a
   01EB 8A 82              1283 	mov	dpl,r2
   01ED 8B 83              1284 	mov	dph,r3
   01EF 8C F0              1285 	mov	b,r4
   01F1 12s00r00           1286 	lcall	_strlen
   01F4 AB 82              1287 	mov	r3,dpl
   01F6 AC 83              1288 	mov	r4,dph
   01F8 90s00r03           1289 	mov	dptr,#_DCP_GeneralCommandSetHandler_pRxPacket_1_87
   01FB EB                 1290 	mov	a,r3
   01FC 25*03              1291 	add	a,_DCP_GeneralCommandSetHandler_sloc1_1_0
   01FE F0                 1292 	movx	@dptr,a
   01FF EC                 1293 	mov	a,r4
   0200 35*04              1294 	addc	a,(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 1)
   0202 A3                 1295 	inc	dptr
   0203 F0                 1296 	movx	@dptr,a
   0204 A3                 1297 	inc	dptr
   0205 E5*05              1298 	mov	a,(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 2)
   0207 F0                 1299 	movx	@dptr,a
                    0208   1300 	C$DCPCommand.c$124$2$89 ==.
                           1301 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:124: memcpy(pRxPacket, Ascii_Info.HW_VERSION, strlen(Ascii_Info.HW_VERSION));
   0208 90s00r03           1302 	mov	dptr,#_DCP_GeneralCommandSetHandler_pRxPacket_1_87
   020B E0                 1303 	movx	a,@dptr
   020C F5*09              1304 	mov	_DCP_GeneralCommandSetHandler_sloc3_1_0,a
   020E A3                 1305 	inc	dptr
   020F E0                 1306 	movx	a,@dptr
   0210 F5*0A              1307 	mov	(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 1),a
   0212 A3                 1308 	inc	dptr
   0213 E0                 1309 	movx	a,@dptr
   0214 F5*0B              1310 	mov	(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 2),a
   0216 85*09*06           1311 	mov	_DCP_GeneralCommandSetHandler_sloc2_1_0,_DCP_GeneralCommandSetHandler_sloc3_1_0
   0219 85*0A*07           1312 	mov	(_DCP_GeneralCommandSetHandler_sloc2_1_0 + 1),(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 1)
   021C 85*0B*08           1313 	mov	(_DCP_GeneralCommandSetHandler_sloc2_1_0 + 2),(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 2)
   021F 90s00r03           1314 	mov	dptr,#(_Ascii_Info + 0x0003)
   0222 E4                 1315 	clr	a
   0223 93                 1316 	movc	a,@a+dptr
   0224 F5*03              1317 	mov	_DCP_GeneralCommandSetHandler_sloc1_1_0,a
   0226 A3                 1318 	inc	dptr
   0227 E4                 1319 	clr	a
   0228 93                 1320 	movc	a,@a+dptr
   0229 F5*04              1321 	mov	(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 1),a
   022B A3                 1322 	inc	dptr
   022C E4                 1323 	clr	a
   022D 93                 1324 	movc	a,@a+dptr
   022E F5*05              1325 	mov	(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 2),a
   0230 A8*03              1326 	mov	r0,_DCP_GeneralCommandSetHandler_sloc1_1_0
   0232 A9*04              1327 	mov	r1,(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 1)
   0234 AC*05              1328 	mov	r4,(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 2)
   0236 85*03 82           1329 	mov	dpl,_DCP_GeneralCommandSetHandler_sloc1_1_0
   0239 85*04 83           1330 	mov	dph,(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 1)
   023C 85*05 F0           1331 	mov	b,(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 2)
   023F C0 04              1332 	push	ar4
   0241 C0 01              1333 	push	ar1
   0243 C0 00              1334 	push	ar0
   0245 12s00r00           1335 	lcall	_strlen
   0248 AA 82              1336 	mov	r2,dpl
   024A AB 83              1337 	mov	r3,dph
   024C D0 00              1338 	pop	ar0
   024E D0 01              1339 	pop	ar1
   0250 D0 04              1340 	pop	ar4
   0252 90s00r00           1341 	mov	dptr,#_memcpy_PARM_2
   0255 E8                 1342 	mov	a,r0
   0256 F0                 1343 	movx	@dptr,a
   0257 A3                 1344 	inc	dptr
   0258 E9                 1345 	mov	a,r1
   0259 F0                 1346 	movx	@dptr,a
   025A A3                 1347 	inc	dptr
   025B EC                 1348 	mov	a,r4
   025C F0                 1349 	movx	@dptr,a
   025D 90s00r00           1350 	mov	dptr,#_memcpy_PARM_3
   0260 EA                 1351 	mov	a,r2
   0261 F0                 1352 	movx	@dptr,a
   0262 A3                 1353 	inc	dptr
   0263 EB                 1354 	mov	a,r3
   0264 F0                 1355 	movx	@dptr,a
   0265 85*06 82           1356 	mov	dpl,_DCP_GeneralCommandSetHandler_sloc2_1_0
   0268 85*07 83           1357 	mov	dph,(_DCP_GeneralCommandSetHandler_sloc2_1_0 + 1)
   026B 85*08 F0           1358 	mov	b,(_DCP_GeneralCommandSetHandler_sloc2_1_0 + 2)
   026E 12s00r00           1359 	lcall	_memcpy
                    0271   1360 	C$DCPCommand.c$125$2$89 ==.
                           1361 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:125: pRxPacket += strlen(Ascii_Info.HW_VERSION);
   0271 90s00r03           1362 	mov	dptr,#(_Ascii_Info + 0x0003)
   0274 E4                 1363 	clr	a
   0275 93                 1364 	movc	a,@a+dptr
   0276 FA                 1365 	mov	r2,a
   0277 A3                 1366 	inc	dptr
   0278 E4                 1367 	clr	a
   0279 93                 1368 	movc	a,@a+dptr
   027A FB                 1369 	mov	r3,a
   027B A3                 1370 	inc	dptr
   027C E4                 1371 	clr	a
   027D 93                 1372 	movc	a,@a+dptr
   027E FC                 1373 	mov	r4,a
   027F 8A 82              1374 	mov	dpl,r2
   0281 8B 83              1375 	mov	dph,r3
   0283 8C F0              1376 	mov	b,r4
   0285 12s00r00           1377 	lcall	_strlen
   0288 AB 82              1378 	mov	r3,dpl
   028A AC 83              1379 	mov	r4,dph
   028C 90s00r03           1380 	mov	dptr,#_DCP_GeneralCommandSetHandler_pRxPacket_1_87
   028F EB                 1381 	mov	a,r3
   0290 25*09              1382 	add	a,_DCP_GeneralCommandSetHandler_sloc3_1_0
   0292 F0                 1383 	movx	@dptr,a
   0293 EC                 1384 	mov	a,r4
   0294 35*0A              1385 	addc	a,(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 1)
   0296 A3                 1386 	inc	dptr
   0297 F0                 1387 	movx	@dptr,a
   0298 A3                 1388 	inc	dptr
   0299 E5*0B              1389 	mov	a,(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 2)
   029B F0                 1390 	movx	@dptr,a
                    029C   1391 	C$DCPCommand.c$128$2$89 ==.
                           1392 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:128: memcpy(pRxPacket, Ascii_Info.APP_FW_VERSION, strlen(Ascii_Info.APP_FW_VERSION));
   029C 90s00r03           1393 	mov	dptr,#_DCP_GeneralCommandSetHandler_pRxPacket_1_87
   029F E0                 1394 	movx	a,@dptr
   02A0 F5*09              1395 	mov	_DCP_GeneralCommandSetHandler_sloc3_1_0,a
   02A2 A3                 1396 	inc	dptr
   02A3 E0                 1397 	movx	a,@dptr
   02A4 F5*0A              1398 	mov	(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 1),a
   02A6 A3                 1399 	inc	dptr
   02A7 E0                 1400 	movx	a,@dptr
   02A8 F5*0B              1401 	mov	(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 2),a
   02AA 85*09*06           1402 	mov	_DCP_GeneralCommandSetHandler_sloc2_1_0,_DCP_GeneralCommandSetHandler_sloc3_1_0
   02AD 85*0A*07           1403 	mov	(_DCP_GeneralCommandSetHandler_sloc2_1_0 + 1),(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 1)
   02B0 85*0B*08           1404 	mov	(_DCP_GeneralCommandSetHandler_sloc2_1_0 + 2),(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 2)
   02B3 90s00r06           1405 	mov	dptr,#(_Ascii_Info + 0x0006)
   02B6 E4                 1406 	clr	a
   02B7 93                 1407 	movc	a,@a+dptr
   02B8 F5*03              1408 	mov	_DCP_GeneralCommandSetHandler_sloc1_1_0,a
   02BA A3                 1409 	inc	dptr
   02BB E4                 1410 	clr	a
   02BC 93                 1411 	movc	a,@a+dptr
   02BD F5*04              1412 	mov	(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 1),a
   02BF A3                 1413 	inc	dptr
   02C0 E4                 1414 	clr	a
   02C1 93                 1415 	movc	a,@a+dptr
   02C2 F5*05              1416 	mov	(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 2),a
   02C4 A8*03              1417 	mov	r0,_DCP_GeneralCommandSetHandler_sloc1_1_0
   02C6 A9*04              1418 	mov	r1,(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 1)
   02C8 AC*05              1419 	mov	r4,(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 2)
   02CA 85*03 82           1420 	mov	dpl,_DCP_GeneralCommandSetHandler_sloc1_1_0
   02CD 85*04 83           1421 	mov	dph,(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 1)
   02D0 85*05 F0           1422 	mov	b,(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 2)
   02D3 C0 04              1423 	push	ar4
   02D5 C0 01              1424 	push	ar1
   02D7 C0 00              1425 	push	ar0
   02D9 12s00r00           1426 	lcall	_strlen
   02DC AA 82              1427 	mov	r2,dpl
   02DE AB 83              1428 	mov	r3,dph
   02E0 D0 00              1429 	pop	ar0
   02E2 D0 01              1430 	pop	ar1
   02E4 D0 04              1431 	pop	ar4
   02E6 90s00r00           1432 	mov	dptr,#_memcpy_PARM_2
   02E9 E8                 1433 	mov	a,r0
   02EA F0                 1434 	movx	@dptr,a
   02EB A3                 1435 	inc	dptr
   02EC E9                 1436 	mov	a,r1
   02ED F0                 1437 	movx	@dptr,a
   02EE A3                 1438 	inc	dptr
   02EF EC                 1439 	mov	a,r4
   02F0 F0                 1440 	movx	@dptr,a
   02F1 90s00r00           1441 	mov	dptr,#_memcpy_PARM_3
   02F4 EA                 1442 	mov	a,r2
   02F5 F0                 1443 	movx	@dptr,a
   02F6 A3                 1444 	inc	dptr
   02F7 EB                 1445 	mov	a,r3
   02F8 F0                 1446 	movx	@dptr,a
   02F9 85*06 82           1447 	mov	dpl,_DCP_GeneralCommandSetHandler_sloc2_1_0
   02FC 85*07 83           1448 	mov	dph,(_DCP_GeneralCommandSetHandler_sloc2_1_0 + 1)
   02FF 85*08 F0           1449 	mov	b,(_DCP_GeneralCommandSetHandler_sloc2_1_0 + 2)
   0302 12s00r00           1450 	lcall	_memcpy
                    0305   1451 	C$DCPCommand.c$129$2$89 ==.
                           1452 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:129: pRxPacket += strlen(Ascii_Info.APP_FW_VERSION);
   0305 90s00r06           1453 	mov	dptr,#(_Ascii_Info + 0x0006)
   0308 E4                 1454 	clr	a
   0309 93                 1455 	movc	a,@a+dptr
   030A FA                 1456 	mov	r2,a
   030B A3                 1457 	inc	dptr
   030C E4                 1458 	clr	a
   030D 93                 1459 	movc	a,@a+dptr
   030E FB                 1460 	mov	r3,a
   030F A3                 1461 	inc	dptr
   0310 E4                 1462 	clr	a
   0311 93                 1463 	movc	a,@a+dptr
   0312 FC                 1464 	mov	r4,a
   0313 8A 82              1465 	mov	dpl,r2
   0315 8B 83              1466 	mov	dph,r3
   0317 8C F0              1467 	mov	b,r4
   0319 12s00r00           1468 	lcall	_strlen
   031C AB 82              1469 	mov	r3,dpl
   031E AC 83              1470 	mov	r4,dph
   0320 90s00r03           1471 	mov	dptr,#_DCP_GeneralCommandSetHandler_pRxPacket_1_87
   0323 EB                 1472 	mov	a,r3
   0324 25*09              1473 	add	a,_DCP_GeneralCommandSetHandler_sloc3_1_0
   0326 F0                 1474 	movx	@dptr,a
   0327 EC                 1475 	mov	a,r4
   0328 35*0A              1476 	addc	a,(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 1)
   032A A3                 1477 	inc	dptr
   032B F0                 1478 	movx	@dptr,a
   032C A3                 1479 	inc	dptr
   032D E5*0B              1480 	mov	a,(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 2)
   032F F0                 1481 	movx	@dptr,a
                    0330   1482 	C$DCPCommand.c$132$2$89 ==.
                           1483 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:132: memcpy(pRxPacket, Ascii_Info.APP_FW_NAME, strlen(Ascii_Info.APP_FW_NAME));
   0330 90s00r03           1484 	mov	dptr,#_DCP_GeneralCommandSetHandler_pRxPacket_1_87
   0333 E0                 1485 	movx	a,@dptr
   0334 F5*09              1486 	mov	_DCP_GeneralCommandSetHandler_sloc3_1_0,a
   0336 A3                 1487 	inc	dptr
   0337 E0                 1488 	movx	a,@dptr
   0338 F5*0A              1489 	mov	(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 1),a
   033A A3                 1490 	inc	dptr
   033B E0                 1491 	movx	a,@dptr
   033C F5*0B              1492 	mov	(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 2),a
   033E 85*09*06           1493 	mov	_DCP_GeneralCommandSetHandler_sloc2_1_0,_DCP_GeneralCommandSetHandler_sloc3_1_0
   0341 85*0A*07           1494 	mov	(_DCP_GeneralCommandSetHandler_sloc2_1_0 + 1),(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 1)
   0344 85*0B*08           1495 	mov	(_DCP_GeneralCommandSetHandler_sloc2_1_0 + 2),(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 2)
   0347 90s00r09           1496 	mov	dptr,#(_Ascii_Info + 0x0009)
   034A E4                 1497 	clr	a
   034B 93                 1498 	movc	a,@a+dptr
   034C F5*03              1499 	mov	_DCP_GeneralCommandSetHandler_sloc1_1_0,a
   034E A3                 1500 	inc	dptr
   034F E4                 1501 	clr	a
   0350 93                 1502 	movc	a,@a+dptr
   0351 F5*04              1503 	mov	(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 1),a
   0353 A3                 1504 	inc	dptr
   0354 E4                 1505 	clr	a
   0355 93                 1506 	movc	a,@a+dptr
   0356 F5*05              1507 	mov	(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 2),a
   0358 A8*03              1508 	mov	r0,_DCP_GeneralCommandSetHandler_sloc1_1_0
   035A A9*04              1509 	mov	r1,(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 1)
   035C AC*05              1510 	mov	r4,(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 2)
   035E 85*03 82           1511 	mov	dpl,_DCP_GeneralCommandSetHandler_sloc1_1_0
   0361 85*04 83           1512 	mov	dph,(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 1)
   0364 85*05 F0           1513 	mov	b,(_DCP_GeneralCommandSetHandler_sloc1_1_0 + 2)
   0367 C0 04              1514 	push	ar4
   0369 C0 01              1515 	push	ar1
   036B C0 00              1516 	push	ar0
   036D 12s00r00           1517 	lcall	_strlen
   0370 AA 82              1518 	mov	r2,dpl
   0372 AB 83              1519 	mov	r3,dph
   0374 D0 00              1520 	pop	ar0
   0376 D0 01              1521 	pop	ar1
   0378 D0 04              1522 	pop	ar4
   037A 90s00r00           1523 	mov	dptr,#_memcpy_PARM_2
   037D E8                 1524 	mov	a,r0
   037E F0                 1525 	movx	@dptr,a
   037F A3                 1526 	inc	dptr
   0380 E9                 1527 	mov	a,r1
   0381 F0                 1528 	movx	@dptr,a
   0382 A3                 1529 	inc	dptr
   0383 EC                 1530 	mov	a,r4
   0384 F0                 1531 	movx	@dptr,a
   0385 90s00r00           1532 	mov	dptr,#_memcpy_PARM_3
   0388 EA                 1533 	mov	a,r2
   0389 F0                 1534 	movx	@dptr,a
   038A A3                 1535 	inc	dptr
   038B EB                 1536 	mov	a,r3
   038C F0                 1537 	movx	@dptr,a
   038D 85*06 82           1538 	mov	dpl,_DCP_GeneralCommandSetHandler_sloc2_1_0
   0390 85*07 83           1539 	mov	dph,(_DCP_GeneralCommandSetHandler_sloc2_1_0 + 1)
   0393 85*08 F0           1540 	mov	b,(_DCP_GeneralCommandSetHandler_sloc2_1_0 + 2)
   0396 12s00r00           1541 	lcall	_memcpy
                    0399   1542 	C$DCPCommand.c$133$2$89 ==.
                           1543 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:133: pRxPacket += strlen(Ascii_Info.APP_FW_NAME);
   0399 90s00r09           1544 	mov	dptr,#(_Ascii_Info + 0x0009)
   039C E4                 1545 	clr	a
   039D 93                 1546 	movc	a,@a+dptr
   039E FA                 1547 	mov	r2,a
   039F A3                 1548 	inc	dptr
   03A0 E4                 1549 	clr	a
   03A1 93                 1550 	movc	a,@a+dptr
   03A2 FB                 1551 	mov	r3,a
   03A3 A3                 1552 	inc	dptr
   03A4 E4                 1553 	clr	a
   03A5 93                 1554 	movc	a,@a+dptr
   03A6 FC                 1555 	mov	r4,a
   03A7 8A 82              1556 	mov	dpl,r2
   03A9 8B 83              1557 	mov	dph,r3
   03AB 8C F0              1558 	mov	b,r4
   03AD 12s00r00           1559 	lcall	_strlen
   03B0 AB 82              1560 	mov	r3,dpl
   03B2 AC 83              1561 	mov	r4,dph
   03B4 90s00r03           1562 	mov	dptr,#_DCP_GeneralCommandSetHandler_pRxPacket_1_87
   03B7 EB                 1563 	mov	a,r3
   03B8 25*09              1564 	add	a,_DCP_GeneralCommandSetHandler_sloc3_1_0
   03BA F0                 1565 	movx	@dptr,a
   03BB EC                 1566 	mov	a,r4
   03BC 35*0A              1567 	addc	a,(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 1)
   03BE A3                 1568 	inc	dptr
   03BF F0                 1569 	movx	@dptr,a
   03C0 A3                 1570 	inc	dptr
   03C1 E5*0B              1571 	mov	a,(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 2)
   03C3 F0                 1572 	movx	@dptr,a
                    03C4   1573 	C$DCPCommand.c$136$2$89 ==.
                           1574 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:136: *pRxPacket++ = COMMAND_SET_GENERAL;
   03C4 90s00r03           1575 	mov	dptr,#_DCP_GeneralCommandSetHandler_pRxPacket_1_87
   03C7 E0                 1576 	movx	a,@dptr
   03C8 FA                 1577 	mov	r2,a
   03C9 A3                 1578 	inc	dptr
   03CA E0                 1579 	movx	a,@dptr
   03CB FB                 1580 	mov	r3,a
   03CC A3                 1581 	inc	dptr
   03CD E0                 1582 	movx	a,@dptr
   03CE FC                 1583 	mov	r4,a
   03CF 8A 82              1584 	mov	dpl,r2
   03D1 8B 83              1585 	mov	dph,r3
   03D3 8C F0              1586 	mov	b,r4
   03D5 E4                 1587 	clr	a
   03D6 12s00r00           1588 	lcall	__gptrput
   03D9 90s00r03           1589 	mov	dptr,#_DCP_GeneralCommandSetHandler_pRxPacket_1_87
   03DC 74 01              1590 	mov	a,#0x01
   03DE 2A                 1591 	add	a,r2
   03DF F0                 1592 	movx	@dptr,a
   03E0 E4                 1593 	clr	a
   03E1 3B                 1594 	addc	a,r3
   03E2 A3                 1595 	inc	dptr
   03E3 F0                 1596 	movx	@dptr,a
   03E4 A3                 1597 	inc	dptr
   03E5 EC                 1598 	mov	a,r4
   03E6 F0                 1599 	movx	@dptr,a
                    03E7   1600 	C$DCPCommand.c$137$2$89 ==.
                           1601 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:137: *pRxPacket++ = COMMAND_SET_LAB_MEASURE;
   03E7 90s00r03           1602 	mov	dptr,#_DCP_GeneralCommandSetHandler_pRxPacket_1_87
   03EA E0                 1603 	movx	a,@dptr
   03EB FA                 1604 	mov	r2,a
   03EC A3                 1605 	inc	dptr
   03ED E0                 1606 	movx	a,@dptr
   03EE FB                 1607 	mov	r3,a
   03EF A3                 1608 	inc	dptr
   03F0 E0                 1609 	movx	a,@dptr
   03F1 FC                 1610 	mov	r4,a
   03F2 8A 82              1611 	mov	dpl,r2
   03F4 8B 83              1612 	mov	dph,r3
   03F6 8C F0              1613 	mov	b,r4
   03F8 74 07              1614 	mov	a,#0x07
   03FA 12s00r00           1615 	lcall	__gptrput
   03FD 90s00r03           1616 	mov	dptr,#_DCP_GeneralCommandSetHandler_pRxPacket_1_87
   0400 74 01              1617 	mov	a,#0x01
   0402 2A                 1618 	add	a,r2
   0403 F0                 1619 	movx	@dptr,a
   0404 E4                 1620 	clr	a
   0405 3B                 1621 	addc	a,r3
   0406 A3                 1622 	inc	dptr
   0407 F0                 1623 	movx	@dptr,a
   0408 A3                 1624 	inc	dptr
   0409 EC                 1625 	mov	a,r4
   040A F0                 1626 	movx	@dptr,a
                    040B   1627 	C$DCPCommand.c$140$2$89 ==.
                           1628 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:140: *pRxPacket = DCP_IF_CalcEDC((U8 *) pGeneralCS);
   040B 90s00r03           1629 	mov	dptr,#_DCP_GeneralCommandSetHandler_pRxPacket_1_87
   040E E0                 1630 	movx	a,@dptr
   040F F5*09              1631 	mov	_DCP_GeneralCommandSetHandler_sloc3_1_0,a
   0411 A3                 1632 	inc	dptr
   0412 E0                 1633 	movx	a,@dptr
   0413 F5*0A              1634 	mov	(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 1),a
   0415 A3                 1635 	inc	dptr
   0416 E0                 1636 	movx	a,@dptr
   0417 F5*0B              1637 	mov	(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 2),a
   0419 90s00r06           1638 	mov	dptr,#_DCP_GeneralCommandSetHandler_pGeneralCS_1_88
   041C E0                 1639 	movx	a,@dptr
   041D F8                 1640 	mov	r0,a
   041E A3                 1641 	inc	dptr
   041F E0                 1642 	movx	a,@dptr
   0420 F9                 1643 	mov	r1,a
   0421 A3                 1644 	inc	dptr
   0422 E0                 1645 	movx	a,@dptr
   0423 FC                 1646 	mov	r4,a
   0424 88 82              1647 	mov	dpl,r0
   0426 89 83              1648 	mov	dph,r1
   0428 8C F0              1649 	mov	b,r4
   042A 12s00r00           1650 	lcall	_DCP_IF_CalcEDC
   042D AC 82              1651 	mov	r4,dpl
   042F 85*09 82           1652 	mov	dpl,_DCP_GeneralCommandSetHandler_sloc3_1_0
   0432 85*0A 83           1653 	mov	dph,(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 1)
   0435 85*0B F0           1654 	mov	b,(_DCP_GeneralCommandSetHandler_sloc3_1_0 + 2)
   0438 EC                 1655 	mov	a,r4
   0439 12s00r00           1656 	lcall	__gptrput
                    043C   1657 	C$DCPCommand.c$142$2$89 ==.
                           1658 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:142: break;
   043C 02s04rE4           1659 	ljmp	00103$
                    043F   1660 	C$DCPCommand.c$144$2$89 ==.
                           1661 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:144: default:
   043F                    1662 00102$:
                    043F   1663 	C$DCPCommand.c$148$2$89 ==.
                           1664 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:148: pGeneralCS->Length = 4u;
   043F 74 01              1665 	mov	a,#0x01
   0441 2D                 1666 	add	a,r5
   0442 FA                 1667 	mov	r2,a
   0443 E4                 1668 	clr	a
   0444 3E                 1669 	addc	a,r6
   0445 FB                 1670 	mov	r3,a
   0446 8F 04              1671 	mov	ar4,r7
   0448 8A 82              1672 	mov	dpl,r2
   044A 8B 83              1673 	mov	dph,r3
   044C 8C F0              1674 	mov	b,r4
   044E 74 04              1675 	mov	a,#0x04
   0450 12s00r00           1676 	lcall	__gptrput
                    0453   1677 	C$DCPCommand.c$151$2$89 ==.
                           1678 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:151: pGeneralCS->Control = (MSG_INDICATION << 6u) | (COMMAND_SET_GENERAL << 2u) | DCPInternalData.SyncCounter;
   0453 74 02              1679 	mov	a,#0x02
   0455 2D                 1680 	add	a,r5
   0456 FA                 1681 	mov	r2,a
   0457 E4                 1682 	clr	a
   0458 3E                 1683 	addc	a,r6
   0459 FB                 1684 	mov	r3,a
   045A 8F 04              1685 	mov	ar4,r7
   045C 90s00r05           1686 	mov	dptr,#(_DCPInternalData + 0x0005)
   045F E0                 1687 	movx	a,@dptr
   0460 F9                 1688 	mov	r1,a
   0461 43 01 C0           1689 	orl	ar1,#0xC0
   0464 8A 82              1690 	mov	dpl,r2
   0466 8B 83              1691 	mov	dph,r3
   0468 8C F0              1692 	mov	b,r4
   046A E9                 1693 	mov	a,r1
   046B 12s00r00           1694 	lcall	__gptrput
                    046E   1695 	C$DCPCommand.c$154$2$89 ==.
                           1696 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:154: pGeneralCS->subCommand = GENERAL_CS_INDICATION;
   046E 85*00 82           1697 	mov	dpl,_DCP_GeneralCommandSetHandler_sloc0_1_0
   0471 85*01 83           1698 	mov	dph,(_DCP_GeneralCommandSetHandler_sloc0_1_0 + 1)
   0474 85*02 F0           1699 	mov	b,(_DCP_GeneralCommandSetHandler_sloc0_1_0 + 2)
   0477 E4                 1700 	clr	a
   0478 12s00r00           1701 	lcall	__gptrput
                    047B   1702 	C$DCPCommand.c$156$2$89 ==.
                           1703 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:156: pRxPacket = ((U8 *) &pGeneralCS->subCommand) + 1u;
   047B 90s00r03           1704 	mov	dptr,#_DCP_GeneralCommandSetHandler_pRxPacket_1_87
   047E 74 04              1705 	mov	a,#0x04
   0480 2D                 1706 	add	a,r5
   0481 F0                 1707 	movx	@dptr,a
   0482 E4                 1708 	clr	a
   0483 3E                 1709 	addc	a,r6
   0484 A3                 1710 	inc	dptr
   0485 F0                 1711 	movx	@dptr,a
   0486 A3                 1712 	inc	dptr
   0487 EF                 1713 	mov	a,r7
   0488 F0                 1714 	movx	@dptr,a
                    0489   1715 	C$DCPCommand.c$158$2$89 ==.
                           1716 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:158: *pRxPacket++ = GENERAL_CS_COMMAND_NOT_SUPPORTED;
   0489 90s00r03           1717 	mov	dptr,#_DCP_GeneralCommandSetHandler_pRxPacket_1_87
   048C E0                 1718 	movx	a,@dptr
   048D FD                 1719 	mov	r5,a
   048E A3                 1720 	inc	dptr
   048F E0                 1721 	movx	a,@dptr
   0490 FE                 1722 	mov	r6,a
   0491 A3                 1723 	inc	dptr
   0492 E0                 1724 	movx	a,@dptr
   0493 FF                 1725 	mov	r7,a
   0494 8D 82              1726 	mov	dpl,r5
   0496 8E 83              1727 	mov	dph,r6
   0498 8F F0              1728 	mov	b,r7
   049A 74 01              1729 	mov	a,#0x01
   049C 12s00r00           1730 	lcall	__gptrput
   049F 90s00r03           1731 	mov	dptr,#_DCP_GeneralCommandSetHandler_pRxPacket_1_87
   04A2 74 01              1732 	mov	a,#0x01
   04A4 2D                 1733 	add	a,r5
   04A5 F0                 1734 	movx	@dptr,a
   04A6 E4                 1735 	clr	a
   04A7 3E                 1736 	addc	a,r6
   04A8 A3                 1737 	inc	dptr
   04A9 F0                 1738 	movx	@dptr,a
   04AA A3                 1739 	inc	dptr
   04AB EF                 1740 	mov	a,r7
   04AC F0                 1741 	movx	@dptr,a
                    04AD   1742 	C$DCPCommand.c$160$2$89 ==.
                           1743 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:160: *pRxPacket = DCP_IF_CalcEDC((U8 *) pGeneralCS);
   04AD 90s00r03           1744 	mov	dptr,#_DCP_GeneralCommandSetHandler_pRxPacket_1_87
   04B0 E0                 1745 	movx	a,@dptr
   04B1 FD                 1746 	mov	r5,a
   04B2 A3                 1747 	inc	dptr
   04B3 E0                 1748 	movx	a,@dptr
   04B4 FE                 1749 	mov	r6,a
   04B5 A3                 1750 	inc	dptr
   04B6 E0                 1751 	movx	a,@dptr
   04B7 FF                 1752 	mov	r7,a
   04B8 90s00r06           1753 	mov	dptr,#_DCP_GeneralCommandSetHandler_pGeneralCS_1_88
   04BB E0                 1754 	movx	a,@dptr
   04BC FA                 1755 	mov	r2,a
   04BD A3                 1756 	inc	dptr
   04BE E0                 1757 	movx	a,@dptr
   04BF FB                 1758 	mov	r3,a
   04C0 A3                 1759 	inc	dptr
   04C1 E0                 1760 	movx	a,@dptr
   04C2 FC                 1761 	mov	r4,a
   04C3 8A 82              1762 	mov	dpl,r2
   04C5 8B 83              1763 	mov	dph,r3
   04C7 8C F0              1764 	mov	b,r4
   04C9 C0 07              1765 	push	ar7
   04CB C0 06              1766 	push	ar6
   04CD C0 05              1767 	push	ar5
   04CF 12s00r00           1768 	lcall	_DCP_IF_CalcEDC
   04D2 AC 82              1769 	mov	r4,dpl
   04D4 D0 05              1770 	pop	ar5
   04D6 D0 06              1771 	pop	ar6
   04D8 D0 07              1772 	pop	ar7
   04DA 8D 82              1773 	mov	dpl,r5
   04DC 8E 83              1774 	mov	dph,r6
   04DE 8F F0              1775 	mov	b,r7
   04E0 EC                 1776 	mov	a,r4
   04E1 12s00r00           1777 	lcall	__gptrput
                    04E4   1778 	C$DCPCommand.c$163$1$88 ==.
                           1779 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:163: }
   04E4                    1780 00103$:
                    04E4   1781 	C$DCPCommand.c$165$1$88 ==.
                           1782 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\DCPModule\Source\DCPCommand.c:165: return TRUE;
   04E4 75 82 01           1783 	mov	dpl,#0x01
                    04E7   1784 	C$DCPCommand.c$166$1$88 ==.
                    04E7   1785 	XG$DCP_GeneralCommandSetHandler$0$0 ==.
   04E7 22                 1786 	ret
                           1787 	.area CSEG    (CODE)
                           1788 	.area CONST   (CODE)
                    0000   1789 G$DCP_SupportedCommandSets$0$0 == .
   0000                    1790 _DCP_SupportedCommandSets:
   0000 00                 1791 	.db #0x00	; 0
   0001r58s00              1792 	.byte _DCP_GeneralCommandSetHandler,(_DCP_GeneralCommandSetHandler >> 8)
                           1793 	.area XINIT   (CODE)
                           1794 	.area CABS    (ABS,CODE)
