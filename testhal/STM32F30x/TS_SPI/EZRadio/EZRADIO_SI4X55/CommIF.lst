                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.2.0 #8008 (Jul  6 2012) (MINGW32)
                              4 ; This file was generated Tue Apr 02 14:56:20 2013
                              5 ;--------------------------------------------------------
                              6 	.module CommIF
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _PB4
                             13 	.globl _PB3
                             14 	.globl _PB2
                             15 	.globl _PB1
                             16 	.globl _LCD_A0
                             17 	.globl _LCD_NSEL
                             18 	.globl _RF_PWRDN
                             19 	.globl _RF_NIRQ
                             20 	.globl _RF_NSEL
                             21 	.globl _MCU_MOSI
                             22 	.globl _MCU_MISO
                             23 	.globl _MCU_SCK
                             24 	.globl _BUZZ
                             25 	.globl _LED4
                             26 	.globl _LED3
                             27 	.globl _LED2
                             28 	.globl _LED1
                             29 	.globl _MCU_SCL
                             30 	.globl _MCU_SDA
                             31 	.globl _SPI0EN
                             32 	.globl _TXBMT0
                             33 	.globl _NSS0MD0
                             34 	.globl _NSS0MD1
                             35 	.globl _RXOVRN0
                             36 	.globl _MODF0
                             37 	.globl _WCOL0
                             38 	.globl _SPIF0
                             39 	.globl _AD0CM0
                             40 	.globl _AD0CM1
                             41 	.globl _AD0CM2
                             42 	.globl _AD0WINT
                             43 	.globl _AD0BUSY
                             44 	.globl _AD0INT
                             45 	.globl _BURSTEN
                             46 	.globl _AD0EN
                             47 	.globl _CCF0
                             48 	.globl _CCF1
                             49 	.globl _CCF2
                             50 	.globl _CCF3
                             51 	.globl _CCF4
                             52 	.globl _CCF5
                             53 	.globl _CR
                             54 	.globl _CF
                             55 	.globl _P
                             56 	.globl _F1
                             57 	.globl _OV
                             58 	.globl _RS0
                             59 	.globl _RS1
                             60 	.globl _F0
                             61 	.globl _AC
                             62 	.globl _CY
                             63 	.globl _T2XCLK
                             64 	.globl _T2RCLK
                             65 	.globl _TR2
                             66 	.globl _T2SPLIT
                             67 	.globl _TF2CEN
                             68 	.globl _TF2LEN
                             69 	.globl _TF2L
                             70 	.globl _TF2H
                             71 	.globl _SI
                             72 	.globl _ACK
                             73 	.globl _ARBLOST
                             74 	.globl _ACKRQ
                             75 	.globl _STO
                             76 	.globl _STA
                             77 	.globl _TXMODE
                             78 	.globl _MASTER
                             79 	.globl _PX0
                             80 	.globl _PT0
                             81 	.globl _PX1
                             82 	.globl _PT1
                             83 	.globl _PS0
                             84 	.globl _PT2
                             85 	.globl _PSPI0
                             86 	.globl _SPI1EN
                             87 	.globl _TXBMT1
                             88 	.globl _NSS1MD0
                             89 	.globl _NSS1MD1
                             90 	.globl _RXOVRN1
                             91 	.globl _MODF1
                             92 	.globl _WCOL1
                             93 	.globl _SPIF1
                             94 	.globl _EX0
                             95 	.globl _ET0
                             96 	.globl _EX1
                             97 	.globl _ET1
                             98 	.globl _ES0
                             99 	.globl _ET2
                            100 	.globl _ESPI0
                            101 	.globl _EA
                            102 	.globl _RI0
                            103 	.globl _TI0
                            104 	.globl _RB80
                            105 	.globl _TB80
                            106 	.globl _REN0
                            107 	.globl _MCE0
                            108 	.globl _S0MODE
                            109 	.globl _IT0
                            110 	.globl _IE0
                            111 	.globl _IT1
                            112 	.globl _IE1
                            113 	.globl _TR0
                            114 	.globl _TF0
                            115 	.globl _TR1
                            116 	.globl _TF1
                            117 	.globl _PCA0CP4
                            118 	.globl _PCA0CP0
                            119 	.globl _PCA0
                            120 	.globl _PCA0CP3
                            121 	.globl _PCA0CP2
                            122 	.globl _PCA0CP1
                            123 	.globl _PCA0CP5
                            124 	.globl _TMR2
                            125 	.globl _TMR2RL
                            126 	.globl _ADC0LT
                            127 	.globl _ADC0GT
                            128 	.globl _ADC0
                            129 	.globl _TMR3
                            130 	.globl _TMR3RL
                            131 	.globl _TOFF
                            132 	.globl _DP
                            133 	.globl _VDM0CN
                            134 	.globl _PCA0CPH4
                            135 	.globl _PCA0CPL4
                            136 	.globl _PCA0CPH0
                            137 	.globl _PCA0CPL0
                            138 	.globl _PCA0H
                            139 	.globl _PCA0L
                            140 	.globl _SPI0CN
                            141 	.globl _EIP2
                            142 	.globl _EIP1
                            143 	.globl _SMB0ADM
                            144 	.globl _SMB0ADR
                            145 	.globl _P2MDIN
                            146 	.globl _P1MDIN
                            147 	.globl _P0MDIN
                            148 	.globl _B
                            149 	.globl _RSTSRC
                            150 	.globl _PCA0CPH3
                            151 	.globl _PCA0CPL3
                            152 	.globl _PCA0CPH2
                            153 	.globl _PCA0CPL2
                            154 	.globl _PCA0CPH1
                            155 	.globl _PCA0CPL1
                            156 	.globl _ADC0CN
                            157 	.globl _EIE2
                            158 	.globl _EIE1
                            159 	.globl _FLWR
                            160 	.globl _IT01CF
                            161 	.globl _XBR2
                            162 	.globl _XBR1
                            163 	.globl _XBR0
                            164 	.globl _ACC
                            165 	.globl _PCA0PWM
                            166 	.globl _PCA0CPM4
                            167 	.globl _PCA0CPM3
                            168 	.globl _PCA0CPM2
                            169 	.globl _PCA0CPM1
                            170 	.globl _PCA0CPM0
                            171 	.globl _PCA0MD
                            172 	.globl _PCA0CN
                            173 	.globl _P0MAT
                            174 	.globl _P2SKIP
                            175 	.globl _P1SKIP
                            176 	.globl _P0SKIP
                            177 	.globl _PCA0CPH5
                            178 	.globl _PCA0CPL5
                            179 	.globl _REF0CN
                            180 	.globl _PSW
                            181 	.globl _P1MAT
                            182 	.globl _PCA0CPM5
                            183 	.globl _TMR2H
                            184 	.globl _TMR2L
                            185 	.globl _TMR2RLH
                            186 	.globl _TMR2RLL
                            187 	.globl _REG0CN
                            188 	.globl _TMR2CN
                            189 	.globl _P0MASK
                            190 	.globl _ADC0LTH
                            191 	.globl _ADC0LTL
                            192 	.globl _ADC0GTH
                            193 	.globl _ADC0GTL
                            194 	.globl _SMB0DAT
                            195 	.globl _SMB0CF
                            196 	.globl _SMB0CN
                            197 	.globl _P1MASK
                            198 	.globl _ADC0H
                            199 	.globl _ADC0L
                            200 	.globl _ADC0TK
                            201 	.globl _ADC0CF
                            202 	.globl _ADC0MX
                            203 	.globl _ADC0PWR
                            204 	.globl _ADC0AC
                            205 	.globl _IREF0CN
                            206 	.globl _IP
                            207 	.globl _FLKEY
                            208 	.globl _FLSCL
                            209 	.globl _PMU0CF
                            210 	.globl _OSCICL
                            211 	.globl _OSCICN
                            212 	.globl _OSCXCN
                            213 	.globl _SPI1CN
                            214 	.globl _ONESHOT
                            215 	.globl _EMI0TC
                            216 	.globl _RTC0KEY
                            217 	.globl _RTC0DAT
                            218 	.globl _RTC0ADR
                            219 	.globl _EMI0CF
                            220 	.globl _EMI0CN
                            221 	.globl _CLKSEL
                            222 	.globl _IE
                            223 	.globl _SFRPAGE
                            224 	.globl _P2DRV
                            225 	.globl _P2MDOUT
                            226 	.globl _P1DRV
                            227 	.globl _P1MDOUT
                            228 	.globl _P0DRV
                            229 	.globl _P0MDOUT
                            230 	.globl _SPI0DAT
                            231 	.globl _SPI0CKR
                            232 	.globl _SPI0CFG
                            233 	.globl _P2
                            234 	.globl _CPT0MX
                            235 	.globl _CPT1MX
                            236 	.globl _CPT0MD
                            237 	.globl _CPT1MD
                            238 	.globl _CPT0CN
                            239 	.globl _CPT1CN
                            240 	.globl _SBUF0
                            241 	.globl _SCON0
                            242 	.globl _CRC0CNT
                            243 	.globl _DC0CN
                            244 	.globl _CRC0AUTO
                            245 	.globl _DC0CF
                            246 	.globl _TMR3H
                            247 	.globl _CRC0FLIP
                            248 	.globl _TMR3L
                            249 	.globl _CRC0IN
                            250 	.globl _TMR3RLH
                            251 	.globl _CRC0CN
                            252 	.globl _TMR3RLL
                            253 	.globl _CRC0DAT
                            254 	.globl _TMR3CN
                            255 	.globl _P1
                            256 	.globl _PSCTL
                            257 	.globl _CKCON
                            258 	.globl _TH1
                            259 	.globl _TH0
                            260 	.globl _TL1
                            261 	.globl _TL0
                            262 	.globl _TMOD
                            263 	.globl _TCON
                            264 	.globl _PCON
                            265 	.globl _TOFFH
                            266 	.globl _SPI1DAT
                            267 	.globl _TOFFL
                            268 	.globl _SPI1CKR
                            269 	.globl _SPI1CFG
                            270 	.globl _DPH
                            271 	.globl _DPL
                            272 	.globl _SP
                            273 	.globl _P0
                            274 	.globl _Comm_IF_SMBusRead_PARM_3
                            275 	.globl _Comm_IF_SMBusRead_PARM_2
                            276 	.globl _Comm_IF_SMBusWrite_PARM_3
                            277 	.globl _Comm_IF_SMBusWrite_PARM_2
                            278 	.globl _Comm_IF_Spi1DebugWriteSFR_PARM_4
                            279 	.globl _Comm_IF_Spi1DebugWriteSFR_PARM_3
                            280 	.globl _Comm_IF_Spi1DebugWriteSFR_PARM_2
                            281 	.globl _Comm_IF_Spi1DebugWrite_PARM_4
                            282 	.globl _Comm_IF_Spi1DebugWrite_PARM_3
                            283 	.globl _Comm_IF_Spi1DebugWrite_PARM_2
                            284 	.globl _Comm_IF_Spi1DebugReadSFR_PARM_3
                            285 	.globl _Comm_IF_Spi1DebugReadSFR_PARM_2
                            286 	.globl _Comm_IF_Spi1DebugRead_PARM_3
                            287 	.globl _Comm_IF_Spi1DebugRead_PARM_2
                            288 	.globl _Comm_IF_Spi1WriteBitsBitbang_PARM_2
                            289 	.globl _Comm_IF_Spi1ReadWrite_Burst_PARM_4
                            290 	.globl _Comm_IF_Spi1ReadWrite_Burst_PARM_3
                            291 	.globl _Comm_IF_Spi1ReadWrite_Burst_PARM_2
                            292 	.globl _Comm_IF_Spi1ReadWrite_Word_PARM_2
                            293 	.globl _lUartInternal
                            294 	.globl _wDelay
                            295 	.globl _fSMBusTransaction
                            296 	.globl _fSPIDisabled
                            297 	.globl _fSPIBusy
                            298 	.globl _fSelectState
                            299 	.globl _Comm_IF_RecvUART
                            300 	.globl _Comm_IF_SendUART
                            301 	.globl _Comm_IF_EnableUART
                            302 	.globl _Comm_IF_Spi1ReadWrite
                            303 	.globl _Comm_IF_Spi1ReadWrite_Byte
                            304 	.globl _Comm_IF_Spi1ReadWrite_Word
                            305 	.globl _Comm_IF_Spi1ReadWrite_Burst
                            306 	.globl _Comm_IF_Spi0ReadWrite
                            307 	.globl _Comm_IF_Spi1Enable
                            308 	.globl _Comm_IF_Spi1Disable
                            309 	.globl _Comm_IF_Spi1ReadByteBitbang
                            310 	.globl _Comm_IF_Spi1WriteBitsBitbang
                            311 	.globl _Comm_IF_SpiClearNsel
                            312 	.globl _Comm_IF_SpiSetNsel
                            313 	.globl _Comm_IF_Spi1DebugRead
                            314 	.globl _Comm_IF_Spi1DebugReadSFR
                            315 	.globl _Comm_IF_Spi1DebugWrite
                            316 	.globl _Comm_IF_Spi1DebugWriteSFR
                            317 	.globl _Comm_IF_InitSMBusInterface
                            318 	.globl _Comm_IF_DisableSMBusInterface
                            319 	.globl _Comm_IF_SMBusStart
                            320 	.globl _Comm_IF_SMBusWriteByte
                            321 	.globl _Comm_IF_SMBusReadByte
                            322 	.globl _Comm_IF_SMBusStop
                            323 	.globl _Comm_IF_SMBusWrite
                            324 	.globl _Comm_IF_SMBusRead
                            325 	.globl _Comm_IF_SMBusWaitForItWithTimeout
                            326 	.globl _UART_ISR
                            327 ;--------------------------------------------------------
                            328 ; special function registers
                            329 ;--------------------------------------------------------
                            330 	.area RSEG    (ABS,DATA)
   0000                     331 	.org 0x0000
                    0080    332 G$P0$0$0 == 0x0080
                    0080    333 _P0	=	0x0080
                    0081    334 G$SP$0$0 == 0x0081
                    0081    335 _SP	=	0x0081
                    0082    336 G$DPL$0$0 == 0x0082
                    0082    337 _DPL	=	0x0082
                    0083    338 G$DPH$0$0 == 0x0083
                    0083    339 _DPH	=	0x0083
                    0084    340 G$SPI1CFG$0$0 == 0x0084
                    0084    341 _SPI1CFG	=	0x0084
                    0085    342 G$SPI1CKR$0$0 == 0x0085
                    0085    343 _SPI1CKR	=	0x0085
                    0085    344 G$TOFFL$0$0 == 0x0085
                    0085    345 _TOFFL	=	0x0085
                    0086    346 G$SPI1DAT$0$0 == 0x0086
                    0086    347 _SPI1DAT	=	0x0086
                    0086    348 G$TOFFH$0$0 == 0x0086
                    0086    349 _TOFFH	=	0x0086
                    0087    350 G$PCON$0$0 == 0x0087
                    0087    351 _PCON	=	0x0087
                    0088    352 G$TCON$0$0 == 0x0088
                    0088    353 _TCON	=	0x0088
                    0089    354 G$TMOD$0$0 == 0x0089
                    0089    355 _TMOD	=	0x0089
                    008A    356 G$TL0$0$0 == 0x008a
                    008A    357 _TL0	=	0x008a
                    008B    358 G$TL1$0$0 == 0x008b
                    008B    359 _TL1	=	0x008b
                    008C    360 G$TH0$0$0 == 0x008c
                    008C    361 _TH0	=	0x008c
                    008D    362 G$TH1$0$0 == 0x008d
                    008D    363 _TH1	=	0x008d
                    008E    364 G$CKCON$0$0 == 0x008e
                    008E    365 _CKCON	=	0x008e
                    008F    366 G$PSCTL$0$0 == 0x008f
                    008F    367 _PSCTL	=	0x008f
                    0090    368 G$P1$0$0 == 0x0090
                    0090    369 _P1	=	0x0090
                    0091    370 G$TMR3CN$0$0 == 0x0091
                    0091    371 _TMR3CN	=	0x0091
                    0091    372 G$CRC0DAT$0$0 == 0x0091
                    0091    373 _CRC0DAT	=	0x0091
                    0092    374 G$TMR3RLL$0$0 == 0x0092
                    0092    375 _TMR3RLL	=	0x0092
                    0092    376 G$CRC0CN$0$0 == 0x0092
                    0092    377 _CRC0CN	=	0x0092
                    0093    378 G$TMR3RLH$0$0 == 0x0093
                    0093    379 _TMR3RLH	=	0x0093
                    0093    380 G$CRC0IN$0$0 == 0x0093
                    0093    381 _CRC0IN	=	0x0093
                    0094    382 G$TMR3L$0$0 == 0x0094
                    0094    383 _TMR3L	=	0x0094
                    0095    384 G$CRC0FLIP$0$0 == 0x0095
                    0095    385 _CRC0FLIP	=	0x0095
                    0095    386 G$TMR3H$0$0 == 0x0095
                    0095    387 _TMR3H	=	0x0095
                    0096    388 G$DC0CF$0$0 == 0x0096
                    0096    389 _DC0CF	=	0x0096
                    0096    390 G$CRC0AUTO$0$0 == 0x0096
                    0096    391 _CRC0AUTO	=	0x0096
                    0097    392 G$DC0CN$0$0 == 0x0097
                    0097    393 _DC0CN	=	0x0097
                    0097    394 G$CRC0CNT$0$0 == 0x0097
                    0097    395 _CRC0CNT	=	0x0097
                    0098    396 G$SCON0$0$0 == 0x0098
                    0098    397 _SCON0	=	0x0098
                    0099    398 G$SBUF0$0$0 == 0x0099
                    0099    399 _SBUF0	=	0x0099
                    009A    400 G$CPT1CN$0$0 == 0x009a
                    009A    401 _CPT1CN	=	0x009a
                    009B    402 G$CPT0CN$0$0 == 0x009b
                    009B    403 _CPT0CN	=	0x009b
                    009C    404 G$CPT1MD$0$0 == 0x009c
                    009C    405 _CPT1MD	=	0x009c
                    009D    406 G$CPT0MD$0$0 == 0x009d
                    009D    407 _CPT0MD	=	0x009d
                    009E    408 G$CPT1MX$0$0 == 0x009e
                    009E    409 _CPT1MX	=	0x009e
                    009F    410 G$CPT0MX$0$0 == 0x009f
                    009F    411 _CPT0MX	=	0x009f
                    00A0    412 G$P2$0$0 == 0x00a0
                    00A0    413 _P2	=	0x00a0
                    00A1    414 G$SPI0CFG$0$0 == 0x00a1
                    00A1    415 _SPI0CFG	=	0x00a1
                    00A2    416 G$SPI0CKR$0$0 == 0x00a2
                    00A2    417 _SPI0CKR	=	0x00a2
                    00A3    418 G$SPI0DAT$0$0 == 0x00a3
                    00A3    419 _SPI0DAT	=	0x00a3
                    00A4    420 G$P0MDOUT$0$0 == 0x00a4
                    00A4    421 _P0MDOUT	=	0x00a4
                    00A4    422 G$P0DRV$0$0 == 0x00a4
                    00A4    423 _P0DRV	=	0x00a4
                    00A5    424 G$P1MDOUT$0$0 == 0x00a5
                    00A5    425 _P1MDOUT	=	0x00a5
                    00A5    426 G$P1DRV$0$0 == 0x00a5
                    00A5    427 _P1DRV	=	0x00a5
                    00A6    428 G$P2MDOUT$0$0 == 0x00a6
                    00A6    429 _P2MDOUT	=	0x00a6
                    00A6    430 G$P2DRV$0$0 == 0x00a6
                    00A6    431 _P2DRV	=	0x00a6
                    00A7    432 G$SFRPAGE$0$0 == 0x00a7
                    00A7    433 _SFRPAGE	=	0x00a7
                    00A8    434 G$IE$0$0 == 0x00a8
                    00A8    435 _IE	=	0x00a8
                    00A9    436 G$CLKSEL$0$0 == 0x00a9
                    00A9    437 _CLKSEL	=	0x00a9
                    00AA    438 G$EMI0CN$0$0 == 0x00aa
                    00AA    439 _EMI0CN	=	0x00aa
                    00AB    440 G$EMI0CF$0$0 == 0x00ab
                    00AB    441 _EMI0CF	=	0x00ab
                    00AC    442 G$RTC0ADR$0$0 == 0x00ac
                    00AC    443 _RTC0ADR	=	0x00ac
                    00AD    444 G$RTC0DAT$0$0 == 0x00ad
                    00AD    445 _RTC0DAT	=	0x00ad
                    00AE    446 G$RTC0KEY$0$0 == 0x00ae
                    00AE    447 _RTC0KEY	=	0x00ae
                    00AF    448 G$EMI0TC$0$0 == 0x00af
                    00AF    449 _EMI0TC	=	0x00af
                    00AF    450 G$ONESHOT$0$0 == 0x00af
                    00AF    451 _ONESHOT	=	0x00af
                    00B0    452 G$SPI1CN$0$0 == 0x00b0
                    00B0    453 _SPI1CN	=	0x00b0
                    00B1    454 G$OSCXCN$0$0 == 0x00b1
                    00B1    455 _OSCXCN	=	0x00b1
                    00B2    456 G$OSCICN$0$0 == 0x00b2
                    00B2    457 _OSCICN	=	0x00b2
                    00B3    458 G$OSCICL$0$0 == 0x00b3
                    00B3    459 _OSCICL	=	0x00b3
                    00B5    460 G$PMU0CF$0$0 == 0x00b5
                    00B5    461 _PMU0CF	=	0x00b5
                    00B6    462 G$FLSCL$0$0 == 0x00b6
                    00B6    463 _FLSCL	=	0x00b6
                    00B7    464 G$FLKEY$0$0 == 0x00b7
                    00B7    465 _FLKEY	=	0x00b7
                    00B8    466 G$IP$0$0 == 0x00b8
                    00B8    467 _IP	=	0x00b8
                    00B9    468 G$IREF0CN$0$0 == 0x00b9
                    00B9    469 _IREF0CN	=	0x00b9
                    00BA    470 G$ADC0AC$0$0 == 0x00ba
                    00BA    471 _ADC0AC	=	0x00ba
                    00BA    472 G$ADC0PWR$0$0 == 0x00ba
                    00BA    473 _ADC0PWR	=	0x00ba
                    00BB    474 G$ADC0MX$0$0 == 0x00bb
                    00BB    475 _ADC0MX	=	0x00bb
                    00BC    476 G$ADC0CF$0$0 == 0x00bc
                    00BC    477 _ADC0CF	=	0x00bc
                    00BD    478 G$ADC0TK$0$0 == 0x00bd
                    00BD    479 _ADC0TK	=	0x00bd
                    00BD    480 G$ADC0L$0$0 == 0x00bd
                    00BD    481 _ADC0L	=	0x00bd
                    00BE    482 G$ADC0H$0$0 == 0x00be
                    00BE    483 _ADC0H	=	0x00be
                    00BF    484 G$P1MASK$0$0 == 0x00bf
                    00BF    485 _P1MASK	=	0x00bf
                    00C0    486 G$SMB0CN$0$0 == 0x00c0
                    00C0    487 _SMB0CN	=	0x00c0
                    00C1    488 G$SMB0CF$0$0 == 0x00c1
                    00C1    489 _SMB0CF	=	0x00c1
                    00C2    490 G$SMB0DAT$0$0 == 0x00c2
                    00C2    491 _SMB0DAT	=	0x00c2
                    00C3    492 G$ADC0GTL$0$0 == 0x00c3
                    00C3    493 _ADC0GTL	=	0x00c3
                    00C4    494 G$ADC0GTH$0$0 == 0x00c4
                    00C4    495 _ADC0GTH	=	0x00c4
                    00C5    496 G$ADC0LTL$0$0 == 0x00c5
                    00C5    497 _ADC0LTL	=	0x00c5
                    00C6    498 G$ADC0LTH$0$0 == 0x00c6
                    00C6    499 _ADC0LTH	=	0x00c6
                    00C7    500 G$P0MASK$0$0 == 0x00c7
                    00C7    501 _P0MASK	=	0x00c7
                    00C8    502 G$TMR2CN$0$0 == 0x00c8
                    00C8    503 _TMR2CN	=	0x00c8
                    00C9    504 G$REG0CN$0$0 == 0x00c9
                    00C9    505 _REG0CN	=	0x00c9
                    00CA    506 G$TMR2RLL$0$0 == 0x00ca
                    00CA    507 _TMR2RLL	=	0x00ca
                    00CB    508 G$TMR2RLH$0$0 == 0x00cb
                    00CB    509 _TMR2RLH	=	0x00cb
                    00CC    510 G$TMR2L$0$0 == 0x00cc
                    00CC    511 _TMR2L	=	0x00cc
                    00CD    512 G$TMR2H$0$0 == 0x00cd
                    00CD    513 _TMR2H	=	0x00cd
                    00CE    514 G$PCA0CPM5$0$0 == 0x00ce
                    00CE    515 _PCA0CPM5	=	0x00ce
                    00CF    516 G$P1MAT$0$0 == 0x00cf
                    00CF    517 _P1MAT	=	0x00cf
                    00D0    518 G$PSW$0$0 == 0x00d0
                    00D0    519 _PSW	=	0x00d0
                    00D1    520 G$REF0CN$0$0 == 0x00d1
                    00D1    521 _REF0CN	=	0x00d1
                    00D2    522 G$PCA0CPL5$0$0 == 0x00d2
                    00D2    523 _PCA0CPL5	=	0x00d2
                    00D3    524 G$PCA0CPH5$0$0 == 0x00d3
                    00D3    525 _PCA0CPH5	=	0x00d3
                    00D4    526 G$P0SKIP$0$0 == 0x00d4
                    00D4    527 _P0SKIP	=	0x00d4
                    00D5    528 G$P1SKIP$0$0 == 0x00d5
                    00D5    529 _P1SKIP	=	0x00d5
                    00D6    530 G$P2SKIP$0$0 == 0x00d6
                    00D6    531 _P2SKIP	=	0x00d6
                    00D7    532 G$P0MAT$0$0 == 0x00d7
                    00D7    533 _P0MAT	=	0x00d7
                    00D8    534 G$PCA0CN$0$0 == 0x00d8
                    00D8    535 _PCA0CN	=	0x00d8
                    00D9    536 G$PCA0MD$0$0 == 0x00d9
                    00D9    537 _PCA0MD	=	0x00d9
                    00DA    538 G$PCA0CPM0$0$0 == 0x00da
                    00DA    539 _PCA0CPM0	=	0x00da
                    00DB    540 G$PCA0CPM1$0$0 == 0x00db
                    00DB    541 _PCA0CPM1	=	0x00db
                    00DC    542 G$PCA0CPM2$0$0 == 0x00dc
                    00DC    543 _PCA0CPM2	=	0x00dc
                    00DD    544 G$PCA0CPM3$0$0 == 0x00dd
                    00DD    545 _PCA0CPM3	=	0x00dd
                    00DE    546 G$PCA0CPM4$0$0 == 0x00de
                    00DE    547 _PCA0CPM4	=	0x00de
                    00DF    548 G$PCA0PWM$0$0 == 0x00df
                    00DF    549 _PCA0PWM	=	0x00df
                    00E0    550 G$ACC$0$0 == 0x00e0
                    00E0    551 _ACC	=	0x00e0
                    00E1    552 G$XBR0$0$0 == 0x00e1
                    00E1    553 _XBR0	=	0x00e1
                    00E2    554 G$XBR1$0$0 == 0x00e2
                    00E2    555 _XBR1	=	0x00e2
                    00E3    556 G$XBR2$0$0 == 0x00e3
                    00E3    557 _XBR2	=	0x00e3
                    00E4    558 G$IT01CF$0$0 == 0x00e4
                    00E4    559 _IT01CF	=	0x00e4
                    00E5    560 G$FLWR$0$0 == 0x00e5
                    00E5    561 _FLWR	=	0x00e5
                    00E6    562 G$EIE1$0$0 == 0x00e6
                    00E6    563 _EIE1	=	0x00e6
                    00E7    564 G$EIE2$0$0 == 0x00e7
                    00E7    565 _EIE2	=	0x00e7
                    00E8    566 G$ADC0CN$0$0 == 0x00e8
                    00E8    567 _ADC0CN	=	0x00e8
                    00E9    568 G$PCA0CPL1$0$0 == 0x00e9
                    00E9    569 _PCA0CPL1	=	0x00e9
                    00EA    570 G$PCA0CPH1$0$0 == 0x00ea
                    00EA    571 _PCA0CPH1	=	0x00ea
                    00EB    572 G$PCA0CPL2$0$0 == 0x00eb
                    00EB    573 _PCA0CPL2	=	0x00eb
                    00EC    574 G$PCA0CPH2$0$0 == 0x00ec
                    00EC    575 _PCA0CPH2	=	0x00ec
                    00ED    576 G$PCA0CPL3$0$0 == 0x00ed
                    00ED    577 _PCA0CPL3	=	0x00ed
                    00EE    578 G$PCA0CPH3$0$0 == 0x00ee
                    00EE    579 _PCA0CPH3	=	0x00ee
                    00EF    580 G$RSTSRC$0$0 == 0x00ef
                    00EF    581 _RSTSRC	=	0x00ef
                    00F0    582 G$B$0$0 == 0x00f0
                    00F0    583 _B	=	0x00f0
                    00F1    584 G$P0MDIN$0$0 == 0x00f1
                    00F1    585 _P0MDIN	=	0x00f1
                    00F2    586 G$P1MDIN$0$0 == 0x00f2
                    00F2    587 _P1MDIN	=	0x00f2
                    00F3    588 G$P2MDIN$0$0 == 0x00f3
                    00F3    589 _P2MDIN	=	0x00f3
                    00F4    590 G$SMB0ADR$0$0 == 0x00f4
                    00F4    591 _SMB0ADR	=	0x00f4
                    00F5    592 G$SMB0ADM$0$0 == 0x00f5
                    00F5    593 _SMB0ADM	=	0x00f5
                    00F6    594 G$EIP1$0$0 == 0x00f6
                    00F6    595 _EIP1	=	0x00f6
                    00F7    596 G$EIP2$0$0 == 0x00f7
                    00F7    597 _EIP2	=	0x00f7
                    00F8    598 G$SPI0CN$0$0 == 0x00f8
                    00F8    599 _SPI0CN	=	0x00f8
                    00F9    600 G$PCA0L$0$0 == 0x00f9
                    00F9    601 _PCA0L	=	0x00f9
                    00FA    602 G$PCA0H$0$0 == 0x00fa
                    00FA    603 _PCA0H	=	0x00fa
                    00FB    604 G$PCA0CPL0$0$0 == 0x00fb
                    00FB    605 _PCA0CPL0	=	0x00fb
                    00FC    606 G$PCA0CPH0$0$0 == 0x00fc
                    00FC    607 _PCA0CPH0	=	0x00fc
                    00FD    608 G$PCA0CPL4$0$0 == 0x00fd
                    00FD    609 _PCA0CPL4	=	0x00fd
                    00FE    610 G$PCA0CPH4$0$0 == 0x00fe
                    00FE    611 _PCA0CPH4	=	0x00fe
                    00FF    612 G$VDM0CN$0$0 == 0x00ff
                    00FF    613 _VDM0CN	=	0x00ff
                    8382    614 G$DP$0$0 == 0x8382
                    8382    615 _DP	=	0x8382
                    8685    616 G$TOFF$0$0 == 0x8685
                    8685    617 _TOFF	=	0x8685
                    9392    618 G$TMR3RL$0$0 == 0x9392
                    9392    619 _TMR3RL	=	0x9392
                    9594    620 G$TMR3$0$0 == 0x9594
                    9594    621 _TMR3	=	0x9594
                    BEBD    622 G$ADC0$0$0 == 0xbebd
                    BEBD    623 _ADC0	=	0xbebd
                    C4C3    624 G$ADC0GT$0$0 == 0xc4c3
                    C4C3    625 _ADC0GT	=	0xc4c3
                    C6C5    626 G$ADC0LT$0$0 == 0xc6c5
                    C6C5    627 _ADC0LT	=	0xc6c5
                    CBCA    628 G$TMR2RL$0$0 == 0xcbca
                    CBCA    629 _TMR2RL	=	0xcbca
                    CDCC    630 G$TMR2$0$0 == 0xcdcc
                    CDCC    631 _TMR2	=	0xcdcc
                    D3D2    632 G$PCA0CP5$0$0 == 0xd3d2
                    D3D2    633 _PCA0CP5	=	0xd3d2
                    EAE9    634 G$PCA0CP1$0$0 == 0xeae9
                    EAE9    635 _PCA0CP1	=	0xeae9
                    ECEB    636 G$PCA0CP2$0$0 == 0xeceb
                    ECEB    637 _PCA0CP2	=	0xeceb
                    EEED    638 G$PCA0CP3$0$0 == 0xeeed
                    EEED    639 _PCA0CP3	=	0xeeed
                    FAF9    640 G$PCA0$0$0 == 0xfaf9
                    FAF9    641 _PCA0	=	0xfaf9
                    FCFB    642 G$PCA0CP0$0$0 == 0xfcfb
                    FCFB    643 _PCA0CP0	=	0xfcfb
                    FEFD    644 G$PCA0CP4$0$0 == 0xfefd
                    FEFD    645 _PCA0CP4	=	0xfefd
                            646 ;--------------------------------------------------------
                            647 ; special function bits
                            648 ;--------------------------------------------------------
                            649 	.area RSEG    (ABS,DATA)
   0000                     650 	.org 0x0000
                    008F    651 G$TF1$0$0 == 0x008f
                    008F    652 _TF1	=	0x008f
                    008E    653 G$TR1$0$0 == 0x008e
                    008E    654 _TR1	=	0x008e
                    008D    655 G$TF0$0$0 == 0x008d
                    008D    656 _TF0	=	0x008d
                    008C    657 G$TR0$0$0 == 0x008c
                    008C    658 _TR0	=	0x008c
                    008B    659 G$IE1$0$0 == 0x008b
                    008B    660 _IE1	=	0x008b
                    008A    661 G$IT1$0$0 == 0x008a
                    008A    662 _IT1	=	0x008a
                    0089    663 G$IE0$0$0 == 0x0089
                    0089    664 _IE0	=	0x0089
                    0088    665 G$IT0$0$0 == 0x0088
                    0088    666 _IT0	=	0x0088
                    009F    667 G$S0MODE$0$0 == 0x009f
                    009F    668 _S0MODE	=	0x009f
                    009D    669 G$MCE0$0$0 == 0x009d
                    009D    670 _MCE0	=	0x009d
                    009C    671 G$REN0$0$0 == 0x009c
                    009C    672 _REN0	=	0x009c
                    009B    673 G$TB80$0$0 == 0x009b
                    009B    674 _TB80	=	0x009b
                    009A    675 G$RB80$0$0 == 0x009a
                    009A    676 _RB80	=	0x009a
                    0099    677 G$TI0$0$0 == 0x0099
                    0099    678 _TI0	=	0x0099
                    0098    679 G$RI0$0$0 == 0x0098
                    0098    680 _RI0	=	0x0098
                    00AF    681 G$EA$0$0 == 0x00af
                    00AF    682 _EA	=	0x00af
                    00AE    683 G$ESPI0$0$0 == 0x00ae
                    00AE    684 _ESPI0	=	0x00ae
                    00AD    685 G$ET2$0$0 == 0x00ad
                    00AD    686 _ET2	=	0x00ad
                    00AC    687 G$ES0$0$0 == 0x00ac
                    00AC    688 _ES0	=	0x00ac
                    00AB    689 G$ET1$0$0 == 0x00ab
                    00AB    690 _ET1	=	0x00ab
                    00AA    691 G$EX1$0$0 == 0x00aa
                    00AA    692 _EX1	=	0x00aa
                    00A9    693 G$ET0$0$0 == 0x00a9
                    00A9    694 _ET0	=	0x00a9
                    00A8    695 G$EX0$0$0 == 0x00a8
                    00A8    696 _EX0	=	0x00a8
                    00B7    697 G$SPIF1$0$0 == 0x00b7
                    00B7    698 _SPIF1	=	0x00b7
                    00B6    699 G$WCOL1$0$0 == 0x00b6
                    00B6    700 _WCOL1	=	0x00b6
                    00B5    701 G$MODF1$0$0 == 0x00b5
                    00B5    702 _MODF1	=	0x00b5
                    00B4    703 G$RXOVRN1$0$0 == 0x00b4
                    00B4    704 _RXOVRN1	=	0x00b4
                    00B3    705 G$NSS1MD1$0$0 == 0x00b3
                    00B3    706 _NSS1MD1	=	0x00b3
                    00B2    707 G$NSS1MD0$0$0 == 0x00b2
                    00B2    708 _NSS1MD0	=	0x00b2
                    00B1    709 G$TXBMT1$0$0 == 0x00b1
                    00B1    710 _TXBMT1	=	0x00b1
                    00B0    711 G$SPI1EN$0$0 == 0x00b0
                    00B0    712 _SPI1EN	=	0x00b0
                    00BE    713 G$PSPI0$0$0 == 0x00be
                    00BE    714 _PSPI0	=	0x00be
                    00BD    715 G$PT2$0$0 == 0x00bd
                    00BD    716 _PT2	=	0x00bd
                    00BC    717 G$PS0$0$0 == 0x00bc
                    00BC    718 _PS0	=	0x00bc
                    00BB    719 G$PT1$0$0 == 0x00bb
                    00BB    720 _PT1	=	0x00bb
                    00BA    721 G$PX1$0$0 == 0x00ba
                    00BA    722 _PX1	=	0x00ba
                    00B9    723 G$PT0$0$0 == 0x00b9
                    00B9    724 _PT0	=	0x00b9
                    00B8    725 G$PX0$0$0 == 0x00b8
                    00B8    726 _PX0	=	0x00b8
                    00C7    727 G$MASTER$0$0 == 0x00c7
                    00C7    728 _MASTER	=	0x00c7
                    00C6    729 G$TXMODE$0$0 == 0x00c6
                    00C6    730 _TXMODE	=	0x00c6
                    00C5    731 G$STA$0$0 == 0x00c5
                    00C5    732 _STA	=	0x00c5
                    00C4    733 G$STO$0$0 == 0x00c4
                    00C4    734 _STO	=	0x00c4
                    00C3    735 G$ACKRQ$0$0 == 0x00c3
                    00C3    736 _ACKRQ	=	0x00c3
                    00C2    737 G$ARBLOST$0$0 == 0x00c2
                    00C2    738 _ARBLOST	=	0x00c2
                    00C1    739 G$ACK$0$0 == 0x00c1
                    00C1    740 _ACK	=	0x00c1
                    00C0    741 G$SI$0$0 == 0x00c0
                    00C0    742 _SI	=	0x00c0
                    00CF    743 G$TF2H$0$0 == 0x00cf
                    00CF    744 _TF2H	=	0x00cf
                    00CE    745 G$TF2L$0$0 == 0x00ce
                    00CE    746 _TF2L	=	0x00ce
                    00CD    747 G$TF2LEN$0$0 == 0x00cd
                    00CD    748 _TF2LEN	=	0x00cd
                    00CC    749 G$TF2CEN$0$0 == 0x00cc
                    00CC    750 _TF2CEN	=	0x00cc
                    00CB    751 G$T2SPLIT$0$0 == 0x00cb
                    00CB    752 _T2SPLIT	=	0x00cb
                    00CA    753 G$TR2$0$0 == 0x00ca
                    00CA    754 _TR2	=	0x00ca
                    00C9    755 G$T2RCLK$0$0 == 0x00c9
                    00C9    756 _T2RCLK	=	0x00c9
                    00C8    757 G$T2XCLK$0$0 == 0x00c8
                    00C8    758 _T2XCLK	=	0x00c8
                    00D7    759 G$CY$0$0 == 0x00d7
                    00D7    760 _CY	=	0x00d7
                    00D6    761 G$AC$0$0 == 0x00d6
                    00D6    762 _AC	=	0x00d6
                    00D5    763 G$F0$0$0 == 0x00d5
                    00D5    764 _F0	=	0x00d5
                    00D4    765 G$RS1$0$0 == 0x00d4
                    00D4    766 _RS1	=	0x00d4
                    00D3    767 G$RS0$0$0 == 0x00d3
                    00D3    768 _RS0	=	0x00d3
                    00D2    769 G$OV$0$0 == 0x00d2
                    00D2    770 _OV	=	0x00d2
                    00D1    771 G$F1$0$0 == 0x00d1
                    00D1    772 _F1	=	0x00d1
                    00D0    773 G$P$0$0 == 0x00d0
                    00D0    774 _P	=	0x00d0
                    00DF    775 G$CF$0$0 == 0x00df
                    00DF    776 _CF	=	0x00df
                    00DE    777 G$CR$0$0 == 0x00de
                    00DE    778 _CR	=	0x00de
                    00DD    779 G$CCF5$0$0 == 0x00dd
                    00DD    780 _CCF5	=	0x00dd
                    00DC    781 G$CCF4$0$0 == 0x00dc
                    00DC    782 _CCF4	=	0x00dc
                    00DB    783 G$CCF3$0$0 == 0x00db
                    00DB    784 _CCF3	=	0x00db
                    00DA    785 G$CCF2$0$0 == 0x00da
                    00DA    786 _CCF2	=	0x00da
                    00D9    787 G$CCF1$0$0 == 0x00d9
                    00D9    788 _CCF1	=	0x00d9
                    00D8    789 G$CCF0$0$0 == 0x00d8
                    00D8    790 _CCF0	=	0x00d8
                    00EF    791 G$AD0EN$0$0 == 0x00ef
                    00EF    792 _AD0EN	=	0x00ef
                    00EE    793 G$BURSTEN$0$0 == 0x00ee
                    00EE    794 _BURSTEN	=	0x00ee
                    00ED    795 G$AD0INT$0$0 == 0x00ed
                    00ED    796 _AD0INT	=	0x00ed
                    00EC    797 G$AD0BUSY$0$0 == 0x00ec
                    00EC    798 _AD0BUSY	=	0x00ec
                    00EB    799 G$AD0WINT$0$0 == 0x00eb
                    00EB    800 _AD0WINT	=	0x00eb
                    00EA    801 G$AD0CM2$0$0 == 0x00ea
                    00EA    802 _AD0CM2	=	0x00ea
                    00E9    803 G$AD0CM1$0$0 == 0x00e9
                    00E9    804 _AD0CM1	=	0x00e9
                    00E8    805 G$AD0CM0$0$0 == 0x00e8
                    00E8    806 _AD0CM0	=	0x00e8
                    00FF    807 G$SPIF0$0$0 == 0x00ff
                    00FF    808 _SPIF0	=	0x00ff
                    00FE    809 G$WCOL0$0$0 == 0x00fe
                    00FE    810 _WCOL0	=	0x00fe
                    00FD    811 G$MODF0$0$0 == 0x00fd
                    00FD    812 _MODF0	=	0x00fd
                    00FC    813 G$RXOVRN0$0$0 == 0x00fc
                    00FC    814 _RXOVRN0	=	0x00fc
                    00FB    815 G$NSS0MD1$0$0 == 0x00fb
                    00FB    816 _NSS0MD1	=	0x00fb
                    00FA    817 G$NSS0MD0$0$0 == 0x00fa
                    00FA    818 _NSS0MD0	=	0x00fa
                    00F9    819 G$TXBMT0$0$0 == 0x00f9
                    00F9    820 _TXBMT0	=	0x00f9
                    00F8    821 G$SPI0EN$0$0 == 0x00f8
                    00F8    822 _SPI0EN	=	0x00f8
                    0087    823 G$MCU_SDA$0$0 == 0x0087
                    0087    824 _MCU_SDA	=	0x0087
                    0086    825 G$MCU_SCL$0$0 == 0x0086
                    0086    826 _MCU_SCL	=	0x0086
                    00A0    827 G$LED1$0$0 == 0x00a0
                    00A0    828 _LED1	=	0x00a0
                    00A1    829 G$LED2$0$0 == 0x00a1
                    00A1    830 _LED2	=	0x00a1
                    00A2    831 G$LED3$0$0 == 0x00a2
                    00A2    832 _LED3	=	0x00a2
                    00A3    833 G$LED4$0$0 == 0x00a3
                    00A3    834 _LED4	=	0x00a3
                    00A4    835 G$BUZZ$0$0 == 0x00a4
                    00A4    836 _BUZZ	=	0x00a4
                    0090    837 G$MCU_SCK$0$0 == 0x0090
                    0090    838 _MCU_SCK	=	0x0090
                    0091    839 G$MCU_MISO$0$0 == 0x0091
                    0091    840 _MCU_MISO	=	0x0091
                    0092    841 G$MCU_MOSI$0$0 == 0x0092
                    0092    842 _MCU_MOSI	=	0x0092
                    0093    843 G$RF_NSEL$0$0 == 0x0093
                    0093    844 _RF_NSEL	=	0x0093
                    0094    845 G$RF_NIRQ$0$0 == 0x0094
                    0094    846 _RF_NIRQ	=	0x0094
                    0095    847 G$RF_PWRDN$0$0 == 0x0095
                    0095    848 _RF_PWRDN	=	0x0095
                    0096    849 G$LCD_NSEL$0$0 == 0x0096
                    0096    850 _LCD_NSEL	=	0x0096
                    0097    851 G$LCD_A0$0$0 == 0x0097
                    0097    852 _LCD_A0	=	0x0097
                    0080    853 G$PB1$0$0 == 0x0080
                    0080    854 _PB1	=	0x0080
                    0081    855 G$PB2$0$0 == 0x0081
                    0081    856 _PB2	=	0x0081
                    0082    857 G$PB3$0$0 == 0x0082
                    0082    858 _PB3	=	0x0082
                    0083    859 G$PB4$0$0 == 0x0083
                    0083    860 _PB4	=	0x0083
                            861 ;--------------------------------------------------------
                            862 ; overlayable register banks
                            863 ;--------------------------------------------------------
                            864 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     865 	.ds 8
                            866 ;--------------------------------------------------------
                            867 ; internal ram data
                            868 ;--------------------------------------------------------
                            869 	.area DSEG    (DATA)
                    0000    870 G$fSelectState$0$0==.
   0000                     871 _fSelectState::
   0000                     872 	.ds 1
                    0001    873 G$fSPIBusy$0$0==.
   0001                     874 _fSPIBusy::
   0001                     875 	.ds 1
                    0002    876 G$fSPIDisabled$0$0==.
   0002                     877 _fSPIDisabled::
   0002                     878 	.ds 1
                    0003    879 G$fSMBusTransaction$0$0==.
   0003                     880 _fSMBusTransaction::
   0003                     881 	.ds 1
                    0004    882 LCommIF.Comm_IF_Spi1ReadWrite_Word$ReadValue$1$44==.
   0004                     883 _Comm_IF_Spi1ReadWrite_Word_ReadValue_1_44:
   0004                     884 	.ds 2
                    0006    885 LCommIF.Comm_IF_Spi1ReadWrite_Burst$ii$1$46==.
   0006                     886 _Comm_IF_Spi1ReadWrite_Burst_ii_1_46:
   0006                     887 	.ds 1
                            888 ;--------------------------------------------------------
                            889 ; overlayable items in internal ram 
                            890 ;--------------------------------------------------------
                            891 	.area	OSEG    (OVR,DATA)
                            892 	.area	OSEG    (OVR,DATA)
                            893 	.area	OSEG    (OVR,DATA)
                            894 	.area	OSEG    (OVR,DATA)
                            895 ;--------------------------------------------------------
                            896 ; indirectly addressable internal ram data
                            897 ;--------------------------------------------------------
                            898 	.area ISEG    (DATA)
                            899 ;--------------------------------------------------------
                            900 ; absolute internal ram data
                            901 ;--------------------------------------------------------
                            902 	.area IABS    (ABS,DATA)
                            903 	.area IABS    (ABS,DATA)
                            904 ;--------------------------------------------------------
                            905 ; bit data
                            906 ;--------------------------------------------------------
                            907 	.area BSEG    (BIT)
                            908 ;--------------------------------------------------------
                            909 ; paged external ram data
                            910 ;--------------------------------------------------------
                            911 	.area PSEG    (PAG,XDATA)
                            912 ;--------------------------------------------------------
                            913 ; external ram data
                            914 ;--------------------------------------------------------
                            915 	.area XSEG    (XDATA)
                    0000    916 G$wDelay$0$0==.
   0000                     917 _wDelay::
   0000                     918 	.ds 2
                    0002    919 G$lUartInternal$0$0==.
   0002                     920 _lUartInternal::
   0002                     921 	.ds 133
                    0087    922 LCommIF.Comm_IF_RecvUART$byte$1$29==.
   0087                     923 _Comm_IF_RecvUART_byte_1_29:
   0087                     924 	.ds 3
                    008A    925 LCommIF.Comm_IF_SendUART$byte$1$33==.
   008A                     926 _Comm_IF_SendUART_byte_1_33:
   008A                     927 	.ds 1
                    008B    928 LCommIF.Comm_IF_Spi1ReadWrite$DataIn$1$39==.
   008B                     929 _Comm_IF_Spi1ReadWrite_DataIn_1_39:
   008B                     930 	.ds 1
                    008C    931 LCommIF.Comm_IF_Spi1ReadWrite_Byte$DataIn$1$41==.
   008C                     932 _Comm_IF_Spi1ReadWrite_Byte_DataIn_1_41:
   008C                     933 	.ds 1
                    008D    934 LCommIF.Comm_IF_Spi1ReadWrite_Word$DataIn$1$43==.
   008D                     935 _Comm_IF_Spi1ReadWrite_Word_PARM_2:
   008D                     936 	.ds 1
                    008E    937 LCommIF.Comm_IF_Spi1ReadWrite_Word$Address$1$43==.
   008E                     938 _Comm_IF_Spi1ReadWrite_Word_Address_1_43:
   008E                     939 	.ds 1
                    008F    940 LCommIF.Comm_IF_Spi1ReadWrite_Burst$Length$1$45==.
   008F                     941 _Comm_IF_Spi1ReadWrite_Burst_PARM_2:
   008F                     942 	.ds 1
                    0090    943 LCommIF.Comm_IF_Spi1ReadWrite_Burst$pIn$1$45==.
   0090                     944 _Comm_IF_Spi1ReadWrite_Burst_PARM_3:
   0090                     945 	.ds 3
                    0093    946 LCommIF.Comm_IF_Spi1ReadWrite_Burst$pOut$1$45==.
   0093                     947 _Comm_IF_Spi1ReadWrite_Burst_PARM_4:
   0093                     948 	.ds 3
                    0096    949 LCommIF.Comm_IF_Spi1ReadWrite_Burst$Address$1$45==.
   0096                     950 _Comm_IF_Spi1ReadWrite_Burst_Address_1_45:
   0096                     951 	.ds 1
                    0097    952 LCommIF.Comm_IF_Spi0ReadWrite$data_in$1$48==.
   0097                     953 _Comm_IF_Spi0ReadWrite_data_in_1_48:
   0097                     954 	.ds 1
                    0098    955 LCommIF.Comm_IF_Spi1WriteBitsBitbang$nmbr_bit$1$58==.
   0098                     956 _Comm_IF_Spi1WriteBitsBitbang_PARM_2:
   0098                     957 	.ds 1
                    0099    958 LCommIF.Comm_IF_Spi1WriteBitsBitbang$data_in$1$58==.
   0099                     959 _Comm_IF_Spi1WriteBitsBitbang_data_in_1_58:
   0099                     960 	.ds 1
                    009A    961 LCommIF.Comm_IF_SpiClearNsel$sel$1$63==.
   009A                     962 _Comm_IF_SpiClearNsel_sel_1_63:
   009A                     963 	.ds 1
                    009B    964 LCommIF.Comm_IF_SpiSetNsel$sel$1$66==.
   009B                     965 _Comm_IF_SpiSetNsel_sel_1_66:
   009B                     966 	.ds 1
                    009C    967 LCommIF.Comm_IF_Spi1DebugRead$AddressMSB$1$69==.
   009C                     968 _Comm_IF_Spi1DebugRead_PARM_2:
   009C                     969 	.ds 1
                    009D    970 LCommIF.Comm_IF_Spi1DebugRead$AddressLSB$1$69==.
   009D                     971 _Comm_IF_Spi1DebugRead_PARM_3:
   009D                     972 	.ds 1
                    009E    973 LCommIF.Comm_IF_Spi1DebugRead$DebugCommand$1$69==.
   009E                     974 _Comm_IF_Spi1DebugRead_DebugCommand_1_69:
   009E                     975 	.ds 1
                    009F    976 LCommIF.Comm_IF_Spi1DebugReadSFR$AddressMSB$1$71==.
   009F                     977 _Comm_IF_Spi1DebugReadSFR_PARM_2:
   009F                     978 	.ds 1
                    00A0    979 LCommIF.Comm_IF_Spi1DebugReadSFR$AddressLSB$1$71==.
   00A0                     980 _Comm_IF_Spi1DebugReadSFR_PARM_3:
   00A0                     981 	.ds 1
                    00A1    982 LCommIF.Comm_IF_Spi1DebugReadSFR$DebugCommand$1$71==.
   00A1                     983 _Comm_IF_Spi1DebugReadSFR_DebugCommand_1_71:
   00A1                     984 	.ds 1
                    00A2    985 LCommIF.Comm_IF_Spi1DebugWrite$AddressMSB$1$73==.
   00A2                     986 _Comm_IF_Spi1DebugWrite_PARM_2:
   00A2                     987 	.ds 1
                    00A3    988 LCommIF.Comm_IF_Spi1DebugWrite$AddressLSB$1$73==.
   00A3                     989 _Comm_IF_Spi1DebugWrite_PARM_3:
   00A3                     990 	.ds 1
                    00A4    991 LCommIF.Comm_IF_Spi1DebugWrite$Value$1$73==.
   00A4                     992 _Comm_IF_Spi1DebugWrite_PARM_4:
   00A4                     993 	.ds 1
                    00A5    994 LCommIF.Comm_IF_Spi1DebugWrite$DebugCommand$1$73==.
   00A5                     995 _Comm_IF_Spi1DebugWrite_DebugCommand_1_73:
   00A5                     996 	.ds 1
                    00A6    997 LCommIF.Comm_IF_Spi1DebugWriteSFR$AddressMSB$1$75==.
   00A6                     998 _Comm_IF_Spi1DebugWriteSFR_PARM_2:
   00A6                     999 	.ds 1
                    00A7   1000 LCommIF.Comm_IF_Spi1DebugWriteSFR$AddressLSB$1$75==.
   00A7                    1001 _Comm_IF_Spi1DebugWriteSFR_PARM_3:
   00A7                    1002 	.ds 1
                    00A8   1003 LCommIF.Comm_IF_Spi1DebugWriteSFR$Value$1$75==.
   00A8                    1004 _Comm_IF_Spi1DebugWriteSFR_PARM_4:
   00A8                    1005 	.ds 1
                    00A9   1006 LCommIF.Comm_IF_Spi1DebugWriteSFR$DebugCommand$1$75==.
   00A9                    1007 _Comm_IF_Spi1DebugWriteSFR_DebugCommand_1_75:
   00A9                    1008 	.ds 1
                    00AA   1009 LCommIF.Comm_IF_SMBusWriteByte$Data$1$80==.
   00AA                    1010 _Comm_IF_SMBusWriteByte_Data_1_80:
   00AA                    1011 	.ds 1
                    00AB   1012 LCommIF.Comm_IF_SMBusReadByte$AckReq$1$88==.
   00AB                    1013 _Comm_IF_SMBusReadByte_AckReq_1_88:
   00AB                    1014 	.ds 1
                    00AC   1015 LCommIF.Comm_IF_SMBusReadByte$lTmp$1$89==.
   00AC                    1016 _Comm_IF_SMBusReadByte_lTmp_1_89:
   00AC                    1017 	.ds 1
                    00AD   1018 LCommIF.Comm_IF_SMBusWrite$Length$1$93==.
   00AD                    1019 _Comm_IF_SMBusWrite_PARM_2:
   00AD                    1020 	.ds 1
                    00AE   1021 LCommIF.Comm_IF_SMBusWrite$pData$1$93==.
   00AE                    1022 _Comm_IF_SMBusWrite_PARM_3:
   00AE                    1023 	.ds 3
                    00B1   1024 LCommIF.Comm_IF_SMBusWrite$Address$1$93==.
   00B1                    1025 _Comm_IF_SMBusWrite_Address_1_93:
   00B1                    1026 	.ds 1
                    00B2   1027 LCommIF.Comm_IF_SMBusRead$Length$1$103==.
   00B2                    1028 _Comm_IF_SMBusRead_PARM_2:
   00B2                    1029 	.ds 1
                    00B3   1030 LCommIF.Comm_IF_SMBusRead$pData$1$103==.
   00B3                    1031 _Comm_IF_SMBusRead_PARM_3:
   00B3                    1032 	.ds 3
                    00B6   1033 LCommIF.Comm_IF_SMBusRead$Address$1$103==.
   00B6                    1034 _Comm_IF_SMBusRead_Address_1_103:
   00B6                    1035 	.ds 1
                           1036 ;--------------------------------------------------------
                           1037 ; absolute external ram data
                           1038 ;--------------------------------------------------------
                           1039 	.area XABS    (ABS,XDATA)
                           1040 ;--------------------------------------------------------
                           1041 ; external initialized ram data
                           1042 ;--------------------------------------------------------
                           1043 	.area XISEG   (XDATA)
                           1044 	.area HOME    (CODE)
                           1045 	.area GSINIT0 (CODE)
                           1046 	.area GSINIT1 (CODE)
                           1047 	.area GSINIT2 (CODE)
                           1048 	.area GSINIT3 (CODE)
                           1049 	.area GSINIT4 (CODE)
                           1050 	.area GSINIT5 (CODE)
                           1051 	.area GSINIT  (CODE)
                           1052 	.area GSFINAL (CODE)
                           1053 	.area CSEG    (CODE)
                           1054 ;--------------------------------------------------------
                           1055 ; global & static initialisations
                           1056 ;--------------------------------------------------------
                           1057 	.area HOME    (CODE)
                           1058 	.area GSINIT  (CODE)
                           1059 	.area GSFINAL (CODE)
                           1060 	.area GSINIT  (CODE)
                           1061 ;--------------------------------------------------------
                           1062 ; Home
                           1063 ;--------------------------------------------------------
                           1064 	.area HOME    (CODE)
                           1065 	.area HOME    (CODE)
                           1066 ;--------------------------------------------------------
                           1067 ; code
                           1068 ;--------------------------------------------------------
                           1069 	.area CSEG    (CODE)
                           1070 ;------------------------------------------------------------
                           1071 ;Allocation info for local variables in function 'Comm_IF_RecvUART'
                           1072 ;------------------------------------------------------------
                           1073 ;byte                      Allocated with name '_Comm_IF_RecvUART_byte_1_29'
                           1074 ;------------------------------------------------------------
                    0000   1075 	G$Comm_IF_RecvUART$0$0 ==.
                    0000   1076 	C$CommIF.c$68$0$0 ==.
                           1077 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:68: U8 Comm_IF_RecvUART(U8 * byte)
                           1078 ;	-----------------------------------------
                           1079 ;	 function Comm_IF_RecvUART
                           1080 ;	-----------------------------------------
   0000                    1081 _Comm_IF_RecvUART:
                    0007   1082 	ar7 = 0x07
                    0006   1083 	ar6 = 0x06
                    0005   1084 	ar5 = 0x05
                    0004   1085 	ar4 = 0x04
                    0003   1086 	ar3 = 0x03
                    0002   1087 	ar2 = 0x02
                    0001   1088 	ar1 = 0x01
                    0000   1089 	ar0 = 0x00
   0000 AF F0              1090 	mov	r7,b
   0002 AE 83              1091 	mov	r6,dph
   0004 E5 82              1092 	mov	a,dpl
   0006 90s00r87           1093 	mov	dptr,#_Comm_IF_RecvUART_byte_1_29
   0009 F0                 1094 	movx	@dptr,a
   000A A3                 1095 	inc	dptr
   000B EE                 1096 	mov	a,r6
   000C F0                 1097 	movx	@dptr,a
   000D A3                 1098 	inc	dptr
   000E EF                 1099 	mov	a,r7
   000F F0                 1100 	movx	@dptr,a
                    0010   1101 	C$CommIF.c$70$1$30 ==.
                           1102 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:70: if (lUartInternal.RXReadPosition != lUartInternal.RXWritePosition)
   0010 90s00r06           1103 	mov	dptr,#(_lUartInternal + 0x0004)
   0013 E0                 1104 	movx	a,@dptr
   0014 FF                 1105 	mov	r7,a
   0015 90s00r05           1106 	mov	dptr,#(_lUartInternal + 0x0003)
   0018 E0                 1107 	movx	a,@dptr
   0019 FE                 1108 	mov	r6,a
   001A EF                 1109 	mov	a,r7
   001B B5 06 02           1110 	cjne	a,ar6,00111$
   001E 80 45              1111 	sjmp	00104$
   0020                    1112 00111$:
                    0020   1113 	C$CommIF.c$72$2$31 ==.
                           1114 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:72: *byte = lUartInternal.RXBuffer[lUartInternal.RXReadPosition++];
   0020 90s00r87           1115 	mov	dptr,#_Comm_IF_RecvUART_byte_1_29
   0023 E0                 1116 	movx	a,@dptr
   0024 FD                 1117 	mov	r5,a
   0025 A3                 1118 	inc	dptr
   0026 E0                 1119 	movx	a,@dptr
   0027 FE                 1120 	mov	r6,a
   0028 A3                 1121 	inc	dptr
   0029 E0                 1122 	movx	a,@dptr
   002A FF                 1123 	mov	r7,a
   002B 90s00r06           1124 	mov	dptr,#(_lUartInternal + 0x0004)
   002E E0                 1125 	movx	a,@dptr
   002F FC                 1126 	mov	r4,a
   0030 04                 1127 	inc	a
   0031 FB                 1128 	mov	r3,a
   0032 90s00r06           1129 	mov	dptr,#(_lUartInternal + 0x0004)
   0035 F0                 1130 	movx	@dptr,a
   0036 EC                 1131 	mov	a,r4
   0037 24r07              1132 	add	a,#(_lUartInternal + 0x0005)
   0039 F5 82              1133 	mov	dpl,a
   003B E4                 1134 	clr	a
   003C 34s00              1135 	addc	a,#((_lUartInternal + 0x0005) >> 8)
   003E F5 83              1136 	mov	dph,a
   0040 E0                 1137 	movx	a,@dptr
   0041 FC                 1138 	mov	r4,a
   0042 8D 82              1139 	mov	dpl,r5
   0044 8E 83              1140 	mov	dph,r6
   0046 8F F0              1141 	mov	b,r7
   0048 12s00r00           1142 	lcall	__gptrput
                    004B   1143 	C$CommIF.c$74$2$31 ==.
                           1144 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:74: if (lUartInternal.RXReadPosition >= COMM_IF_UART_RX_BUFFER)
   004B 90s00r06           1145 	mov	dptr,#(_lUartInternal + 0x0004)
   004E E0                 1146 	movx	a,@dptr
   004F FF                 1147 	mov	r7,a
   0050 7E 00              1148 	mov	r6,#0x00
   0052 C3                 1149 	clr	c
   0053 EF                 1150 	mov	a,r7
   0054 94 40              1151 	subb	a,#0x40
   0056 EE                 1152 	mov	a,r6
   0057 94 00              1153 	subb	a,#0x00
   0059 40 05              1154 	jc	00102$
                    005B   1155 	C$CommIF.c$76$3$32 ==.
                           1156 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:76: lUartInternal.RXReadPosition = 0u;
   005B 90s00r06           1157 	mov	dptr,#(_lUartInternal + 0x0004)
   005E E4                 1158 	clr	a
   005F F0                 1159 	movx	@dptr,a
   0060                    1160 00102$:
                    0060   1161 	C$CommIF.c$79$2$31 ==.
                           1162 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:79: return TRUE;
   0060 75 82 01           1163 	mov	dpl,#0x01
   0063 80 03              1164 	sjmp	00105$
   0065                    1165 00104$:
                    0065   1166 	C$CommIF.c$82$1$30 ==.
                           1167 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:82: return FALSE;
   0065 75 82 00           1168 	mov	dpl,#0x00
   0068                    1169 00105$:
                    0068   1170 	C$CommIF.c$83$1$30 ==.
                    0068   1171 	XG$Comm_IF_RecvUART$0$0 ==.
   0068 22                 1172 	ret
                           1173 ;------------------------------------------------------------
                           1174 ;Allocation info for local variables in function 'Comm_IF_SendUART'
                           1175 ;------------------------------------------------------------
                           1176 ;byte                      Allocated with name '_Comm_IF_SendUART_byte_1_33'
                           1177 ;------------------------------------------------------------
                    0069   1178 	G$Comm_IF_SendUART$0$0 ==.
                    0069   1179 	C$CommIF.c$93$1$30 ==.
                           1180 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:93: U8 Comm_IF_SendUART(U8 byte)
                           1181 ;	-----------------------------------------
                           1182 ;	 function Comm_IF_SendUART
                           1183 ;	-----------------------------------------
   0069                    1184 _Comm_IF_SendUART:
   0069 E5 82              1185 	mov	a,dpl
   006B 90s00r8A           1186 	mov	dptr,#_Comm_IF_SendUART_byte_1_33
   006E F0                 1187 	movx	@dptr,a
                    006F   1188 	C$CommIF.c$96$1$34 ==.
                           1189 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:96: if ((lUartInternal.TXReadPosition == lUartInternal.TXWritePosition) && (FALSE == lUartInternal.TXBufferEmpty))
   006F 90s00r03           1190 	mov	dptr,#(_lUartInternal + 0x0001)
   0072 E0                 1191 	movx	a,@dptr
   0073 FF                 1192 	mov	r7,a
   0074 90s00r02           1193 	mov	dptr,#_lUartInternal
   0077 E0                 1194 	movx	a,@dptr
   0078 FE                 1195 	mov	r6,a
   0079 EF                 1196 	mov	a,r7
   007A B5 06 0A           1197 	cjne	a,ar6,00102$
   007D 90s00r04           1198 	mov	dptr,#(_lUartInternal + 0x0002)
   0080 E0                 1199 	movx	a,@dptr
                    0081   1200 	C$CommIF.c$98$2$35 ==.
                           1201 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:98: return FALSE;
   0081 70 04              1202 	jnz	00102$
   0083 F5 82              1203 	mov	dpl,a
   0085 80 43              1204 	sjmp	00108$
   0087                    1205 00102$:
                    0087   1206 	C$CommIF.c$102$1$34 ==.
                           1207 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:102: lUartInternal.TXBuffer[lUartInternal.TXWritePosition++] = byte;
   0087 90s00r02           1208 	mov	dptr,#_lUartInternal
   008A E0                 1209 	movx	a,@dptr
   008B FF                 1210 	mov	r7,a
   008C 04                 1211 	inc	a
   008D 90s00r02           1212 	mov	dptr,#_lUartInternal
   0090 F0                 1213 	movx	@dptr,a
   0091 EF                 1214 	mov	a,r7
   0092 24r47              1215 	add	a,#(_lUartInternal + 0x0045)
   0094 FF                 1216 	mov	r7,a
   0095 E4                 1217 	clr	a
   0096 34s00              1218 	addc	a,#((_lUartInternal + 0x0045) >> 8)
   0098 FE                 1219 	mov	r6,a
   0099 90s00r8A           1220 	mov	dptr,#_Comm_IF_SendUART_byte_1_33
   009C E0                 1221 	movx	a,@dptr
   009D FD                 1222 	mov	r5,a
   009E 8F 82              1223 	mov	dpl,r7
   00A0 8E 83              1224 	mov	dph,r6
   00A2 F0                 1225 	movx	@dptr,a
                    00A3   1226 	C$CommIF.c$105$1$34 ==.
                           1227 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:105: if (lUartInternal.TXWritePosition >= COMM_IF_UART_TX_BUFFER)
   00A3 90s00r02           1228 	mov	dptr,#_lUartInternal
   00A6 E0                 1229 	movx	a,@dptr
   00A7 FF                 1230 	mov	r7,a
   00A8 7E 00              1231 	mov	r6,#0x00
   00AA C3                 1232 	clr	c
   00AB EF                 1233 	mov	a,r7
   00AC 94 40              1234 	subb	a,#0x40
   00AE EE                 1235 	mov	a,r6
   00AF 94 00              1236 	subb	a,#0x00
   00B1 40 05              1237 	jc	00105$
                    00B3   1238 	C$CommIF.c$107$2$36 ==.
                           1239 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:107: lUartInternal.TXWritePosition = 0u;
   00B3 90s00r02           1240 	mov	dptr,#_lUartInternal
   00B6 E4                 1241 	clr	a
   00B7 F0                 1242 	movx	@dptr,a
   00B8                    1243 00105$:
                    00B8   1244 	C$CommIF.c$110$1$34 ==.
                           1245 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:110: if (TRUE == lUartInternal.TXBufferEmpty)
   00B8 90s00r04           1246 	mov	dptr,#(_lUartInternal + 0x0002)
   00BB E0                 1247 	movx	a,@dptr
   00BC FF                 1248 	mov	r7,a
   00BD BF 01 02           1249 	cjne	r7,#0x01,00107$
                    00C0   1250 	C$CommIF.c$112$2$37 ==.
                           1251 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:112: SBUF0 = byte;
   00C0 8D 99              1252 	mov	_SBUF0,r5
   00C2                    1253 00107$:
                    00C2   1254 	C$CommIF.c$115$1$34 ==.
                           1255 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:115: lUartInternal.TXBufferEmpty = FALSE;
   00C2 90s00r04           1256 	mov	dptr,#(_lUartInternal + 0x0002)
   00C5 E4                 1257 	clr	a
   00C6 F0                 1258 	movx	@dptr,a
                    00C7   1259 	C$CommIF.c$117$1$34 ==.
                           1260 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:117: return TRUE;
   00C7 75 82 01           1261 	mov	dpl,#0x01
   00CA                    1262 00108$:
                    00CA   1263 	C$CommIF.c$118$1$34 ==.
                    00CA   1264 	XG$Comm_IF_SendUART$0$0 ==.
   00CA 22                 1265 	ret
                           1266 ;------------------------------------------------------------
                           1267 ;Allocation info for local variables in function 'Comm_IF_EnableUART'
                           1268 ;------------------------------------------------------------
                    00CB   1269 	G$Comm_IF_EnableUART$0$0 ==.
                    00CB   1270 	C$CommIF.c$128$1$34 ==.
                           1271 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:128: void Comm_IF_EnableUART()
                           1272 ;	-----------------------------------------
                           1273 ;	 function Comm_IF_EnableUART
                           1274 ;	-----------------------------------------
   00CB                    1275 _Comm_IF_EnableUART:
                    00CB   1276 	C$CommIF.c$131$1$38 ==.
                           1277 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:131: XBR0 |= 0x01;
   00CB 43 E1 01           1278 	orl	_XBR0,#0x01
                    00CE   1279 	C$CommIF.c$135$1$38 ==.
                           1280 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:135: Set115200bps_24MHZ5;
   00CE 53 8E F4           1281 	anl	_CKCON,#0xF4
   00D1 43 8E 08           1282 	orl	_CKCON,#0x08
   00D4 75 8D 96           1283 	mov	_TH1,#0x96
   00D7 AF 89              1284 	mov	r7,_TMOD
   00D9 74 0F              1285 	mov	a,#0x0F
   00DB 5F                 1286 	anl	a,r7
   00DC F5 89              1287 	mov	_TMOD,a
   00DE 43 89 20           1288 	orl	_TMOD,#0x20
                    00E1   1289 	C$CommIF.c$136$1$38 ==.
                           1290 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:136: TR1   = 1;                /* START Timer1 */
   00E1 D2 8E              1291 	setb	_TR1
                    00E3   1292 	C$CommIF.c$137$1$38 ==.
                           1293 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:137: TI0   = 1;                /* Transciever ready */
   00E3 D2 99              1294 	setb	_TI0
                    00E5   1295 	C$CommIF.c$140$1$38 ==.
                           1296 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:140: SCON0 = 0x10;
   00E5 75 98 10           1297 	mov	_SCON0,#0x10
                    00E8   1298 	C$CommIF.c$143$1$38 ==.
                           1299 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:143: ES0   = TRUE;
   00E8 D2 AC              1300 	setb	_ES0
                    00EA   1301 	C$CommIF.c$145$1$38 ==.
                           1302 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:145: lUartInternal.TXBufferEmpty = TRUE;
   00EA 90s00r04           1303 	mov	dptr,#(_lUartInternal + 0x0002)
   00ED 74 01              1304 	mov	a,#0x01
   00EF F0                 1305 	movx	@dptr,a
                    00F0   1306 	C$CommIF.c$146$1$38 ==.
                    00F0   1307 	XG$Comm_IF_EnableUART$0$0 ==.
   00F0 22                 1308 	ret
                           1309 ;------------------------------------------------------------
                           1310 ;Allocation info for local variables in function 'Comm_IF_Spi1ReadWrite'
                           1311 ;------------------------------------------------------------
                           1312 ;DataIn                    Allocated with name '_Comm_IF_Spi1ReadWrite_DataIn_1_39'
                           1313 ;lTmp                      Allocated to registers r7 
                           1314 ;------------------------------------------------------------
                    00F1   1315 	G$Comm_IF_Spi1ReadWrite$0$0 ==.
                    00F1   1316 	C$CommIF.c$158$1$38 ==.
                           1317 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:158: U8 Comm_IF_Spi1ReadWrite(U8 DataIn)
                           1318 ;	-----------------------------------------
                           1319 ;	 function Comm_IF_Spi1ReadWrite
                           1320 ;	-----------------------------------------
   00F1                    1321 _Comm_IF_Spi1ReadWrite:
   00F1 E5 82              1322 	mov	a,dpl
   00F3 90s00r8B           1323 	mov	dptr,#_Comm_IF_Spi1ReadWrite_DataIn_1_39
   00F6 F0                 1324 	movx	@dptr,a
                    00F7   1325 	C$CommIF.c$163$1$40 ==.
                           1326 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:163: SPIF1 = 0;
   00F7 C2 B7              1327 	clr	_SPIF1
                    00F9   1328 	C$CommIF.c$166$1$40 ==.
                           1329 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:166: SPI1DAT = DataIn;
   00F9 90s00r8B           1330 	mov	dptr,#_Comm_IF_Spi1ReadWrite_DataIn_1_39
   00FC E0                 1331 	movx	a,@dptr
   00FD F5 86              1332 	mov	_SPI1DAT,a
                    00FF   1333 	C$CommIF.c$169$1$40 ==.
                           1334 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:169: while(!TXBMT1);
   00FF                    1335 00101$:
   00FF 30 B1 FD           1336 	jnb	_TXBMT1,00101$
                    0102   1337 	C$CommIF.c$172$1$40 ==.
                           1338 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:172: while((SPI1CFG & 0x80) == 0x80);
   0102                    1339 00104$:
   0102 74 80              1340 	mov	a,#0x80
   0104 55 84              1341 	anl	a,_SPI1CFG
   0106 FF                 1342 	mov	r7,a
   0107 BF 80 02           1343 	cjne	r7,#0x80,00116$
   010A 80 F6              1344 	sjmp	00104$
   010C                    1345 00116$:
                    010C   1346 	C$CommIF.c$175$1$40 ==.
                           1347 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:175: lTmp = SPI1DAT;
   010C AF 86              1348 	mov	r7,_SPI1DAT
                    010E   1349 	C$CommIF.c$177$1$40 ==.
                           1350 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:177: SPIF1 = 0;
   010E C2 B7              1351 	clr	_SPIF1
                    0110   1352 	C$CommIF.c$179$1$40 ==.
                           1353 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:179: return lTmp;
   0110 8F 82              1354 	mov	dpl,r7
                    0112   1355 	C$CommIF.c$180$1$40 ==.
                    0112   1356 	XG$Comm_IF_Spi1ReadWrite$0$0 ==.
   0112 22                 1357 	ret
                           1358 ;------------------------------------------------------------
                           1359 ;Allocation info for local variables in function 'Comm_IF_Spi1ReadWrite_Byte'
                           1360 ;------------------------------------------------------------
                           1361 ;ReadValue                 Allocated to registers r7 
                           1362 ;DataIn                    Allocated with name '_Comm_IF_Spi1ReadWrite_Byte_DataIn_1_41'
                           1363 ;------------------------------------------------------------
                    0113   1364 	G$Comm_IF_Spi1ReadWrite_Byte$0$0 ==.
                    0113   1365 	C$CommIF.c$191$1$40 ==.
                           1366 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:191: U8 Comm_IF_Spi1ReadWrite_Byte(U8 DataIn)
                           1367 ;	-----------------------------------------
                           1368 ;	 function Comm_IF_Spi1ReadWrite_Byte
                           1369 ;	-----------------------------------------
   0113                    1370 _Comm_IF_Spi1ReadWrite_Byte:
   0113 E5 82              1371 	mov	a,dpl
   0115 90s00r8C           1372 	mov	dptr,#_Comm_IF_Spi1ReadWrite_Byte_DataIn_1_41
   0118 F0                 1373 	movx	@dptr,a
                    0119   1374 	C$CommIF.c$195$1$42 ==.
                           1375 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:195: fSPIBusy = TRUE;
   0119 75*01 01           1376 	mov	_fSPIBusy,#0x01
                    011C   1377 	C$CommIF.c$198$1$42 ==.
                           1378 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:198: ReadValue = Comm_IF_Spi1ReadWrite(DataIn);
   011C 90s00r8C           1379 	mov	dptr,#_Comm_IF_Spi1ReadWrite_Byte_DataIn_1_41
   011F E0                 1380 	movx	a,@dptr
   0120 F5 82              1381 	mov	dpl,a
   0122 12s00rF1           1382 	lcall	_Comm_IF_Spi1ReadWrite
                    0125   1383 	C$CommIF.c$200$1$42 ==.
                           1384 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:200: fSPIBusy = FALSE;
                    0125   1385 	C$CommIF.c$202$1$42 ==.
                           1386 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:202: return ReadValue;
   0125 75*01 00           1387 	mov	_fSPIBusy,#0x00
                    0128   1388 	C$CommIF.c$203$1$42 ==.
                    0128   1389 	XG$Comm_IF_Spi1ReadWrite_Byte$0$0 ==.
   0128 22                 1390 	ret
                           1391 ;------------------------------------------------------------
                           1392 ;Allocation info for local variables in function 'Comm_IF_Spi1ReadWrite_Word'
                           1393 ;------------------------------------------------------------
                           1394 ;ReadValue                 Allocated with name '_Comm_IF_Spi1ReadWrite_Word_ReadValue_1_44'
                           1395 ;DataIn                    Allocated with name '_Comm_IF_Spi1ReadWrite_Word_PARM_2'
                           1396 ;Address                   Allocated with name '_Comm_IF_Spi1ReadWrite_Word_Address_1_43'
                           1397 ;------------------------------------------------------------
                    0129   1398 	G$Comm_IF_Spi1ReadWrite_Word$0$0 ==.
                    0129   1399 	C$CommIF.c$216$1$42 ==.
                           1400 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:216: U16 Comm_IF_Spi1ReadWrite_Word(U8 Address, U8 DataIn)
                           1401 ;	-----------------------------------------
                           1402 ;	 function Comm_IF_Spi1ReadWrite_Word
                           1403 ;	-----------------------------------------
   0129                    1404 _Comm_IF_Spi1ReadWrite_Word:
   0129 E5 82              1405 	mov	a,dpl
   012B 90s00r8E           1406 	mov	dptr,#_Comm_IF_Spi1ReadWrite_Word_Address_1_43
   012E F0                 1407 	movx	@dptr,a
                    012F   1408 	C$CommIF.c$220$1$44 ==.
                           1409 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:220: fSPIBusy = TRUE;
   012F 75*01 01           1410 	mov	_fSPIBusy,#0x01
                    0132   1411 	C$CommIF.c$223$1$44 ==.
                           1412 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:223: ReadValue.U8[MSB] = Comm_IF_Spi1ReadWrite(Address);
   0132 90s00r8E           1413 	mov	dptr,#_Comm_IF_Spi1ReadWrite_Word_Address_1_43
   0135 E0                 1414 	movx	a,@dptr
   0136 F5 82              1415 	mov	dpl,a
   0138 12s00rF1           1416 	lcall	_Comm_IF_Spi1ReadWrite
   013B E5 82              1417 	mov	a,dpl
   013D F5*05              1418 	mov	(_Comm_IF_Spi1ReadWrite_Word_ReadValue_1_44 + 0x0001),a
                    013F   1419 	C$CommIF.c$224$1$44 ==.
                           1420 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:224: ReadValue.U8[LSB] = Comm_IF_Spi1ReadWrite(DataIn);
   013F 90s00r8D           1421 	mov	dptr,#_Comm_IF_Spi1ReadWrite_Word_PARM_2
   0142 E0                 1422 	movx	a,@dptr
   0143 F5 82              1423 	mov	dpl,a
   0145 12s00rF1           1424 	lcall	_Comm_IF_Spi1ReadWrite
   0148 E5 82              1425 	mov	a,dpl
   014A F5*04              1426 	mov	_Comm_IF_Spi1ReadWrite_Word_ReadValue_1_44,a
                    014C   1427 	C$CommIF.c$226$1$44 ==.
                           1428 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:226: fSPIBusy = FALSE;
   014C 75*01 00           1429 	mov	_fSPIBusy,#0x00
                    014F   1430 	C$CommIF.c$228$1$44 ==.
                           1431 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:228: return ReadValue.U16;
   014F 85*04 82           1432 	mov	dpl,_Comm_IF_Spi1ReadWrite_Word_ReadValue_1_44
   0152 85*05 83           1433 	mov	dph,(_Comm_IF_Spi1ReadWrite_Word_ReadValue_1_44 + 1)
                    0155   1434 	C$CommIF.c$229$1$44 ==.
                    0155   1435 	XG$Comm_IF_Spi1ReadWrite_Word$0$0 ==.
   0155 22                 1436 	ret
                           1437 ;------------------------------------------------------------
                           1438 ;Allocation info for local variables in function 'Comm_IF_Spi1ReadWrite_Burst'
                           1439 ;------------------------------------------------------------
                           1440 ;ii                        Allocated with name '_Comm_IF_Spi1ReadWrite_Burst_ii_1_46'
                           1441 ;Length                    Allocated with name '_Comm_IF_Spi1ReadWrite_Burst_PARM_2'
                           1442 ;pIn                       Allocated with name '_Comm_IF_Spi1ReadWrite_Burst_PARM_3'
                           1443 ;pOut                      Allocated with name '_Comm_IF_Spi1ReadWrite_Burst_PARM_4'
                           1444 ;Address                   Allocated with name '_Comm_IF_Spi1ReadWrite_Burst_Address_1_45'
                           1445 ;------------------------------------------------------------
                    0156   1446 	G$Comm_IF_Spi1ReadWrite_Burst$0$0 ==.
                    0156   1447 	C$CommIF.c$241$1$44 ==.
                           1448 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:241: void Comm_IF_Spi1ReadWrite_Burst(U8 Address, U8 Length, U8 *pIn, U8 *pOut)
                           1449 ;	-----------------------------------------
                           1450 ;	 function Comm_IF_Spi1ReadWrite_Burst
                           1451 ;	-----------------------------------------
   0156                    1452 _Comm_IF_Spi1ReadWrite_Burst:
   0156 E5 82              1453 	mov	a,dpl
   0158 90s00r96           1454 	mov	dptr,#_Comm_IF_Spi1ReadWrite_Burst_Address_1_45
   015B F0                 1455 	movx	@dptr,a
                    015C   1456 	C$CommIF.c$245$1$46 ==.
                           1457 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:245: fSPIBusy = TRUE;
   015C 75*01 01           1458 	mov	_fSPIBusy,#0x01
                    015F   1459 	C$CommIF.c$248$1$46 ==.
                           1460 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:248: Comm_IF_Spi1ReadWrite(Address);
   015F 90s00r96           1461 	mov	dptr,#_Comm_IF_Spi1ReadWrite_Burst_Address_1_45
   0162 E0                 1462 	movx	a,@dptr
   0163 F5 82              1463 	mov	dpl,a
   0165 12s00rF1           1464 	lcall	_Comm_IF_Spi1ReadWrite
                    0168   1465 	C$CommIF.c$250$1$46 ==.
                           1466 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:250: for (ii = 0u; ii < Length; ++ii) {
   0168 90s00r8F           1467 	mov	dptr,#_Comm_IF_Spi1ReadWrite_Burst_PARM_2
   016B E0                 1468 	movx	a,@dptr
   016C FF                 1469 	mov	r7,a
   016D 90s00r90           1470 	mov	dptr,#_Comm_IF_Spi1ReadWrite_Burst_PARM_3
   0170 E0                 1471 	movx	a,@dptr
   0171 FC                 1472 	mov	r4,a
   0172 A3                 1473 	inc	dptr
   0173 E0                 1474 	movx	a,@dptr
   0174 FD                 1475 	mov	r5,a
   0175 A3                 1476 	inc	dptr
   0176 E0                 1477 	movx	a,@dptr
   0177 FE                 1478 	mov	r6,a
   0178 90s00r93           1479 	mov	dptr,#_Comm_IF_Spi1ReadWrite_Burst_PARM_4
   017B E0                 1480 	movx	a,@dptr
   017C F9                 1481 	mov	r1,a
   017D A3                 1482 	inc	dptr
   017E E0                 1483 	movx	a,@dptr
   017F FA                 1484 	mov	r2,a
   0180 A3                 1485 	inc	dptr
   0181 E0                 1486 	movx	a,@dptr
   0182 FB                 1487 	mov	r3,a
   0183 75*06 00           1488 	mov	_Comm_IF_Spi1ReadWrite_Burst_ii_1_46,#0x00
   0186                    1489 00101$:
   0186 C3                 1490 	clr	c
   0187 E5*06              1491 	mov	a,_Comm_IF_Spi1ReadWrite_Burst_ii_1_46
   0189 9F                 1492 	subb	a,r7
   018A 50 45              1493 	jnc	00104$
                    018C   1494 	C$CommIF.c$251$2$47 ==.
                           1495 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:251: *pOut++ = Comm_IF_Spi1ReadWrite(*pIn++);
   018C 8C 82              1496 	mov	dpl,r4
   018E 8D 83              1497 	mov	dph,r5
   0190 8E F0              1498 	mov	b,r6
   0192 12s00r00           1499 	lcall	__gptrget
   0195 F8                 1500 	mov	r0,a
   0196 A3                 1501 	inc	dptr
   0197 AC 82              1502 	mov	r4,dpl
   0199 AD 83              1503 	mov	r5,dph
   019B 88 82              1504 	mov	dpl,r0
   019D C0 07              1505 	push	ar7
   019F C0 06              1506 	push	ar6
   01A1 C0 05              1507 	push	ar5
   01A3 C0 04              1508 	push	ar4
   01A5 C0 03              1509 	push	ar3
   01A7 C0 02              1510 	push	ar2
   01A9 C0 01              1511 	push	ar1
   01AB 12s00rF1           1512 	lcall	_Comm_IF_Spi1ReadWrite
   01AE A8 82              1513 	mov	r0,dpl
   01B0 D0 01              1514 	pop	ar1
   01B2 D0 02              1515 	pop	ar2
   01B4 D0 03              1516 	pop	ar3
   01B6 D0 04              1517 	pop	ar4
   01B8 D0 05              1518 	pop	ar5
   01BA D0 06              1519 	pop	ar6
   01BC D0 07              1520 	pop	ar7
   01BE 89 82              1521 	mov	dpl,r1
   01C0 8A 83              1522 	mov	dph,r2
   01C2 8B F0              1523 	mov	b,r3
   01C4 E8                 1524 	mov	a,r0
   01C5 12s00r00           1525 	lcall	__gptrput
   01C8 A3                 1526 	inc	dptr
   01C9 A9 82              1527 	mov	r1,dpl
   01CB AA 83              1528 	mov	r2,dph
                    01CD   1529 	C$CommIF.c$250$1$46 ==.
                           1530 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:250: for (ii = 0u; ii < Length; ++ii) {
   01CD 05*06              1531 	inc	_Comm_IF_Spi1ReadWrite_Burst_ii_1_46
   01CF 80 B5              1532 	sjmp	00101$
   01D1                    1533 00104$:
                    01D1   1534 	C$CommIF.c$254$1$46 ==.
                           1535 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:254: fSPIBusy = FALSE;
   01D1 75*01 00           1536 	mov	_fSPIBusy,#0x00
                    01D4   1537 	C$CommIF.c$256$1$46 ==.
                    01D4   1538 	XG$Comm_IF_Spi1ReadWrite_Burst$0$0 ==.
   01D4 22                 1539 	ret
                           1540 ;------------------------------------------------------------
                           1541 ;Allocation info for local variables in function 'Comm_IF_Spi0ReadWrite'
                           1542 ;------------------------------------------------------------
                           1543 ;data_in                   Allocated with name '_Comm_IF_Spi0ReadWrite_data_in_1_48'
                           1544 ;lTmp                      Allocated to registers r7 
                           1545 ;------------------------------------------------------------
                    01D5   1546 	G$Comm_IF_Spi0ReadWrite$0$0 ==.
                    01D5   1547 	C$CommIF.c$268$1$46 ==.
                           1548 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:268: U8 Comm_IF_Spi0ReadWrite(U8 data_in)
                           1549 ;	-----------------------------------------
                           1550 ;	 function Comm_IF_Spi0ReadWrite
                           1551 ;	-----------------------------------------
   01D5                    1552 _Comm_IF_Spi0ReadWrite:
   01D5 E5 82              1553 	mov	a,dpl
   01D7 90s00r97           1554 	mov	dptr,#_Comm_IF_Spi0ReadWrite_data_in_1_48
   01DA F0                 1555 	movx	@dptr,a
                    01DB   1556 	C$CommIF.c$273$1$49 ==.
                           1557 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:273: SPIF0 = 0;
   01DB C2 FF              1558 	clr	_SPIF0
                    01DD   1559 	C$CommIF.c$276$1$49 ==.
                           1560 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:276: SPI0DAT = data_in;
   01DD 90s00r97           1561 	mov	dptr,#_Comm_IF_Spi0ReadWrite_data_in_1_48
   01E0 E0                 1562 	movx	a,@dptr
   01E1 F5 A3              1563 	mov	_SPI0DAT,a
                    01E3   1564 	C$CommIF.c$279$1$49 ==.
                           1565 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:279: while(!TXBMT0);
   01E3                    1566 00101$:
   01E3 30 F9 FD           1567 	jnb	_TXBMT0,00101$
                    01E6   1568 	C$CommIF.c$282$1$49 ==.
                           1569 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:282: while((SPI0CFG & 0x80) == 0x80);
   01E6                    1570 00104$:
   01E6 74 80              1571 	mov	a,#0x80
   01E8 55 A1              1572 	anl	a,_SPI0CFG
   01EA FF                 1573 	mov	r7,a
   01EB BF 80 02           1574 	cjne	r7,#0x80,00116$
   01EE 80 F6              1575 	sjmp	00104$
   01F0                    1576 00116$:
                    01F0   1577 	C$CommIF.c$285$1$49 ==.
                           1578 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:285: lTmp = SPI0DAT;
   01F0 AF A3              1579 	mov	r7,_SPI0DAT
                    01F2   1580 	C$CommIF.c$287$1$49 ==.
                           1581 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:287: SPIF0 = 0;
   01F2 C2 FF              1582 	clr	_SPIF0
                    01F4   1583 	C$CommIF.c$289$1$49 ==.
                           1584 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:289: return lTmp;
   01F4 8F 82              1585 	mov	dpl,r7
                    01F6   1586 	C$CommIF.c$290$1$49 ==.
                    01F6   1587 	XG$Comm_IF_Spi0ReadWrite$0$0 ==.
   01F6 22                 1588 	ret
                           1589 ;------------------------------------------------------------
                           1590 ;Allocation info for local variables in function 'Comm_IF_Spi1Enable'
                           1591 ;------------------------------------------------------------
                    01F7   1592 	G$Comm_IF_Spi1Enable$0$0 ==.
                    01F7   1593 	C$CommIF.c$298$1$49 ==.
                           1594 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:298: void Comm_IF_Spi1Enable(void)
                           1595 ;	-----------------------------------------
                           1596 ;	 function Comm_IF_Spi1Enable
                           1597 ;	-----------------------------------------
   01F7                    1598 _Comm_IF_Spi1Enable:
                    01F7   1599 	C$CommIF.c$301$1$51 ==.
                           1600 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:301: SPI1CN |= 0x01;
   01F7 43 B0 01           1601 	orl	_SPI1CN,#0x01
                    01FA   1602 	C$CommIF.c$304$1$51 ==.
                           1603 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:304: XBR1 |= 0x40;
   01FA 43 E2 40           1604 	orl	_XBR1,#0x40
                    01FD   1605 	C$CommIF.c$307$1$51 ==.
                           1606 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:307: MCU_SCK = TRUE;
   01FD D2 90              1607 	setb	_MCU_SCK
                    01FF   1608 	C$CommIF.c$308$1$51 ==.
                           1609 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:308: MCU_MOSI = TRUE;
   01FF D2 92              1610 	setb	_MCU_MOSI
                    0201   1611 	C$CommIF.c$310$1$51 ==.
                           1612 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:310: fSPIDisabled = FALSE;
   0201 75*02 00           1613 	mov	_fSPIDisabled,#0x00
                    0204   1614 	C$CommIF.c$311$1$51 ==.
                    0204   1615 	XG$Comm_IF_Spi1Enable$0$0 ==.
   0204 22                 1616 	ret
                           1617 ;------------------------------------------------------------
                           1618 ;Allocation info for local variables in function 'Comm_IF_Spi1Disable'
                           1619 ;------------------------------------------------------------
                    0205   1620 	G$Comm_IF_Spi1Disable$0$0 ==.
                    0205   1621 	C$CommIF.c$319$1$51 ==.
                           1622 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:319: void Comm_IF_Spi1Disable(void)
                           1623 ;	-----------------------------------------
                           1624 ;	 function Comm_IF_Spi1Disable
                           1625 ;	-----------------------------------------
   0205                    1626 _Comm_IF_Spi1Disable:
                    0205   1627 	C$CommIF.c$322$1$53 ==.
                           1628 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:322: SPI1CN &=0xFE;
   0205 53 B0 FE           1629 	anl	_SPI1CN,#0xFE
                    0208   1630 	C$CommIF.c$325$1$53 ==.
                           1631 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:325: XBR1 &= ~(0x40);
   0208 AF E2              1632 	mov	r7,_XBR1
   020A 74 BF              1633 	mov	a,#0xBF
   020C 5F                 1634 	anl	a,r7
   020D F5 E2              1635 	mov	_XBR1,a
                    020F   1636 	C$CommIF.c$333$1$53 ==.
                           1637 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:333: MCU_SCK = FALSE;
   020F C2 90              1638 	clr	_MCU_SCK
                    0211   1639 	C$CommIF.c$334$1$53 ==.
                           1640 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:334: MCU_MOSI = TRUE;
   0211 D2 92              1641 	setb	_MCU_MOSI
                    0213   1642 	C$CommIF.c$336$1$53 ==.
                           1643 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:336: fSPIDisabled = TRUE;
   0213 75*02 01           1644 	mov	_fSPIDisabled,#0x01
                    0216   1645 	C$CommIF.c$337$1$53 ==.
                    0216   1646 	XG$Comm_IF_Spi1Disable$0$0 ==.
   0216 22                 1647 	ret
                           1648 ;------------------------------------------------------------
                           1649 ;Allocation info for local variables in function 'Comm_IF_Spi1ReadByteBitbang'
                           1650 ;------------------------------------------------------------
                           1651 ;read_byte                 Allocated to registers r7 
                           1652 ;ii                        Allocated to registers r6 
                           1653 ;------------------------------------------------------------
                    0217   1654 	G$Comm_IF_Spi1ReadByteBitbang$0$0 ==.
                    0217   1655 	C$CommIF.c$345$1$53 ==.
                           1656 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:345: U8 Comm_IF_Spi1ReadByteBitbang(void)
                           1657 ;	-----------------------------------------
                           1658 ;	 function Comm_IF_Spi1ReadByteBitbang
                           1659 ;	-----------------------------------------
   0217                    1660 _Comm_IF_Spi1ReadByteBitbang:
                    0217   1661 	C$CommIF.c$347$1$53 ==.
                           1662 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:347: SEGMENT_VARIABLE(read_byte, U8, SEG_DATA) = 0u;
   0217 7F 00              1663 	mov	r7,#0x00
                    0219   1664 	C$CommIF.c$350$1$55 ==.
                           1665 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:350: MCU_SCK = TRUE;
   0219 D2 90              1666 	setb	_MCU_SCK
                    021B   1667 	C$CommIF.c$352$1$55 ==.
                           1668 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:352: NOP();
   021B 00                 1669 	NOP 
                    021C   1670 	C$CommIF.c$353$1$55 ==.
                           1671 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:353: NOP();
   021C 00                 1672 	NOP 
                    021D   1673 	C$CommIF.c$354$1$55 ==.
                           1674 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:354: NOP();
   021D 00                 1675 	NOP 
                    021E   1676 	C$CommIF.c$355$1$55 ==.
                           1677 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:355: NOP();
   021E 00                 1678 	NOP 
                    021F   1679 	C$CommIF.c$357$1$55 ==.
                           1680 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:357: MCU_SCK = FALSE;
   021F C2 90              1681 	clr	_MCU_SCK
                    0221   1682 	C$CommIF.c$359$1$55 ==.
                           1683 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:359: NOP();
   0221 00                 1684 	NOP 
                    0222   1685 	C$CommIF.c$361$1$55 ==.
                           1686 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:361: for(ii = 0u; ii < 8u; ii++)
   0222 7E 00              1687 	mov	r6,#0x00
   0224                    1688 00103$:
   0224 8E 04              1689 	mov	ar4,r6
   0226 7D 00              1690 	mov	r5,#0x00
   0228 C3                 1691 	clr	c
   0229 EC                 1692 	mov	a,r4
   022A 94 08              1693 	subb	a,#0x08
   022C ED                 1694 	mov	a,r5
   022D 94 00              1695 	subb	a,#0x00
   022F 50 1C              1696 	jnc	00106$
                    0231   1697 	C$CommIF.c$363$2$56 ==.
                           1698 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:363: MCU_SCK = TRUE;
   0231 D2 90              1699 	setb	_MCU_SCK
                    0233   1700 	C$CommIF.c$364$2$56 ==.
                           1701 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:364: read_byte <<= 1u;
   0233 8F 04              1702 	mov	ar4,r7
   0235 E4                 1703 	clr	a
   0236 CC                 1704 	xch	a,r4
   0237 25 E0              1705 	add	a,acc
   0239 CC                 1706 	xch	a,r4
   023A 33                 1707 	rlc	a
   023B 8C 07              1708 	mov	ar7,r4
                    023D   1709 	C$CommIF.c$367$2$56 ==.
                           1710 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:367: if (TRUE == MCU_MISO)
   023D A2 91              1711 	mov	c,_MCU_MISO
   023F E4                 1712 	clr	a
   0240 33                 1713 	rlc	a
   0241 FD                 1714 	mov	r5,a
   0242 BD 01 03           1715 	cjne	r5,#0x01,00102$
                    0245   1716 	C$CommIF.c$369$3$57 ==.
                           1717 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:369: read_byte |= 0x01;
   0245 43 07 01           1718 	orl	ar7,#0x01
   0248                    1719 00102$:
                    0248   1720 	C$CommIF.c$371$2$56 ==.
                           1721 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:371: MCU_SCK = FALSE;
   0248 C2 90              1722 	clr	_MCU_SCK
                    024A   1723 	C$CommIF.c$361$1$55 ==.
                           1724 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:361: for(ii = 0u; ii < 8u; ii++)
   024A 0E                 1725 	inc	r6
   024B 80 D7              1726 	sjmp	00103$
   024D                    1727 00106$:
                    024D   1728 	C$CommIF.c$374$1$55 ==.
                           1729 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:374: return read_byte;
   024D 8F 82              1730 	mov	dpl,r7
                    024F   1731 	C$CommIF.c$375$1$55 ==.
                    024F   1732 	XG$Comm_IF_Spi1ReadByteBitbang$0$0 ==.
   024F 22                 1733 	ret
                           1734 ;------------------------------------------------------------
                           1735 ;Allocation info for local variables in function 'Comm_IF_Spi1WriteBitsBitbang'
                           1736 ;------------------------------------------------------------
                           1737 ;nmbr_bit                  Allocated with name '_Comm_IF_Spi1WriteBitsBitbang_PARM_2'
                           1738 ;data_in                   Allocated with name '_Comm_IF_Spi1WriteBitsBitbang_data_in_1_58'
                           1739 ;ii                        Allocated to registers r4 
                           1740 ;lMask                     Allocated to registers r6 
                           1741 ;------------------------------------------------------------
                    0250   1742 	G$Comm_IF_Spi1WriteBitsBitbang$0$0 ==.
                    0250   1743 	C$CommIF.c$386$1$55 ==.
                           1744 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:386: void Comm_IF_Spi1WriteBitsBitbang(U8 data_in, U8 nmbr_bit)
                           1745 ;	-----------------------------------------
                           1746 ;	 function Comm_IF_Spi1WriteBitsBitbang
                           1747 ;	-----------------------------------------
   0250                    1748 _Comm_IF_Spi1WriteBitsBitbang:
   0250 E5 82              1749 	mov	a,dpl
   0252 90s00r99           1750 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_data_in_1_58
   0255 F0                 1751 	movx	@dptr,a
                    0256   1752 	C$CommIF.c$391$1$59 ==.
                           1753 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:391: lMask = (1u << (nmbr_bit - 1u));
   0256 90s00r98           1754 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   0259 E0                 1755 	movx	a,@dptr
   025A FF                 1756 	mov	r7,a
   025B 14                 1757 	dec	a
   025C F5 F0              1758 	mov	b,a
   025E 05 F0              1759 	inc	b
   0260 74 01              1760 	mov	a,#0x01
   0262 80 02              1761 	sjmp	00119$
   0264                    1762 00117$:
   0264 25 E0              1763 	add	a,acc
   0266                    1764 00119$:
   0266 D5 F0 FB           1765 	djnz	b,00117$
   0269 FE                 1766 	mov	r6,a
                    026A   1767 	C$CommIF.c$392$2$60 ==.
                           1768 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:392: for (ii = 0u; ii < nmbr_bit; ii++)
   026A 90s00r99           1769 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_data_in_1_58
   026D E0                 1770 	movx	a,@dptr
   026E FD                 1771 	mov	r5,a
   026F 7C 00              1772 	mov	r4,#0x00
   0271                    1773 00104$:
   0271 C3                 1774 	clr	c
   0272 EC                 1775 	mov	a,r4
   0273 9F                 1776 	subb	a,r7
   0274 50 15              1777 	jnc	00107$
                    0276   1778 	C$CommIF.c$394$2$60 ==.
                           1779 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:394: MCU_SCK = FALSE;
   0276 C2 90              1780 	clr	_MCU_SCK
                    0278   1781 	C$CommIF.c$395$2$60 ==.
                           1782 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:395: if ((data_in & lMask) != 0u)
   0278 EE                 1783 	mov	a,r6
   0279 5D                 1784 	anl	a,r5
   027A 60 04              1785 	jz	00102$
                    027C   1786 	C$CommIF.c$397$3$61 ==.
                           1787 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:397: MCU_MOSI = TRUE;
   027C D2 92              1788 	setb	_MCU_MOSI
   027E 80 02              1789 	sjmp	00103$
   0280                    1790 00102$:
                    0280   1791 	C$CommIF.c$401$3$62 ==.
                           1792 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:401: MCU_MOSI = FALSE;
   0280 C2 92              1793 	clr	_MCU_MOSI
   0282                    1794 00103$:
                    0282   1795 	C$CommIF.c$404$2$60 ==.
                           1796 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:404: MCU_SCK = TRUE;
   0282 D2 90              1797 	setb	_MCU_SCK
                    0284   1798 	C$CommIF.c$405$2$60 ==.
                           1799 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:405: lMask >>= 1u;
   0284 EE                 1800 	mov	a,r6
   0285 C3                 1801 	clr	c
   0286 13                 1802 	rrc	a
   0287 FE                 1803 	mov	r6,a
                    0288   1804 	C$CommIF.c$392$1$59 ==.
                           1805 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:392: for (ii = 0u; ii < nmbr_bit; ii++)
   0288 0C                 1806 	inc	r4
   0289 80 E6              1807 	sjmp	00104$
   028B                    1808 00107$:
                    028B   1809 	C$CommIF.c$408$1$59 ==.
                           1810 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:408: MCU_SCK = FALSE;
   028B C2 90              1811 	clr	_MCU_SCK
                    028D   1812 	C$CommIF.c$409$1$59 ==.
                    028D   1813 	XG$Comm_IF_Spi1WriteBitsBitbang$0$0 ==.
   028D 22                 1814 	ret
                           1815 ;------------------------------------------------------------
                           1816 ;Allocation info for local variables in function 'Comm_IF_SpiClearNsel'
                           1817 ;------------------------------------------------------------
                           1818 ;sel                       Allocated with name '_Comm_IF_SpiClearNsel_sel_1_63'
                           1819 ;------------------------------------------------------------
                    028E   1820 	G$Comm_IF_SpiClearNsel$0$0 ==.
                    028E   1821 	C$CommIF.c$420$1$59 ==.
                           1822 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:420: void Comm_IF_SpiClearNsel(eNSEL sel)
                           1823 ;	-----------------------------------------
                           1824 ;	 function Comm_IF_SpiClearNsel
                           1825 ;	-----------------------------------------
   028E                    1826 _Comm_IF_SpiClearNsel:
   028E E5 82              1827 	mov	a,dpl
                    0290   1828 	C$CommIF.c$422$1$64 ==.
                           1829 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:422: switch (sel)
   0290 90s00r9A           1830 	mov	dptr,#_Comm_IF_SpiClearNsel_sel_1_63
   0293 F0                 1831 	movx	@dptr,a
   0294 FF                 1832 	mov	r7,a
   0295 FE                 1833 	mov	r6,a
   0296 BE 00 02           1834 	cjne	r6,#0x00,00111$
   0299 80 05              1835 	sjmp	00101$
   029B                    1836 00111$:
                    029B   1837 	C$CommIF.c$424$2$65 ==.
                           1838 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:424: case RF_NSELECT:
   029B BF 01 08           1839 	cjne	r7,#0x01,00105$
   029E 80 04              1840 	sjmp	00102$
   02A0                    1841 00101$:
                    02A0   1842 	C$CommIF.c$425$2$65 ==.
                           1843 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:425: RF_NSEL = FALSE;
   02A0 C2 93              1844 	clr	_RF_NSEL
                    02A2   1845 	C$CommIF.c$426$2$65 ==.
                           1846 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:426: break;
                    02A2   1847 	C$CommIF.c$428$2$65 ==.
                           1848 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:428: case LCD_NSELECT:
   02A2 80 02              1849 	sjmp	00105$
   02A4                    1850 00102$:
                    02A4   1851 	C$CommIF.c$429$2$65 ==.
                           1852 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:429: LCD_NSEL = FALSE;
   02A4 C2 96              1853 	clr	_LCD_NSEL
                    02A6   1854 	C$CommIF.c$434$1$64 ==.
                           1855 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:434: }
   02A6                    1856 00105$:
                    02A6   1857 	C$CommIF.c$435$1$64 ==.
                    02A6   1858 	XG$Comm_IF_SpiClearNsel$0$0 ==.
   02A6 22                 1859 	ret
                           1860 ;------------------------------------------------------------
                           1861 ;Allocation info for local variables in function 'Comm_IF_SpiSetNsel'
                           1862 ;------------------------------------------------------------
                           1863 ;sel                       Allocated with name '_Comm_IF_SpiSetNsel_sel_1_66'
                           1864 ;------------------------------------------------------------
                    02A7   1865 	G$Comm_IF_SpiSetNsel$0$0 ==.
                    02A7   1866 	C$CommIF.c$445$1$64 ==.
                           1867 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:445: void Comm_IF_SpiSetNsel(eNSEL sel)
                           1868 ;	-----------------------------------------
                           1869 ;	 function Comm_IF_SpiSetNsel
                           1870 ;	-----------------------------------------
   02A7                    1871 _Comm_IF_SpiSetNsel:
   02A7 E5 82              1872 	mov	a,dpl
                    02A9   1873 	C$CommIF.c$447$1$67 ==.
                           1874 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:447: switch (sel)
   02A9 90s00r9B           1875 	mov	dptr,#_Comm_IF_SpiSetNsel_sel_1_66
   02AC F0                 1876 	movx	@dptr,a
   02AD FF                 1877 	mov	r7,a
   02AE FE                 1878 	mov	r6,a
   02AF BE 00 02           1879 	cjne	r6,#0x00,00111$
   02B2 80 05              1880 	sjmp	00101$
   02B4                    1881 00111$:
                    02B4   1882 	C$CommIF.c$449$2$68 ==.
                           1883 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:449: case RF_NSELECT:
   02B4 BF 01 08           1884 	cjne	r7,#0x01,00105$
   02B7 80 04              1885 	sjmp	00102$
   02B9                    1886 00101$:
                    02B9   1887 	C$CommIF.c$450$2$68 ==.
                           1888 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:450: RF_NSEL = TRUE;
   02B9 D2 93              1889 	setb	_RF_NSEL
                    02BB   1890 	C$CommIF.c$451$2$68 ==.
                           1891 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:451: break;
                    02BB   1892 	C$CommIF.c$453$2$68 ==.
                           1893 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:453: case LCD_NSELECT:
   02BB 80 02              1894 	sjmp	00105$
   02BD                    1895 00102$:
                    02BD   1896 	C$CommIF.c$454$2$68 ==.
                           1897 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:454: LCD_NSEL = TRUE;
   02BD D2 96              1898 	setb	_LCD_NSEL
                    02BF   1899 	C$CommIF.c$459$1$67 ==.
                           1900 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:459: }
   02BF                    1901 00105$:
                    02BF   1902 	C$CommIF.c$460$1$67 ==.
                    02BF   1903 	XG$Comm_IF_SpiSetNsel$0$0 ==.
   02BF 22                 1904 	ret
                           1905 ;------------------------------------------------------------
                           1906 ;Allocation info for local variables in function 'Comm_IF_Spi1DebugRead'
                           1907 ;------------------------------------------------------------
                           1908 ;lReadByte                 Allocated to registers r7 
                           1909 ;AddressMSB                Allocated with name '_Comm_IF_Spi1DebugRead_PARM_2'
                           1910 ;AddressLSB                Allocated with name '_Comm_IF_Spi1DebugRead_PARM_3'
                           1911 ;DebugCommand              Allocated with name '_Comm_IF_Spi1DebugRead_DebugCommand_1_69'
                           1912 ;------------------------------------------------------------
                    02C0   1913 	G$Comm_IF_Spi1DebugRead$0$0 ==.
                    02C0   1914 	C$CommIF.c$476$1$67 ==.
                           1915 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:476: U8 Comm_IF_Spi1DebugRead(U8 DebugCommand, U8 AddressMSB, U8 AddressLSB)
                           1916 ;	-----------------------------------------
                           1917 ;	 function Comm_IF_Spi1DebugRead
                           1918 ;	-----------------------------------------
   02C0                    1919 _Comm_IF_Spi1DebugRead:
   02C0 E5 82              1920 	mov	a,dpl
   02C2 90s00r9E           1921 	mov	dptr,#_Comm_IF_Spi1DebugRead_DebugCommand_1_69
   02C5 F0                 1922 	movx	@dptr,a
                    02C6   1923 	C$CommIF.c$481$1$70 ==.
                           1924 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:481: ENTER_CRITICAL_SECTION;
   02C6 C2 AF              1925 	clr	_EA
                    02C8   1926 	C$CommIF.c$484$1$70 ==.
                           1927 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:484: Comm_IF_Spi1Disable();
   02C8 12s02r05           1928 	lcall	_Comm_IF_Spi1Disable
                    02CB   1929 	C$CommIF.c$487$1$70 ==.
                           1930 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:487: Comm_IF_SpiClearNsel(0u);
   02CB 75 82 00           1931 	mov	dpl,#0x00
   02CE 12s02r8E           1932 	lcall	_Comm_IF_SpiClearNsel
                    02D1   1933 	C$CommIF.c$488$1$70 ==.
                           1934 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:488: Comm_IF_Spi1WriteBitsBitbang(DebugCommand, 8u);
   02D1 90s00r9E           1935 	mov	dptr,#_Comm_IF_Spi1DebugRead_DebugCommand_1_69
   02D4 E0                 1936 	movx	a,@dptr
   02D5 FF                 1937 	mov	r7,a
   02D6 90s00r98           1938 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   02D9 74 08              1939 	mov	a,#0x08
   02DB F0                 1940 	movx	@dptr,a
   02DC 8F 82              1941 	mov	dpl,r7
   02DE C0 07              1942 	push	ar7
   02E0 12s02r50           1943 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    02E3   1944 	C$CommIF.c$489$1$70 ==.
                           1945 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:489: Comm_IF_Spi1WriteBitsBitbang(0x02, 4u);
   02E3 90s00r98           1946 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   02E6 74 04              1947 	mov	a,#0x04
   02E8 F0                 1948 	movx	@dptr,a
   02E9 75 82 02           1949 	mov	dpl,#0x02
   02EC 12s02r50           1950 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    02EF   1951 	C$CommIF.c$490$1$70 ==.
                           1952 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:490: Comm_IF_Spi1WriteBitsBitbang(AddressLSB, 8u);
   02EF 90s00r9D           1953 	mov	dptr,#_Comm_IF_Spi1DebugRead_PARM_3
   02F2 E0                 1954 	movx	a,@dptr
   02F3 FE                 1955 	mov	r6,a
   02F4 90s00r98           1956 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   02F7 74 08              1957 	mov	a,#0x08
   02F9 F0                 1958 	movx	@dptr,a
   02FA 8E 82              1959 	mov	dpl,r6
   02FC 12s02r50           1960 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    02FF   1961 	C$CommIF.c$491$1$70 ==.
                           1962 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:491: Comm_IF_Spi1WriteBitsBitbang(0x03, 2u);
   02FF 90s00r98           1963 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   0302 74 02              1964 	mov	a,#0x02
   0304 F0                 1965 	movx	@dptr,a
   0305 75 82 03           1966 	mov	dpl,#0x03
   0308 12s02r50           1967 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    030B   1968 	C$CommIF.c$492$1$70 ==.
                           1969 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:492: Comm_IF_SpiSetNsel(0u);
   030B 75 82 00           1970 	mov	dpl,#0x00
   030E 12s02rA7           1971 	lcall	_Comm_IF_SpiSetNsel
                    0311   1972 	C$CommIF.c$495$1$70 ==.
                           1973 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:495: Comm_IF_SpiClearNsel(0u);
   0311 75 82 00           1974 	mov	dpl,#0x00
   0314 12s02r8E           1975 	lcall	_Comm_IF_SpiClearNsel
   0317 D0 07              1976 	pop	ar7
                    0319   1977 	C$CommIF.c$496$1$70 ==.
                           1978 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:496: Comm_IF_Spi1WriteBitsBitbang(DebugCommand, 8u);
   0319 90s00r98           1979 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   031C 74 08              1980 	mov	a,#0x08
   031E F0                 1981 	movx	@dptr,a
   031F 8F 82              1982 	mov	dpl,r7
   0321 C0 07              1983 	push	ar7
   0323 12s02r50           1984 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    0326   1985 	C$CommIF.c$497$1$70 ==.
                           1986 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:497: Comm_IF_Spi1WriteBitsBitbang(0x03, 4u);
   0326 90s00r98           1987 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   0329 74 04              1988 	mov	a,#0x04
   032B F0                 1989 	movx	@dptr,a
   032C 75 82 03           1990 	mov	dpl,#0x03
   032F 12s02r50           1991 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    0332   1992 	C$CommIF.c$498$1$70 ==.
                           1993 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:498: Comm_IF_Spi1WriteBitsBitbang(AddressMSB, 8u);
   0332 90s00r9C           1994 	mov	dptr,#_Comm_IF_Spi1DebugRead_PARM_2
   0335 E0                 1995 	movx	a,@dptr
   0336 FE                 1996 	mov	r6,a
   0337 90s00r98           1997 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   033A 74 08              1998 	mov	a,#0x08
   033C F0                 1999 	movx	@dptr,a
   033D 8E 82              2000 	mov	dpl,r6
   033F 12s02r50           2001 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    0342   2002 	C$CommIF.c$499$1$70 ==.
                           2003 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:499: Comm_IF_Spi1WriteBitsBitbang(0x03, 2u);
   0342 90s00r98           2004 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   0345 74 02              2005 	mov	a,#0x02
   0347 F0                 2006 	movx	@dptr,a
   0348 75 82 03           2007 	mov	dpl,#0x03
   034B 12s02r50           2008 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    034E   2009 	C$CommIF.c$500$1$70 ==.
                           2010 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:500: Comm_IF_SpiSetNsel(0u);
   034E 75 82 00           2011 	mov	dpl,#0x00
   0351 12s02rA7           2012 	lcall	_Comm_IF_SpiSetNsel
                    0354   2013 	C$CommIF.c$503$1$70 ==.
                           2014 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:503: Comm_IF_SpiClearNsel(0u);
   0354 75 82 00           2015 	mov	dpl,#0x00
   0357 12s02r8E           2016 	lcall	_Comm_IF_SpiClearNsel
   035A D0 07              2017 	pop	ar7
                    035C   2018 	C$CommIF.c$504$1$70 ==.
                           2019 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:504: Comm_IF_Spi1WriteBitsBitbang(DebugCommand, 8u);
   035C 90s00r98           2020 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   035F 74 08              2021 	mov	a,#0x08
   0361 F0                 2022 	movx	@dptr,a
   0362 8F 82              2023 	mov	dpl,r7
   0364 C0 07              2024 	push	ar7
   0366 12s02r50           2025 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    0369   2026 	C$CommIF.c$505$1$70 ==.
                           2027 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:505: Comm_IF_Spi1WriteBitsBitbang(0x01, 4u);
   0369 90s00r98           2028 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   036C 74 04              2029 	mov	a,#0x04
   036E F0                 2030 	movx	@dptr,a
   036F 75 82 01           2031 	mov	dpl,#0x01
   0372 12s02r50           2032 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    0375   2033 	C$CommIF.c$506$1$70 ==.
                           2034 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:506: Comm_IF_Spi1WriteBitsBitbang(0x00, 8u);     /* 0x01 */
   0375 90s00r98           2035 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   0378 74 08              2036 	mov	a,#0x08
   037A F0                 2037 	movx	@dptr,a
   037B 75 82 00           2038 	mov	dpl,#0x00
   037E 12s02r50           2039 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    0381   2040 	C$CommIF.c$507$1$70 ==.
                           2041 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:507: Comm_IF_Spi1WriteBitsBitbang(0x03, 2u);
   0381 90s00r98           2042 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   0384 74 02              2043 	mov	a,#0x02
   0386 F0                 2044 	movx	@dptr,a
   0387 75 82 03           2045 	mov	dpl,#0x03
   038A 12s02r50           2046 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    038D   2047 	C$CommIF.c$508$1$70 ==.
                           2048 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:508: Comm_IF_SpiSetNsel(0u);
   038D 75 82 00           2049 	mov	dpl,#0x00
   0390 12s02rA7           2050 	lcall	_Comm_IF_SpiSetNsel
                    0393   2051 	C$CommIF.c$511$1$70 ==.
                           2052 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:511: Comm_IF_SpiClearNsel(0u);
   0393 75 82 00           2053 	mov	dpl,#0x00
   0396 12s02r8E           2054 	lcall	_Comm_IF_SpiClearNsel
   0399 D0 07              2055 	pop	ar7
                    039B   2056 	C$CommIF.c$512$1$70 ==.
                           2057 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:512: Comm_IF_Spi1WriteBitsBitbang(DebugCommand, 8u);
   039B 90s00r98           2058 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   039E 74 08              2059 	mov	a,#0x08
   03A0 F0                 2060 	movx	@dptr,a
   03A1 8F 82              2061 	mov	dpl,r7
   03A3 12s02r50           2062 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    03A6   2063 	C$CommIF.c$513$1$70 ==.
                           2064 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:513: Comm_IF_Spi1WriteBitsBitbang(0x08, 4u);
   03A6 90s00r98           2065 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   03A9 74 04              2066 	mov	a,#0x04
   03AB F0                 2067 	movx	@dptr,a
   03AC 75 82 08           2068 	mov	dpl,#0x08
   03AF 12s02r50           2069 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    03B2   2070 	C$CommIF.c$514$1$70 ==.
                           2071 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:514: Comm_IF_Spi1WriteBitsBitbang(0xFF, 8u);
   03B2 90s00r98           2072 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   03B5 74 08              2073 	mov	a,#0x08
   03B7 F0                 2074 	movx	@dptr,a
   03B8 75 82 FF           2075 	mov	dpl,#0xFF
   03BB 12s02r50           2076 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    03BE   2077 	C$CommIF.c$515$1$70 ==.
                           2078 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:515: Comm_IF_Spi1WriteBitsBitbang(0x01, 2u);
   03BE 90s00r98           2079 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   03C1 74 02              2080 	mov	a,#0x02
   03C3 F0                 2081 	movx	@dptr,a
   03C4 75 82 01           2082 	mov	dpl,#0x01
   03C7 12s02r50           2083 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    03CA   2084 	C$CommIF.c$518$1$70 ==.
                           2085 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:518: DELAY_1US();
   03CA 90s00r00           2086 	mov	dptr,#_wDelay
   03CD 74 FF              2087 	mov	a,#0xFF
   03CF F0                 2088 	movx	@dptr,a
   03D0 A3                 2089 	inc	dptr
   03D1 74 01              2090 	mov	a,#0x01
   03D3 F0                 2091 	movx	@dptr,a
   03D4                    2092 00101$:
   03D4 90s00r00           2093 	mov	dptr,#_wDelay
   03D7 E0                 2094 	movx	a,@dptr
   03D8 FE                 2095 	mov	r6,a
   03D9 A3                 2096 	inc	dptr
   03DA E0                 2097 	movx	a,@dptr
   03DB FF                 2098 	mov	r7,a
   03DC EE                 2099 	mov	a,r6
   03DD 24 FF              2100 	add	a,#0xFF
   03DF FC                 2101 	mov	r4,a
   03E0 EF                 2102 	mov	a,r7
   03E1 34 FF              2103 	addc	a,#0xFF
   03E3 FD                 2104 	mov	r5,a
   03E4 90s00r00           2105 	mov	dptr,#_wDelay
   03E7 EC                 2106 	mov	a,r4
   03E8 F0                 2107 	movx	@dptr,a
   03E9 A3                 2108 	inc	dptr
   03EA ED                 2109 	mov	a,r5
   03EB F0                 2110 	movx	@dptr,a
   03EC EE                 2111 	mov	a,r6
   03ED 4F                 2112 	orl	a,r7
   03EE 70 E4              2113 	jnz	00101$
                    03F0   2114 	C$CommIF.c$519$1$70 ==.
                           2115 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:519: DELAY_1US();
   03F0 90s00r00           2116 	mov	dptr,#_wDelay
   03F3 74 FF              2117 	mov	a,#0xFF
   03F5 F0                 2118 	movx	@dptr,a
   03F6 A3                 2119 	inc	dptr
   03F7 74 01              2120 	mov	a,#0x01
   03F9 F0                 2121 	movx	@dptr,a
   03FA                    2122 00104$:
   03FA 90s00r00           2123 	mov	dptr,#_wDelay
   03FD E0                 2124 	movx	a,@dptr
   03FE FE                 2125 	mov	r6,a
   03FF A3                 2126 	inc	dptr
   0400 E0                 2127 	movx	a,@dptr
   0401 FF                 2128 	mov	r7,a
   0402 EE                 2129 	mov	a,r6
   0403 24 FF              2130 	add	a,#0xFF
   0405 FC                 2131 	mov	r4,a
   0406 EF                 2132 	mov	a,r7
   0407 34 FF              2133 	addc	a,#0xFF
   0409 FD                 2134 	mov	r5,a
   040A 90s00r00           2135 	mov	dptr,#_wDelay
   040D EC                 2136 	mov	a,r4
   040E F0                 2137 	movx	@dptr,a
   040F A3                 2138 	inc	dptr
   0410 ED                 2139 	mov	a,r5
   0411 F0                 2140 	movx	@dptr,a
   0412 EE                 2141 	mov	a,r6
   0413 4F                 2142 	orl	a,r7
   0414 70 E4              2143 	jnz	00104$
                    0416   2144 	C$CommIF.c$520$1$70 ==.
                           2145 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:520: DELAY_1US();
   0416 90s00r00           2146 	mov	dptr,#_wDelay
   0419 74 FF              2147 	mov	a,#0xFF
   041B F0                 2148 	movx	@dptr,a
   041C A3                 2149 	inc	dptr
   041D 74 01              2150 	mov	a,#0x01
   041F F0                 2151 	movx	@dptr,a
   0420                    2152 00107$:
   0420 90s00r00           2153 	mov	dptr,#_wDelay
   0423 E0                 2154 	movx	a,@dptr
   0424 FE                 2155 	mov	r6,a
   0425 A3                 2156 	inc	dptr
   0426 E0                 2157 	movx	a,@dptr
   0427 FF                 2158 	mov	r7,a
   0428 EE                 2159 	mov	a,r6
   0429 24 FF              2160 	add	a,#0xFF
   042B FC                 2161 	mov	r4,a
   042C EF                 2162 	mov	a,r7
   042D 34 FF              2163 	addc	a,#0xFF
   042F FD                 2164 	mov	r5,a
   0430 90s00r00           2165 	mov	dptr,#_wDelay
   0433 EC                 2166 	mov	a,r4
   0434 F0                 2167 	movx	@dptr,a
   0435 A3                 2168 	inc	dptr
   0436 ED                 2169 	mov	a,r5
   0437 F0                 2170 	movx	@dptr,a
   0438 EE                 2171 	mov	a,r6
   0439 4F                 2172 	orl	a,r7
   043A 70 E4              2173 	jnz	00107$
                    043C   2174 	C$CommIF.c$521$1$70 ==.
                           2175 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:521: DELAY_1US();
   043C 90s00r00           2176 	mov	dptr,#_wDelay
   043F 74 FF              2177 	mov	a,#0xFF
   0441 F0                 2178 	movx	@dptr,a
   0442 A3                 2179 	inc	dptr
   0443 74 01              2180 	mov	a,#0x01
   0445 F0                 2181 	movx	@dptr,a
   0446                    2182 00110$:
   0446 90s00r00           2183 	mov	dptr,#_wDelay
   0449 E0                 2184 	movx	a,@dptr
   044A FE                 2185 	mov	r6,a
   044B A3                 2186 	inc	dptr
   044C E0                 2187 	movx	a,@dptr
   044D FF                 2188 	mov	r7,a
   044E EE                 2189 	mov	a,r6
   044F 24 FF              2190 	add	a,#0xFF
   0451 FC                 2191 	mov	r4,a
   0452 EF                 2192 	mov	a,r7
   0453 34 FF              2193 	addc	a,#0xFF
   0455 FD                 2194 	mov	r5,a
   0456 90s00r00           2195 	mov	dptr,#_wDelay
   0459 EC                 2196 	mov	a,r4
   045A F0                 2197 	movx	@dptr,a
   045B A3                 2198 	inc	dptr
   045C ED                 2199 	mov	a,r5
   045D F0                 2200 	movx	@dptr,a
   045E EE                 2201 	mov	a,r6
   045F 4F                 2202 	orl	a,r7
   0460 70 E4              2203 	jnz	00110$
                    0462   2204 	C$CommIF.c$522$1$70 ==.
                           2205 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:522: DELAY_1US();
   0462 90s00r00           2206 	mov	dptr,#_wDelay
   0465 74 FF              2207 	mov	a,#0xFF
   0467 F0                 2208 	movx	@dptr,a
   0468 A3                 2209 	inc	dptr
   0469 74 01              2210 	mov	a,#0x01
   046B F0                 2211 	movx	@dptr,a
   046C                    2212 00113$:
   046C 90s00r00           2213 	mov	dptr,#_wDelay
   046F E0                 2214 	movx	a,@dptr
   0470 FE                 2215 	mov	r6,a
   0471 A3                 2216 	inc	dptr
   0472 E0                 2217 	movx	a,@dptr
   0473 FF                 2218 	mov	r7,a
   0474 EE                 2219 	mov	a,r6
   0475 24 FF              2220 	add	a,#0xFF
   0477 FC                 2221 	mov	r4,a
   0478 EF                 2222 	mov	a,r7
   0479 34 FF              2223 	addc	a,#0xFF
   047B FD                 2224 	mov	r5,a
   047C 90s00r00           2225 	mov	dptr,#_wDelay
   047F EC                 2226 	mov	a,r4
   0480 F0                 2227 	movx	@dptr,a
   0481 A3                 2228 	inc	dptr
   0482 ED                 2229 	mov	a,r5
   0483 F0                 2230 	movx	@dptr,a
   0484 EE                 2231 	mov	a,r6
   0485 4F                 2232 	orl	a,r7
   0486 70 E4              2233 	jnz	00113$
                    0488   2234 	C$CommIF.c$524$1$70 ==.
                           2235 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:524: lReadByte = Comm_IF_Spi1ReadByteBitbang();
   0488 12s02r17           2236 	lcall	_Comm_IF_Spi1ReadByteBitbang
   048B AF 82              2237 	mov	r7,dpl
                    048D   2238 	C$CommIF.c$525$1$70 ==.
                           2239 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:525: Comm_IF_SpiSetNsel(0u);
   048D 75 82 00           2240 	mov	dpl,#0x00
   0490 C0 07              2241 	push	ar7
   0492 12s02rA7           2242 	lcall	_Comm_IF_SpiSetNsel
                    0495   2243 	C$CommIF.c$528$1$70 ==.
                           2244 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:528: Comm_IF_Spi1Enable();
   0495 12s01rF7           2245 	lcall	_Comm_IF_Spi1Enable
   0498 D0 07              2246 	pop	ar7
                    049A   2247 	C$CommIF.c$531$1$70 ==.
                           2248 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:531: EXIT_CRITICAL_SECTION;
   049A D2 AF              2249 	setb	_EA
                    049C   2250 	C$CommIF.c$533$1$70 ==.
                           2251 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:533: return lReadByte;
   049C 8F 82              2252 	mov	dpl,r7
                    049E   2253 	C$CommIF.c$534$1$70 ==.
                    049E   2254 	XG$Comm_IF_Spi1DebugRead$0$0 ==.
   049E 22                 2255 	ret
                           2256 ;------------------------------------------------------------
                           2257 ;Allocation info for local variables in function 'Comm_IF_Spi1DebugReadSFR'
                           2258 ;------------------------------------------------------------
                           2259 ;lReadByte                 Allocated to registers r7 
                           2260 ;AddressMSB                Allocated with name '_Comm_IF_Spi1DebugReadSFR_PARM_2'
                           2261 ;AddressLSB                Allocated with name '_Comm_IF_Spi1DebugReadSFR_PARM_3'
                           2262 ;DebugCommand              Allocated with name '_Comm_IF_Spi1DebugReadSFR_DebugCommand_1_71'
                           2263 ;------------------------------------------------------------
                    049F   2264 	G$Comm_IF_Spi1DebugReadSFR$0$0 ==.
                    049F   2265 	C$CommIF.c$550$1$70 ==.
                           2266 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:550: U8 Comm_IF_Spi1DebugReadSFR(U8 DebugCommand, U8 AddressMSB, U8 AddressLSB)
                           2267 ;	-----------------------------------------
                           2268 ;	 function Comm_IF_Spi1DebugReadSFR
                           2269 ;	-----------------------------------------
   049F                    2270 _Comm_IF_Spi1DebugReadSFR:
   049F E5 82              2271 	mov	a,dpl
   04A1 90s00rA1           2272 	mov	dptr,#_Comm_IF_Spi1DebugReadSFR_DebugCommand_1_71
   04A4 F0                 2273 	movx	@dptr,a
                    04A5   2274 	C$CommIF.c$555$1$72 ==.
                           2275 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:555: ENTER_CRITICAL_SECTION;
   04A5 C2 AF              2276 	clr	_EA
                    04A7   2277 	C$CommIF.c$558$1$72 ==.
                           2278 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:558: Comm_IF_Spi1Disable();
   04A7 12s02r05           2279 	lcall	_Comm_IF_Spi1Disable
                    04AA   2280 	C$CommIF.c$561$1$72 ==.
                           2281 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:561: Comm_IF_SpiClearNsel(0u);
   04AA 75 82 00           2282 	mov	dpl,#0x00
   04AD 12s02r8E           2283 	lcall	_Comm_IF_SpiClearNsel
                    04B0   2284 	C$CommIF.c$562$1$72 ==.
                           2285 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:562: Comm_IF_Spi1WriteBitsBitbang(DebugCommand, 8u);
   04B0 90s00rA1           2286 	mov	dptr,#_Comm_IF_Spi1DebugReadSFR_DebugCommand_1_71
   04B3 E0                 2287 	movx	a,@dptr
   04B4 FF                 2288 	mov	r7,a
   04B5 90s00r98           2289 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   04B8 74 08              2290 	mov	a,#0x08
   04BA F0                 2291 	movx	@dptr,a
   04BB 8F 82              2292 	mov	dpl,r7
   04BD C0 07              2293 	push	ar7
   04BF 12s02r50           2294 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    04C2   2295 	C$CommIF.c$563$1$72 ==.
                           2296 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:563: Comm_IF_Spi1WriteBitsBitbang(0x02, 4u);
   04C2 90s00r98           2297 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   04C5 74 04              2298 	mov	a,#0x04
   04C7 F0                 2299 	movx	@dptr,a
   04C8 75 82 02           2300 	mov	dpl,#0x02
   04CB 12s02r50           2301 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    04CE   2302 	C$CommIF.c$564$1$72 ==.
                           2303 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:564: Comm_IF_Spi1WriteBitsBitbang(AddressLSB, 8u);
   04CE 90s00rA0           2304 	mov	dptr,#_Comm_IF_Spi1DebugReadSFR_PARM_3
   04D1 E0                 2305 	movx	a,@dptr
   04D2 FE                 2306 	mov	r6,a
   04D3 90s00r98           2307 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   04D6 74 08              2308 	mov	a,#0x08
   04D8 F0                 2309 	movx	@dptr,a
   04D9 8E 82              2310 	mov	dpl,r6
   04DB 12s02r50           2311 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    04DE   2312 	C$CommIF.c$565$1$72 ==.
                           2313 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:565: Comm_IF_Spi1WriteBitsBitbang(0x03, 2u);
   04DE 90s00r98           2314 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   04E1 74 02              2315 	mov	a,#0x02
   04E3 F0                 2316 	movx	@dptr,a
   04E4 75 82 03           2317 	mov	dpl,#0x03
   04E7 12s02r50           2318 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    04EA   2319 	C$CommIF.c$566$1$72 ==.
                           2320 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:566: Comm_IF_SpiSetNsel(0u);
   04EA 75 82 00           2321 	mov	dpl,#0x00
   04ED 12s02rA7           2322 	lcall	_Comm_IF_SpiSetNsel
                    04F0   2323 	C$CommIF.c$569$1$72 ==.
                           2324 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:569: Comm_IF_SpiClearNsel(0u);
   04F0 75 82 00           2325 	mov	dpl,#0x00
   04F3 12s02r8E           2326 	lcall	_Comm_IF_SpiClearNsel
   04F6 D0 07              2327 	pop	ar7
                    04F8   2328 	C$CommIF.c$570$1$72 ==.
                           2329 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:570: Comm_IF_Spi1WriteBitsBitbang(DebugCommand, 8u);
   04F8 90s00r98           2330 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   04FB 74 08              2331 	mov	a,#0x08
   04FD F0                 2332 	movx	@dptr,a
   04FE 8F 82              2333 	mov	dpl,r7
   0500 C0 07              2334 	push	ar7
   0502 12s02r50           2335 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    0505   2336 	C$CommIF.c$571$1$72 ==.
                           2337 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:571: Comm_IF_Spi1WriteBitsBitbang(0x03, 4u);
   0505 90s00r98           2338 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   0508 74 04              2339 	mov	a,#0x04
   050A F0                 2340 	movx	@dptr,a
   050B 75 82 03           2341 	mov	dpl,#0x03
   050E 12s02r50           2342 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    0511   2343 	C$CommIF.c$572$1$72 ==.
                           2344 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:572: Comm_IF_Spi1WriteBitsBitbang(AddressMSB, 8u);
   0511 90s00r9F           2345 	mov	dptr,#_Comm_IF_Spi1DebugReadSFR_PARM_2
   0514 E0                 2346 	movx	a,@dptr
   0515 FE                 2347 	mov	r6,a
   0516 90s00r98           2348 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   0519 74 08              2349 	mov	a,#0x08
   051B F0                 2350 	movx	@dptr,a
   051C 8E 82              2351 	mov	dpl,r6
   051E 12s02r50           2352 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    0521   2353 	C$CommIF.c$573$1$72 ==.
                           2354 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:573: Comm_IF_Spi1WriteBitsBitbang(0x03, 2u);
   0521 90s00r98           2355 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   0524 74 02              2356 	mov	a,#0x02
   0526 F0                 2357 	movx	@dptr,a
   0527 75 82 03           2358 	mov	dpl,#0x03
   052A 12s02r50           2359 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    052D   2360 	C$CommIF.c$574$1$72 ==.
                           2361 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:574: Comm_IF_SpiSetNsel(0u);
   052D 75 82 00           2362 	mov	dpl,#0x00
   0530 12s02rA7           2363 	lcall	_Comm_IF_SpiSetNsel
                    0533   2364 	C$CommIF.c$577$1$72 ==.
                           2365 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:577: Comm_IF_SpiClearNsel(0u);
   0533 75 82 00           2366 	mov	dpl,#0x00
   0536 12s02r8E           2367 	lcall	_Comm_IF_SpiClearNsel
   0539 D0 07              2368 	pop	ar7
                    053B   2369 	C$CommIF.c$578$1$72 ==.
                           2370 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:578: Comm_IF_Spi1WriteBitsBitbang(DebugCommand, 8u);
   053B 90s00r98           2371 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   053E 74 08              2372 	mov	a,#0x08
   0540 F0                 2373 	movx	@dptr,a
   0541 8F 82              2374 	mov	dpl,r7
   0543 C0 07              2375 	push	ar7
   0545 12s02r50           2376 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    0548   2377 	C$CommIF.c$579$1$72 ==.
                           2378 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:579: Comm_IF_Spi1WriteBitsBitbang(0x01, 4u);
   0548 90s00r98           2379 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   054B 74 04              2380 	mov	a,#0x04
   054D F0                 2381 	movx	@dptr,a
   054E 75 82 01           2382 	mov	dpl,#0x01
   0551 12s02r50           2383 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    0554   2384 	C$CommIF.c$580$1$72 ==.
                           2385 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:580: Comm_IF_Spi1WriteBitsBitbang(0x00, 8u);     /* 0x01 */
   0554 90s00r98           2386 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   0557 74 08              2387 	mov	a,#0x08
   0559 F0                 2388 	movx	@dptr,a
   055A 75 82 00           2389 	mov	dpl,#0x00
   055D 12s02r50           2390 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    0560   2391 	C$CommIF.c$581$1$72 ==.
                           2392 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:581: Comm_IF_Spi1WriteBitsBitbang(0x03, 2u);
   0560 90s00r98           2393 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   0563 74 02              2394 	mov	a,#0x02
   0565 F0                 2395 	movx	@dptr,a
   0566 75 82 03           2396 	mov	dpl,#0x03
   0569 12s02r50           2397 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    056C   2398 	C$CommIF.c$582$1$72 ==.
                           2399 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:582: Comm_IF_SpiSetNsel(0u);
   056C 75 82 00           2400 	mov	dpl,#0x00
   056F 12s02rA7           2401 	lcall	_Comm_IF_SpiSetNsel
                    0572   2402 	C$CommIF.c$585$1$72 ==.
                           2403 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:585: Comm_IF_SpiClearNsel(0u);
   0572 75 82 00           2404 	mov	dpl,#0x00
   0575 12s02r8E           2405 	lcall	_Comm_IF_SpiClearNsel
   0578 D0 07              2406 	pop	ar7
                    057A   2407 	C$CommIF.c$586$1$72 ==.
                           2408 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:586: Comm_IF_Spi1WriteBitsBitbang(DebugCommand, 8u);
   057A 90s00r98           2409 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   057D 74 08              2410 	mov	a,#0x08
   057F F0                 2411 	movx	@dptr,a
   0580 8F 82              2412 	mov	dpl,r7
   0582 12s02r50           2413 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    0585   2414 	C$CommIF.c$587$1$72 ==.
                           2415 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:587: Comm_IF_Spi1WriteBitsBitbang(0x0A, 4u);
   0585 90s00r98           2416 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   0588 74 04              2417 	mov	a,#0x04
   058A F0                 2418 	movx	@dptr,a
   058B 75 82 0A           2419 	mov	dpl,#0x0A
   058E 12s02r50           2420 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    0591   2421 	C$CommIF.c$588$1$72 ==.
                           2422 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:588: Comm_IF_Spi1WriteBitsBitbang(0xFF, 8u);
   0591 90s00r98           2423 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   0594 74 08              2424 	mov	a,#0x08
   0596 F0                 2425 	movx	@dptr,a
   0597 75 82 FF           2426 	mov	dpl,#0xFF
   059A 12s02r50           2427 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    059D   2428 	C$CommIF.c$589$1$72 ==.
                           2429 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:589: Comm_IF_Spi1WriteBitsBitbang(0x01, 2u);
   059D 90s00r98           2430 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   05A0 74 02              2431 	mov	a,#0x02
   05A2 F0                 2432 	movx	@dptr,a
   05A3 75 82 01           2433 	mov	dpl,#0x01
   05A6 12s02r50           2434 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    05A9   2435 	C$CommIF.c$592$1$72 ==.
                           2436 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:592: DELAY_1US();
   05A9 90s00r00           2437 	mov	dptr,#_wDelay
   05AC 74 FF              2438 	mov	a,#0xFF
   05AE F0                 2439 	movx	@dptr,a
   05AF A3                 2440 	inc	dptr
   05B0 74 01              2441 	mov	a,#0x01
   05B2 F0                 2442 	movx	@dptr,a
   05B3                    2443 00101$:
   05B3 90s00r00           2444 	mov	dptr,#_wDelay
   05B6 E0                 2445 	movx	a,@dptr
   05B7 FE                 2446 	mov	r6,a
   05B8 A3                 2447 	inc	dptr
   05B9 E0                 2448 	movx	a,@dptr
   05BA FF                 2449 	mov	r7,a
   05BB EE                 2450 	mov	a,r6
   05BC 24 FF              2451 	add	a,#0xFF
   05BE FC                 2452 	mov	r4,a
   05BF EF                 2453 	mov	a,r7
   05C0 34 FF              2454 	addc	a,#0xFF
   05C2 FD                 2455 	mov	r5,a
   05C3 90s00r00           2456 	mov	dptr,#_wDelay
   05C6 EC                 2457 	mov	a,r4
   05C7 F0                 2458 	movx	@dptr,a
   05C8 A3                 2459 	inc	dptr
   05C9 ED                 2460 	mov	a,r5
   05CA F0                 2461 	movx	@dptr,a
   05CB EE                 2462 	mov	a,r6
   05CC 4F                 2463 	orl	a,r7
   05CD 70 E4              2464 	jnz	00101$
                    05CF   2465 	C$CommIF.c$593$1$72 ==.
                           2466 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:593: DELAY_1US();
   05CF 90s00r00           2467 	mov	dptr,#_wDelay
   05D2 74 FF              2468 	mov	a,#0xFF
   05D4 F0                 2469 	movx	@dptr,a
   05D5 A3                 2470 	inc	dptr
   05D6 74 01              2471 	mov	a,#0x01
   05D8 F0                 2472 	movx	@dptr,a
   05D9                    2473 00104$:
   05D9 90s00r00           2474 	mov	dptr,#_wDelay
   05DC E0                 2475 	movx	a,@dptr
   05DD FE                 2476 	mov	r6,a
   05DE A3                 2477 	inc	dptr
   05DF E0                 2478 	movx	a,@dptr
   05E0 FF                 2479 	mov	r7,a
   05E1 EE                 2480 	mov	a,r6
   05E2 24 FF              2481 	add	a,#0xFF
   05E4 FC                 2482 	mov	r4,a
   05E5 EF                 2483 	mov	a,r7
   05E6 34 FF              2484 	addc	a,#0xFF
   05E8 FD                 2485 	mov	r5,a
   05E9 90s00r00           2486 	mov	dptr,#_wDelay
   05EC EC                 2487 	mov	a,r4
   05ED F0                 2488 	movx	@dptr,a
   05EE A3                 2489 	inc	dptr
   05EF ED                 2490 	mov	a,r5
   05F0 F0                 2491 	movx	@dptr,a
   05F1 EE                 2492 	mov	a,r6
   05F2 4F                 2493 	orl	a,r7
   05F3 70 E4              2494 	jnz	00104$
                    05F5   2495 	C$CommIF.c$594$1$72 ==.
                           2496 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:594: DELAY_1US();
   05F5 90s00r00           2497 	mov	dptr,#_wDelay
   05F8 74 FF              2498 	mov	a,#0xFF
   05FA F0                 2499 	movx	@dptr,a
   05FB A3                 2500 	inc	dptr
   05FC 74 01              2501 	mov	a,#0x01
   05FE F0                 2502 	movx	@dptr,a
   05FF                    2503 00107$:
   05FF 90s00r00           2504 	mov	dptr,#_wDelay
   0602 E0                 2505 	movx	a,@dptr
   0603 FE                 2506 	mov	r6,a
   0604 A3                 2507 	inc	dptr
   0605 E0                 2508 	movx	a,@dptr
   0606 FF                 2509 	mov	r7,a
   0607 EE                 2510 	mov	a,r6
   0608 24 FF              2511 	add	a,#0xFF
   060A FC                 2512 	mov	r4,a
   060B EF                 2513 	mov	a,r7
   060C 34 FF              2514 	addc	a,#0xFF
   060E FD                 2515 	mov	r5,a
   060F 90s00r00           2516 	mov	dptr,#_wDelay
   0612 EC                 2517 	mov	a,r4
   0613 F0                 2518 	movx	@dptr,a
   0614 A3                 2519 	inc	dptr
   0615 ED                 2520 	mov	a,r5
   0616 F0                 2521 	movx	@dptr,a
   0617 EE                 2522 	mov	a,r6
   0618 4F                 2523 	orl	a,r7
   0619 70 E4              2524 	jnz	00107$
                    061B   2525 	C$CommIF.c$595$1$72 ==.
                           2526 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:595: DELAY_1US();
   061B 90s00r00           2527 	mov	dptr,#_wDelay
   061E 74 FF              2528 	mov	a,#0xFF
   0620 F0                 2529 	movx	@dptr,a
   0621 A3                 2530 	inc	dptr
   0622 74 01              2531 	mov	a,#0x01
   0624 F0                 2532 	movx	@dptr,a
   0625                    2533 00110$:
   0625 90s00r00           2534 	mov	dptr,#_wDelay
   0628 E0                 2535 	movx	a,@dptr
   0629 FE                 2536 	mov	r6,a
   062A A3                 2537 	inc	dptr
   062B E0                 2538 	movx	a,@dptr
   062C FF                 2539 	mov	r7,a
   062D EE                 2540 	mov	a,r6
   062E 24 FF              2541 	add	a,#0xFF
   0630 FC                 2542 	mov	r4,a
   0631 EF                 2543 	mov	a,r7
   0632 34 FF              2544 	addc	a,#0xFF
   0634 FD                 2545 	mov	r5,a
   0635 90s00r00           2546 	mov	dptr,#_wDelay
   0638 EC                 2547 	mov	a,r4
   0639 F0                 2548 	movx	@dptr,a
   063A A3                 2549 	inc	dptr
   063B ED                 2550 	mov	a,r5
   063C F0                 2551 	movx	@dptr,a
   063D EE                 2552 	mov	a,r6
   063E 4F                 2553 	orl	a,r7
   063F 70 E4              2554 	jnz	00110$
                    0641   2555 	C$CommIF.c$596$1$72 ==.
                           2556 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:596: DELAY_1US();
   0641 90s00r00           2557 	mov	dptr,#_wDelay
   0644 74 FF              2558 	mov	a,#0xFF
   0646 F0                 2559 	movx	@dptr,a
   0647 A3                 2560 	inc	dptr
   0648 74 01              2561 	mov	a,#0x01
   064A F0                 2562 	movx	@dptr,a
   064B                    2563 00113$:
   064B 90s00r00           2564 	mov	dptr,#_wDelay
   064E E0                 2565 	movx	a,@dptr
   064F FE                 2566 	mov	r6,a
   0650 A3                 2567 	inc	dptr
   0651 E0                 2568 	movx	a,@dptr
   0652 FF                 2569 	mov	r7,a
   0653 EE                 2570 	mov	a,r6
   0654 24 FF              2571 	add	a,#0xFF
   0656 FC                 2572 	mov	r4,a
   0657 EF                 2573 	mov	a,r7
   0658 34 FF              2574 	addc	a,#0xFF
   065A FD                 2575 	mov	r5,a
   065B 90s00r00           2576 	mov	dptr,#_wDelay
   065E EC                 2577 	mov	a,r4
   065F F0                 2578 	movx	@dptr,a
   0660 A3                 2579 	inc	dptr
   0661 ED                 2580 	mov	a,r5
   0662 F0                 2581 	movx	@dptr,a
   0663 EE                 2582 	mov	a,r6
   0664 4F                 2583 	orl	a,r7
   0665 70 E4              2584 	jnz	00113$
                    0667   2585 	C$CommIF.c$598$1$72 ==.
                           2586 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:598: lReadByte = Comm_IF_Spi1ReadByteBitbang();
   0667 12s02r17           2587 	lcall	_Comm_IF_Spi1ReadByteBitbang
   066A AF 82              2588 	mov	r7,dpl
                    066C   2589 	C$CommIF.c$599$1$72 ==.
                           2590 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:599: Comm_IF_SpiSetNsel(0u);
   066C 75 82 00           2591 	mov	dpl,#0x00
   066F C0 07              2592 	push	ar7
   0671 12s02rA7           2593 	lcall	_Comm_IF_SpiSetNsel
                    0674   2594 	C$CommIF.c$602$1$72 ==.
                           2595 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:602: Comm_IF_Spi1Enable();
   0674 12s01rF7           2596 	lcall	_Comm_IF_Spi1Enable
   0677 D0 07              2597 	pop	ar7
                    0679   2598 	C$CommIF.c$605$1$72 ==.
                           2599 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:605: EXIT_CRITICAL_SECTION;
   0679 D2 AF              2600 	setb	_EA
                    067B   2601 	C$CommIF.c$607$1$72 ==.
                           2602 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:607: return lReadByte;
   067B 8F 82              2603 	mov	dpl,r7
                    067D   2604 	C$CommIF.c$608$1$72 ==.
                    067D   2605 	XG$Comm_IF_Spi1DebugReadSFR$0$0 ==.
   067D 22                 2606 	ret
                           2607 ;------------------------------------------------------------
                           2608 ;Allocation info for local variables in function 'Comm_IF_Spi1DebugWrite'
                           2609 ;------------------------------------------------------------
                           2610 ;AddressMSB                Allocated with name '_Comm_IF_Spi1DebugWrite_PARM_2'
                           2611 ;AddressLSB                Allocated with name '_Comm_IF_Spi1DebugWrite_PARM_3'
                           2612 ;Value                     Allocated with name '_Comm_IF_Spi1DebugWrite_PARM_4'
                           2613 ;DebugCommand              Allocated with name '_Comm_IF_Spi1DebugWrite_DebugCommand_1_73'
                           2614 ;------------------------------------------------------------
                    067E   2615 	G$Comm_IF_Spi1DebugWrite$0$0 ==.
                    067E   2616 	C$CommIF.c$624$1$72 ==.
                           2617 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:624: void Comm_IF_Spi1DebugWrite(U8 DebugCommand, U8 AddressMSB, U8 AddressLSB, U8 Value)
                           2618 ;	-----------------------------------------
                           2619 ;	 function Comm_IF_Spi1DebugWrite
                           2620 ;	-----------------------------------------
   067E                    2621 _Comm_IF_Spi1DebugWrite:
   067E E5 82              2622 	mov	a,dpl
   0680 90s00rA5           2623 	mov	dptr,#_Comm_IF_Spi1DebugWrite_DebugCommand_1_73
   0683 F0                 2624 	movx	@dptr,a
                    0684   2625 	C$CommIF.c$627$1$74 ==.
                           2626 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:627: ENTER_CRITICAL_SECTION;
   0684 C2 AF              2627 	clr	_EA
                    0686   2628 	C$CommIF.c$630$1$74 ==.
                           2629 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:630: Comm_IF_Spi1Disable();
   0686 12s02r05           2630 	lcall	_Comm_IF_Spi1Disable
                    0689   2631 	C$CommIF.c$633$1$74 ==.
                           2632 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:633: Comm_IF_SpiClearNsel(0u);
   0689 75 82 00           2633 	mov	dpl,#0x00
   068C 12s02r8E           2634 	lcall	_Comm_IF_SpiClearNsel
                    068F   2635 	C$CommIF.c$634$1$74 ==.
                           2636 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:634: Comm_IF_Spi1WriteBitsBitbang(DebugCommand, 8u);
   068F 90s00rA5           2637 	mov	dptr,#_Comm_IF_Spi1DebugWrite_DebugCommand_1_73
   0692 E0                 2638 	movx	a,@dptr
   0693 FF                 2639 	mov	r7,a
   0694 90s00r98           2640 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   0697 74 08              2641 	mov	a,#0x08
   0699 F0                 2642 	movx	@dptr,a
   069A 8F 82              2643 	mov	dpl,r7
   069C C0 07              2644 	push	ar7
   069E 12s02r50           2645 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    06A1   2646 	C$CommIF.c$635$1$74 ==.
                           2647 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:635: Comm_IF_Spi1WriteBitsBitbang(0x05, 4u);
   06A1 90s00r98           2648 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   06A4 74 04              2649 	mov	a,#0x04
   06A6 F0                 2650 	movx	@dptr,a
   06A7 75 82 05           2651 	mov	dpl,#0x05
   06AA 12s02r50           2652 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    06AD   2653 	C$CommIF.c$636$1$74 ==.
                           2654 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:636: Comm_IF_Spi1WriteBitsBitbang(AddressLSB, 8u);
   06AD 90s00rA3           2655 	mov	dptr,#_Comm_IF_Spi1DebugWrite_PARM_3
   06B0 E0                 2656 	movx	a,@dptr
   06B1 FE                 2657 	mov	r6,a
   06B2 90s00r98           2658 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   06B5 74 08              2659 	mov	a,#0x08
   06B7 F0                 2660 	movx	@dptr,a
   06B8 8E 82              2661 	mov	dpl,r6
   06BA 12s02r50           2662 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    06BD   2663 	C$CommIF.c$637$1$74 ==.
                           2664 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:637: Comm_IF_Spi1WriteBitsBitbang(0x03, 2u);
   06BD 90s00r98           2665 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   06C0 74 02              2666 	mov	a,#0x02
   06C2 F0                 2667 	movx	@dptr,a
   06C3 75 82 03           2668 	mov	dpl,#0x03
   06C6 12s02r50           2669 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    06C9   2670 	C$CommIF.c$638$1$74 ==.
                           2671 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:638: Comm_IF_SpiSetNsel(0u);
   06C9 75 82 00           2672 	mov	dpl,#0x00
   06CC 12s02rA7           2673 	lcall	_Comm_IF_SpiSetNsel
                    06CF   2674 	C$CommIF.c$641$1$74 ==.
                           2675 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:641: Comm_IF_SpiClearNsel(0u);
   06CF 75 82 00           2676 	mov	dpl,#0x00
   06D2 12s02r8E           2677 	lcall	_Comm_IF_SpiClearNsel
   06D5 D0 07              2678 	pop	ar7
                    06D7   2679 	C$CommIF.c$642$1$74 ==.
                           2680 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:642: Comm_IF_Spi1WriteBitsBitbang(DebugCommand, 8u);
   06D7 90s00r98           2681 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   06DA 74 08              2682 	mov	a,#0x08
   06DC F0                 2683 	movx	@dptr,a
   06DD 8F 82              2684 	mov	dpl,r7
   06DF C0 07              2685 	push	ar7
   06E1 12s02r50           2686 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    06E4   2687 	C$CommIF.c$643$1$74 ==.
                           2688 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:643: Comm_IF_Spi1WriteBitsBitbang(0x06, 4u);
   06E4 90s00r98           2689 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   06E7 74 04              2690 	mov	a,#0x04
   06E9 F0                 2691 	movx	@dptr,a
   06EA 75 82 06           2692 	mov	dpl,#0x06
   06ED 12s02r50           2693 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    06F0   2694 	C$CommIF.c$644$1$74 ==.
                           2695 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:644: Comm_IF_Spi1WriteBitsBitbang(AddressMSB, 8u);
   06F0 90s00rA2           2696 	mov	dptr,#_Comm_IF_Spi1DebugWrite_PARM_2
   06F3 E0                 2697 	movx	a,@dptr
   06F4 FE                 2698 	mov	r6,a
   06F5 90s00r98           2699 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   06F8 74 08              2700 	mov	a,#0x08
   06FA F0                 2701 	movx	@dptr,a
   06FB 8E 82              2702 	mov	dpl,r6
   06FD 12s02r50           2703 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    0700   2704 	C$CommIF.c$645$1$74 ==.
                           2705 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:645: Comm_IF_Spi1WriteBitsBitbang(0x03, 2u);
   0700 90s00r98           2706 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   0703 74 02              2707 	mov	a,#0x02
   0705 F0                 2708 	movx	@dptr,a
   0706 75 82 03           2709 	mov	dpl,#0x03
   0709 12s02r50           2710 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    070C   2711 	C$CommIF.c$646$1$74 ==.
                           2712 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:646: Comm_IF_SpiSetNsel(0u);
   070C 75 82 00           2713 	mov	dpl,#0x00
   070F 12s02rA7           2714 	lcall	_Comm_IF_SpiSetNsel
                    0712   2715 	C$CommIF.c$649$1$74 ==.
                           2716 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:649: Comm_IF_SpiClearNsel(0u);
   0712 75 82 00           2717 	mov	dpl,#0x00
   0715 12s02r8E           2718 	lcall	_Comm_IF_SpiClearNsel
   0718 D0 07              2719 	pop	ar7
                    071A   2720 	C$CommIF.c$650$1$74 ==.
                           2721 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:650: Comm_IF_Spi1WriteBitsBitbang(DebugCommand, 8u);
   071A 90s00r98           2722 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   071D 74 08              2723 	mov	a,#0x08
   071F F0                 2724 	movx	@dptr,a
   0720 8F 82              2725 	mov	dpl,r7
   0722 12s02r50           2726 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    0725   2727 	C$CommIF.c$651$1$74 ==.
                           2728 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:651: Comm_IF_Spi1WriteBitsBitbang(0x08, 4u);
   0725 90s00r98           2729 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   0728 74 04              2730 	mov	a,#0x04
   072A F0                 2731 	movx	@dptr,a
   072B 75 82 08           2732 	mov	dpl,#0x08
   072E 12s02r50           2733 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    0731   2734 	C$CommIF.c$652$1$74 ==.
                           2735 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:652: Comm_IF_Spi1WriteBitsBitbang(Value, 8u);
   0731 90s00rA4           2736 	mov	dptr,#_Comm_IF_Spi1DebugWrite_PARM_4
   0734 E0                 2737 	movx	a,@dptr
   0735 FF                 2738 	mov	r7,a
   0736 90s00r98           2739 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   0739 74 08              2740 	mov	a,#0x08
   073B F0                 2741 	movx	@dptr,a
   073C 8F 82              2742 	mov	dpl,r7
   073E 12s02r50           2743 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    0741   2744 	C$CommIF.c$653$1$74 ==.
                           2745 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:653: Comm_IF_Spi1WriteBitsBitbang(0x03, 2u);
   0741 90s00r98           2746 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   0744 74 02              2747 	mov	a,#0x02
   0746 F0                 2748 	movx	@dptr,a
   0747 75 82 03           2749 	mov	dpl,#0x03
   074A 12s02r50           2750 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    074D   2751 	C$CommIF.c$654$1$74 ==.
                           2752 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:654: Comm_IF_SpiSetNsel(0u);
   074D 75 82 00           2753 	mov	dpl,#0x00
   0750 12s02rA7           2754 	lcall	_Comm_IF_SpiSetNsel
                    0753   2755 	C$CommIF.c$657$1$74 ==.
                           2756 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:657: Comm_IF_Spi1Enable();
   0753 12s01rF7           2757 	lcall	_Comm_IF_Spi1Enable
                    0756   2758 	C$CommIF.c$660$1$74 ==.
                           2759 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:660: EXIT_CRITICAL_SECTION;
   0756 D2 AF              2760 	setb	_EA
                    0758   2761 	C$CommIF.c$661$1$74 ==.
                    0758   2762 	XG$Comm_IF_Spi1DebugWrite$0$0 ==.
   0758 22                 2763 	ret
                           2764 ;------------------------------------------------------------
                           2765 ;Allocation info for local variables in function 'Comm_IF_Spi1DebugWriteSFR'
                           2766 ;------------------------------------------------------------
                           2767 ;AddressMSB                Allocated with name '_Comm_IF_Spi1DebugWriteSFR_PARM_2'
                           2768 ;AddressLSB                Allocated with name '_Comm_IF_Spi1DebugWriteSFR_PARM_3'
                           2769 ;Value                     Allocated with name '_Comm_IF_Spi1DebugWriteSFR_PARM_4'
                           2770 ;DebugCommand              Allocated with name '_Comm_IF_Spi1DebugWriteSFR_DebugCommand_1_75'
                           2771 ;------------------------------------------------------------
                    0759   2772 	G$Comm_IF_Spi1DebugWriteSFR$0$0 ==.
                    0759   2773 	C$CommIF.c$675$1$74 ==.
                           2774 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:675: void Comm_IF_Spi1DebugWriteSFR(U8 DebugCommand, U8 AddressMSB, U8 AddressLSB, U8 Value)
                           2775 ;	-----------------------------------------
                           2776 ;	 function Comm_IF_Spi1DebugWriteSFR
                           2777 ;	-----------------------------------------
   0759                    2778 _Comm_IF_Spi1DebugWriteSFR:
   0759 E5 82              2779 	mov	a,dpl
   075B 90s00rA9           2780 	mov	dptr,#_Comm_IF_Spi1DebugWriteSFR_DebugCommand_1_75
   075E F0                 2781 	movx	@dptr,a
                    075F   2782 	C$CommIF.c$678$1$76 ==.
                           2783 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:678: ENTER_CRITICAL_SECTION;
   075F C2 AF              2784 	clr	_EA
                    0761   2785 	C$CommIF.c$681$1$76 ==.
                           2786 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:681: Comm_IF_Spi1Disable();
   0761 12s02r05           2787 	lcall	_Comm_IF_Spi1Disable
                    0764   2788 	C$CommIF.c$684$1$76 ==.
                           2789 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:684: Comm_IF_SpiClearNsel(0u);
   0764 75 82 00           2790 	mov	dpl,#0x00
   0767 12s02r8E           2791 	lcall	_Comm_IF_SpiClearNsel
                    076A   2792 	C$CommIF.c$685$1$76 ==.
                           2793 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:685: Comm_IF_Spi1WriteBitsBitbang(DebugCommand, 8u);
   076A 90s00rA9           2794 	mov	dptr,#_Comm_IF_Spi1DebugWriteSFR_DebugCommand_1_75
   076D E0                 2795 	movx	a,@dptr
   076E FF                 2796 	mov	r7,a
   076F 90s00r98           2797 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   0772 74 08              2798 	mov	a,#0x08
   0774 F0                 2799 	movx	@dptr,a
   0775 8F 82              2800 	mov	dpl,r7
   0777 C0 07              2801 	push	ar7
   0779 12s02r50           2802 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    077C   2803 	C$CommIF.c$686$1$76 ==.
                           2804 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:686: Comm_IF_Spi1WriteBitsBitbang(0x05, 4u);
   077C 90s00r98           2805 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   077F 74 04              2806 	mov	a,#0x04
   0781 F0                 2807 	movx	@dptr,a
   0782 75 82 05           2808 	mov	dpl,#0x05
   0785 12s02r50           2809 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    0788   2810 	C$CommIF.c$687$1$76 ==.
                           2811 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:687: Comm_IF_Spi1WriteBitsBitbang(AddressLSB, 8u);
   0788 90s00rA7           2812 	mov	dptr,#_Comm_IF_Spi1DebugWriteSFR_PARM_3
   078B E0                 2813 	movx	a,@dptr
   078C FE                 2814 	mov	r6,a
   078D 90s00r98           2815 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   0790 74 08              2816 	mov	a,#0x08
   0792 F0                 2817 	movx	@dptr,a
   0793 8E 82              2818 	mov	dpl,r6
   0795 12s02r50           2819 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    0798   2820 	C$CommIF.c$688$1$76 ==.
                           2821 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:688: Comm_IF_Spi1WriteBitsBitbang(0x03, 2u);
   0798 90s00r98           2822 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   079B 74 02              2823 	mov	a,#0x02
   079D F0                 2824 	movx	@dptr,a
   079E 75 82 03           2825 	mov	dpl,#0x03
   07A1 12s02r50           2826 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    07A4   2827 	C$CommIF.c$689$1$76 ==.
                           2828 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:689: Comm_IF_SpiSetNsel(0u);
   07A4 75 82 00           2829 	mov	dpl,#0x00
   07A7 12s02rA7           2830 	lcall	_Comm_IF_SpiSetNsel
                    07AA   2831 	C$CommIF.c$692$1$76 ==.
                           2832 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:692: Comm_IF_SpiClearNsel(0u);
   07AA 75 82 00           2833 	mov	dpl,#0x00
   07AD 12s02r8E           2834 	lcall	_Comm_IF_SpiClearNsel
   07B0 D0 07              2835 	pop	ar7
                    07B2   2836 	C$CommIF.c$693$1$76 ==.
                           2837 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:693: Comm_IF_Spi1WriteBitsBitbang(DebugCommand, 8u);
   07B2 90s00r98           2838 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   07B5 74 08              2839 	mov	a,#0x08
   07B7 F0                 2840 	movx	@dptr,a
   07B8 8F 82              2841 	mov	dpl,r7
   07BA C0 07              2842 	push	ar7
   07BC 12s02r50           2843 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    07BF   2844 	C$CommIF.c$694$1$76 ==.
                           2845 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:694: Comm_IF_Spi1WriteBitsBitbang(0x06, 4u);
   07BF 90s00r98           2846 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   07C2 74 04              2847 	mov	a,#0x04
   07C4 F0                 2848 	movx	@dptr,a
   07C5 75 82 06           2849 	mov	dpl,#0x06
   07C8 12s02r50           2850 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    07CB   2851 	C$CommIF.c$695$1$76 ==.
                           2852 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:695: Comm_IF_Spi1WriteBitsBitbang(AddressMSB, 8u);
   07CB 90s00rA6           2853 	mov	dptr,#_Comm_IF_Spi1DebugWriteSFR_PARM_2
   07CE E0                 2854 	movx	a,@dptr
   07CF FE                 2855 	mov	r6,a
   07D0 90s00r98           2856 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   07D3 74 08              2857 	mov	a,#0x08
   07D5 F0                 2858 	movx	@dptr,a
   07D6 8E 82              2859 	mov	dpl,r6
   07D8 12s02r50           2860 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    07DB   2861 	C$CommIF.c$696$1$76 ==.
                           2862 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:696: Comm_IF_Spi1WriteBitsBitbang(0x03, 2u);
   07DB 90s00r98           2863 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   07DE 74 02              2864 	mov	a,#0x02
   07E0 F0                 2865 	movx	@dptr,a
   07E1 75 82 03           2866 	mov	dpl,#0x03
   07E4 12s02r50           2867 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    07E7   2868 	C$CommIF.c$697$1$76 ==.
                           2869 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:697: Comm_IF_SpiSetNsel(0u);
   07E7 75 82 00           2870 	mov	dpl,#0x00
   07EA 12s02rA7           2871 	lcall	_Comm_IF_SpiSetNsel
                    07ED   2872 	C$CommIF.c$700$1$76 ==.
                           2873 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:700: Comm_IF_SpiClearNsel(0u);
   07ED 75 82 00           2874 	mov	dpl,#0x00
   07F0 12s02r8E           2875 	lcall	_Comm_IF_SpiClearNsel
   07F3 D0 07              2876 	pop	ar7
                    07F5   2877 	C$CommIF.c$701$1$76 ==.
                           2878 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:701: Comm_IF_Spi1WriteBitsBitbang(DebugCommand, 8u);
   07F5 90s00r98           2879 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   07F8 74 08              2880 	mov	a,#0x08
   07FA F0                 2881 	movx	@dptr,a
   07FB 8F 82              2882 	mov	dpl,r7
   07FD 12s02r50           2883 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    0800   2884 	C$CommIF.c$702$1$76 ==.
                           2885 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:702: Comm_IF_Spi1WriteBitsBitbang(0x0A, 4u);
   0800 90s00r98           2886 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   0803 74 04              2887 	mov	a,#0x04
   0805 F0                 2888 	movx	@dptr,a
   0806 75 82 0A           2889 	mov	dpl,#0x0A
   0809 12s02r50           2890 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    080C   2891 	C$CommIF.c$703$1$76 ==.
                           2892 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:703: Comm_IF_Spi1WriteBitsBitbang(Value, 8u);
   080C 90s00rA8           2893 	mov	dptr,#_Comm_IF_Spi1DebugWriteSFR_PARM_4
   080F E0                 2894 	movx	a,@dptr
   0810 FF                 2895 	mov	r7,a
   0811 90s00r98           2896 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   0814 74 08              2897 	mov	a,#0x08
   0816 F0                 2898 	movx	@dptr,a
   0817 8F 82              2899 	mov	dpl,r7
   0819 12s02r50           2900 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    081C   2901 	C$CommIF.c$704$1$76 ==.
                           2902 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:704: Comm_IF_Spi1WriteBitsBitbang(0x03, 2u);
   081C 90s00r98           2903 	mov	dptr,#_Comm_IF_Spi1WriteBitsBitbang_PARM_2
   081F 74 02              2904 	mov	a,#0x02
   0821 F0                 2905 	movx	@dptr,a
   0822 75 82 03           2906 	mov	dpl,#0x03
   0825 12s02r50           2907 	lcall	_Comm_IF_Spi1WriteBitsBitbang
                    0828   2908 	C$CommIF.c$705$1$76 ==.
                           2909 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:705: Comm_IF_SpiSetNsel(0u);
   0828 75 82 00           2910 	mov	dpl,#0x00
   082B 12s02rA7           2911 	lcall	_Comm_IF_SpiSetNsel
                    082E   2912 	C$CommIF.c$708$1$76 ==.
                           2913 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:708: Comm_IF_Spi1Enable();
   082E 12s01rF7           2914 	lcall	_Comm_IF_Spi1Enable
                    0831   2915 	C$CommIF.c$711$1$76 ==.
                           2916 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:711: EXIT_CRITICAL_SECTION;
   0831 D2 AF              2917 	setb	_EA
                    0833   2918 	C$CommIF.c$712$1$76 ==.
                    0833   2919 	XG$Comm_IF_Spi1DebugWriteSFR$0$0 ==.
   0833 22                 2920 	ret
                           2921 ;------------------------------------------------------------
                           2922 ;Allocation info for local variables in function 'Comm_IF_InitSMBusInterface'
                           2923 ;------------------------------------------------------------
                    0834   2924 	G$Comm_IF_InitSMBusInterface$0$0 ==.
                    0834   2925 	C$CommIF.c$722$1$76 ==.
                           2926 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:722: void Comm_IF_InitSMBusInterface()
                           2927 ;	-----------------------------------------
                           2928 ;	 function Comm_IF_InitSMBusInterface
                           2929 ;	-----------------------------------------
   0834                    2930 _Comm_IF_InitSMBusInterface:
                    0834   2931 	C$CommIF.c$724$1$77 ==.
                           2932 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:724: fSMBusTransaction = TRUE;
   0834 75*03 01           2933 	mov	_fSMBusTransaction,#0x01
                    0837   2934 	C$CommIF.c$728$1$77 ==.
                           2935 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:728: SMB0CF = 0x41;
   0837 75 C1 41           2936 	mov	_SMB0CF,#0x41
                    083A   2937 	C$CommIF.c$731$1$77 ==.
                           2938 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:731: SMB0ADM |= 0x01;
   083A 43 F5 01           2939 	orl	_SMB0ADM,#0x01
                    083D   2940 	C$CommIF.c$734$1$77 ==.
                           2941 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:734: XBR0    |= 0x04;
   083D 43 E1 04           2942 	orl	_XBR0,#0x04
                    0840   2943 	C$CommIF.c$750$1$77 ==.
                           2944 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:750: EIE1 &= 0xFE;                            /* Disable SMBus interrupt */
   0840 53 E6 FE           2945 	anl	_EIE1,#0xFE
                    0843   2946 	C$CommIF.c$753$1$77 ==.
                           2947 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:753: STA = FALSE;
   0843 C2 C5              2948 	clr	_STA
                    0845   2949 	C$CommIF.c$754$1$77 ==.
                           2950 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:754: STO = FALSE;
   0845 C2 C4              2951 	clr	_STO
                    0847   2952 	C$CommIF.c$755$1$77 ==.
                           2953 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:755: ACK = FALSE;
   0847 C2 C1              2954 	clr	_ACK
                    0849   2955 	C$CommIF.c$757$1$77 ==.
                           2956 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:757: SI = FALSE;
   0849 C2 C0              2957 	clr	_SI
                    084B   2958 	C$CommIF.c$759$1$77 ==.
                           2959 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:759: SMB0CF |= 0x80;
   084B 43 C1 80           2960 	orl	_SMB0CF,#0x80
                    084E   2961 	C$CommIF.c$761$1$77 ==.
                    084E   2962 	XG$Comm_IF_InitSMBusInterface$0$0 ==.
   084E 22                 2963 	ret
                           2964 ;------------------------------------------------------------
                           2965 ;Allocation info for local variables in function 'Comm_IF_DisableSMBusInterface'
                           2966 ;------------------------------------------------------------
                    084F   2967 	G$Comm_IF_DisableSMBusInterface$0$0 ==.
                    084F   2968 	C$CommIF.c$771$1$77 ==.
                           2969 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:771: void Comm_IF_DisableSMBusInterface()
                           2970 ;	-----------------------------------------
                           2971 ;	 function Comm_IF_DisableSMBusInterface
                           2972 ;	-----------------------------------------
   084F                    2973 _Comm_IF_DisableSMBusInterface:
                    084F   2974 	C$CommIF.c$774$1$78 ==.
                           2975 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:774: STA = FALSE;
   084F C2 C5              2976 	clr	_STA
                    0851   2977 	C$CommIF.c$775$1$78 ==.
                           2978 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:775: STO = FALSE;
   0851 C2 C4              2979 	clr	_STO
                    0853   2980 	C$CommIF.c$776$1$78 ==.
                           2981 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:776: ACK = FALSE;
   0853 C2 C1              2982 	clr	_ACK
                    0855   2983 	C$CommIF.c$777$1$78 ==.
                           2984 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:777: SMB0CF &= 0x7F;
   0855 53 C1 7F           2985 	anl	_SMB0CF,#0x7F
                    0858   2986 	C$CommIF.c$780$1$78 ==.
                           2987 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:780: SI = FALSE;
   0858 C2 C0              2988 	clr	_SI
                    085A   2989 	C$CommIF.c$783$1$78 ==.
                           2990 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:783: XBR0 &= ~(0x04);
   085A AF E1              2991 	mov	r7,_XBR0
   085C 74 FB              2992 	mov	a,#0xFB
   085E 5F                 2993 	anl	a,r7
   085F F5 E1              2994 	mov	_XBR0,a
                    0861   2995 	C$CommIF.c$786$1$78 ==.
                           2996 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:786: fSMBusTransaction = FALSE;
   0861 75*03 00           2997 	mov	_fSMBusTransaction,#0x00
                    0864   2998 	C$CommIF.c$787$1$78 ==.
                    0864   2999 	XG$Comm_IF_DisableSMBusInterface$0$0 ==.
   0864 22                 3000 	ret
                           3001 ;------------------------------------------------------------
                           3002 ;Allocation info for local variables in function 'Comm_IF_SMBusStart'
                           3003 ;------------------------------------------------------------
                    0865   3004 	G$Comm_IF_SMBusStart$0$0 ==.
                    0865   3005 	C$CommIF.c$795$1$78 ==.
                           3006 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:795: void Comm_IF_SMBusStart()
                           3007 ;	-----------------------------------------
                           3008 ;	 function Comm_IF_SMBusStart
                           3009 ;	-----------------------------------------
   0865                    3010 _Comm_IF_SMBusStart:
                    0865   3011 	C$CommIF.c$798$1$79 ==.
                           3012 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:798: STA = TRUE;
   0865 D2 C5              3013 	setb	_STA
                    0867   3014 	C$CommIF.c$801$1$79 ==.
                           3015 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:801: while (SI == FALSE);
   0867                    3016 00101$:
                    0867   3017 	C$CommIF.c$804$1$79 ==.
                           3018 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:804: SI = FALSE;
   0867 10 C0 02           3019 	jbc	_SI,00110$
   086A 80 FB              3020 	sjmp	00101$
   086C                    3021 00110$:
                    086C   3022 	C$CommIF.c$805$1$79 ==.
                    086C   3023 	XG$Comm_IF_SMBusStart$0$0 ==.
   086C 22                 3024 	ret
                           3025 ;------------------------------------------------------------
                           3026 ;Allocation info for local variables in function 'Comm_IF_SMBusWriteByte'
                           3027 ;------------------------------------------------------------
                           3028 ;Data                      Allocated with name '_Comm_IF_SMBusWriteByte_Data_1_80'
                           3029 ;------------------------------------------------------------
                    086D   3030 	G$Comm_IF_SMBusWriteByte$0$0 ==.
                    086D   3031 	C$CommIF.c$820$1$79 ==.
                           3032 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:820: eSMBusReturnStates Comm_IF_SMBusWriteByte(U8 Data)
                           3033 ;	-----------------------------------------
                           3034 ;	 function Comm_IF_SMBusWriteByte
                           3035 ;	-----------------------------------------
   086D                    3036 _Comm_IF_SMBusWriteByte:
   086D E5 82              3037 	mov	a,dpl
   086F 90s00rAA           3038 	mov	dptr,#_Comm_IF_SMBusWriteByte_Data_1_80
   0872 F0                 3039 	movx	@dptr,a
                    0873   3040 	C$CommIF.c$822$1$81 ==.
                           3041 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:822: if (TRUE == ARBLOST)
   0873 A2 C2              3042 	mov	c,_ARBLOST
   0875 E4                 3043 	clr	a
   0876 33                 3044 	rlc	a
   0877 FF                 3045 	mov	r7,a
   0878 BF 01 07           3046 	cjne	r7,#0x01,00116$
                    087B   3047 	C$CommIF.c$825$2$82 ==.
                           3048 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:825: ARBLOST = FALSE;
   087B C2 C2              3049 	clr	_ARBLOST
                    087D   3050 	C$CommIF.c$827$2$82 ==.
                           3051 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:827: return SMBUS_ARBITRATION_LOST;
   087D 75 82 02           3052 	mov	dpl,#0x02
   0880 80 53              3053 	sjmp	00118$
   0882                    3054 00116$:
                    0882   3055 	C$CommIF.c$832$2$83 ==.
                           3056 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:832: if ((SMB0CN & 0xF0) == 0xE0)
   0882 74 F0              3057 	mov	a,#0xF0
   0884 55 C0              3058 	anl	a,_SMB0CN
   0886 FF                 3059 	mov	r7,a
   0887 BF E0 21           3060 	cjne	r7,#0xE0,00107$
                    088A   3061 	C$CommIF.c$835$3$84 ==.
                           3062 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:835: SMB0DAT = Data;
   088A 90s00rAA           3063 	mov	dptr,#_Comm_IF_SMBusWriteByte_Data_1_80
   088D E0                 3064 	movx	a,@dptr
   088E F5 C2              3065 	mov	_SMB0DAT,a
                    0890   3066 	C$CommIF.c$837$3$84 ==.
                           3067 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:837: STA = FALSE;
   0890 C2 C5              3068 	clr	_STA
                    0892   3069 	C$CommIF.c$838$3$84 ==.
                           3070 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:838: SI = FALSE;
   0892 C2 C0              3071 	clr	_SI
                    0894   3072 	C$CommIF.c$841$3$84 ==.
                           3073 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:841: while (SI == FALSE);
   0894                    3074 00101$:
                    0894   3075 	C$CommIF.c$844$3$84 ==.
                           3076 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:844: SI = FALSE;
   0894 10 C0 02           3077 	jbc	_SI,00142$
   0897 80 FB              3078 	sjmp	00101$
   0899                    3079 00142$:
                    0899   3080 	C$CommIF.c$847$3$84 ==.
                           3081 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:847: if (TRUE == ACK)
   0899 A2 C1              3082 	mov	c,_ACK
   089B E4                 3083 	clr	a
   089C 33                 3084 	rlc	a
   089D FF                 3085 	mov	r7,a
   089E BF 01 05           3086 	cjne	r7,#0x01,00105$
                    08A1   3087 	C$CommIF.c$849$4$85 ==.
                           3088 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:849: return SMBUS_ACK_RECEIVED;
   08A1 75 82 07           3089 	mov	dpl,#0x07
   08A4 80 2F              3090 	sjmp	00118$
   08A6                    3091 00105$:
                    08A6   3092 	C$CommIF.c$852$3$84 ==.
                           3093 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:852: return SMBUS_NACK_RECEIVED;
   08A6 75 82 06           3094 	mov	dpl,#0x06
   08A9 80 2A              3095 	sjmp	00118$
   08AB                    3096 00107$:
                    08AB   3097 	C$CommIF.c$856$2$83 ==.
                           3098 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:856: if ((SMB0CN & 0xF0) == 0xC0)
   08AB 74 F0              3099 	mov	a,#0xF0
   08AD 55 C0              3100 	anl	a,_SMB0CN
   08AF FF                 3101 	mov	r7,a
   08B0 BF C0 1F           3102 	cjne	r7,#0xC0,00114$
                    08B3   3103 	C$CommIF.c$859$3$86 ==.
                           3104 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:859: SMB0DAT = Data;
   08B3 90s00rAA           3105 	mov	dptr,#_Comm_IF_SMBusWriteByte_Data_1_80
   08B6 E0                 3106 	movx	a,@dptr
   08B7 F5 C2              3107 	mov	_SMB0DAT,a
                    08B9   3108 	C$CommIF.c$861$3$86 ==.
                           3109 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:861: SI = FALSE;
   08B9 C2 C0              3110 	clr	_SI
                    08BB   3111 	C$CommIF.c$863$3$86 ==.
                           3112 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:863: while (SI == FALSE);
   08BB                    3113 00108$:
                    08BB   3114 	C$CommIF.c$865$3$86 ==.
                           3115 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:865: SI = FALSE;
   08BB 10 C0 02           3116 	jbc	_SI,00147$
   08BE 80 FB              3117 	sjmp	00108$
   08C0                    3118 00147$:
                    08C0   3119 	C$CommIF.c$868$3$86 ==.
                           3120 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:868: if (TRUE == ACK)
   08C0 A2 C1              3121 	mov	c,_ACK
   08C2 E4                 3122 	clr	a
   08C3 33                 3123 	rlc	a
   08C4 FF                 3124 	mov	r7,a
   08C5 BF 01 05           3125 	cjne	r7,#0x01,00112$
                    08C8   3126 	C$CommIF.c$870$4$87 ==.
                           3127 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:870: return SMBUS_ACK_RECEIVED;
   08C8 75 82 07           3128 	mov	dpl,#0x07
   08CB 80 08              3129 	sjmp	00118$
   08CD                    3130 00112$:
                    08CD   3131 	C$CommIF.c$873$3$86 ==.
                           3132 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:873: return SMBUS_NACK_RECEIVED;
   08CD 75 82 06           3133 	mov	dpl,#0x06
   08D0 80 03              3134 	sjmp	00118$
   08D2                    3135 00114$:
                    08D2   3136 	C$CommIF.c$877$2$83 ==.
                           3137 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:877: return SMBUS_GENERAL_ERROR;
   08D2 75 82 08           3138 	mov	dpl,#0x08
   08D5                    3139 00118$:
                    08D5   3140 	C$CommIF.c$879$1$81 ==.
                    08D5   3141 	XG$Comm_IF_SMBusWriteByte$0$0 ==.
   08D5 22                 3142 	ret
                           3143 ;------------------------------------------------------------
                           3144 ;Allocation info for local variables in function 'Comm_IF_SMBusReadByte'
                           3145 ;------------------------------------------------------------
                           3146 ;AckReq                    Allocated with name '_Comm_IF_SMBusReadByte_AckReq_1_88'
                           3147 ;lTmp                      Allocated with name '_Comm_IF_SMBusReadByte_lTmp_1_89'
                           3148 ;------------------------------------------------------------
                    08D6   3149 	G$Comm_IF_SMBusReadByte$0$0 ==.
                    08D6   3150 	C$CommIF.c$892$1$81 ==.
                           3151 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:892: U8 Comm_IF_SMBusReadByte(U8 AckReq)
                           3152 ;	-----------------------------------------
                           3153 ;	 function Comm_IF_SMBusReadByte
                           3154 ;	-----------------------------------------
   08D6                    3155 _Comm_IF_SMBusReadByte:
   08D6 E5 82              3156 	mov	a,dpl
   08D8 90s00rAB           3157 	mov	dptr,#_Comm_IF_SMBusReadByte_AckReq_1_88
   08DB F0                 3158 	movx	@dptr,a
                    08DC   3159 	C$CommIF.c$897$1$89 ==.
                           3160 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:897: SI = FALSE;
   08DC C2 C0              3161 	clr	_SI
                    08DE   3162 	C$CommIF.c$900$1$89 ==.
                           3163 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:900: ACK = AckReq;
   08DE 90s00rAB           3164 	mov	dptr,#_Comm_IF_SMBusReadByte_AckReq_1_88
   08E1 E0                 3165 	movx	a,@dptr
   08E2 FF                 3166 	mov	r7,a
   08E3 24 FF              3167 	add	a,#0xff
   08E5 92 C1              3168 	mov	_ACK,c
                    08E7   3169 	C$CommIF.c$903$1$89 ==.
                           3170 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:903: while (SI == FALSE) ;
   08E7                    3171 00101$:
   08E7 30 C0 FD           3172 	jnb	_SI,00101$
                    08EA   3173 	C$CommIF.c$906$1$89 ==.
                           3174 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:906: lTmp = SMB0DAT;
   08EA 90s00rAC           3175 	mov	dptr,#_Comm_IF_SMBusReadByte_lTmp_1_89
   08ED E5 C2              3176 	mov	a,_SMB0DAT
   08EF F0                 3177 	movx	@dptr,a
                    08F0   3178 	C$CommIF.c$909$1$89 ==.
                           3179 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:909: SI = FALSE;
   08F0 C2 C0              3180 	clr	_SI
                    08F2   3181 	C$CommIF.c$912$1$89 ==.
                           3182 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:912: if (AckReq == FALSE)
   08F2 EF                 3183 	mov	a,r7
   08F3 70 02              3184 	jnz	00105$
                    08F5   3185 	C$CommIF.c$915$2$90 ==.
                           3186 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:915: STO = TRUE;
   08F5 D2 C4              3187 	setb	_STO
   08F7                    3188 00105$:
                    08F7   3189 	C$CommIF.c$918$1$89 ==.
                           3190 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:918: return lTmp;
   08F7 90s00rAC           3191 	mov	dptr,#_Comm_IF_SMBusReadByte_lTmp_1_89
   08FA E0                 3192 	movx	a,@dptr
                    08FB   3193 	C$CommIF.c$919$1$89 ==.
                    08FB   3194 	XG$Comm_IF_SMBusReadByte$0$0 ==.
   08FB F5 82              3195 	mov	dpl,a
   08FD 22                 3196 	ret
                           3197 ;------------------------------------------------------------
                           3198 ;Allocation info for local variables in function 'Comm_IF_SMBusStop'
                           3199 ;------------------------------------------------------------
                    08FE   3200 	G$Comm_IF_SMBusStop$0$0 ==.
                    08FE   3201 	C$CommIF.c$927$1$89 ==.
                           3202 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:927: void Comm_IF_SMBusStop(void)
                           3203 ;	-----------------------------------------
                           3204 ;	 function Comm_IF_SMBusStop
                           3205 ;	-----------------------------------------
   08FE                    3206 _Comm_IF_SMBusStop:
                    08FE   3207 	C$CommIF.c$930$1$92 ==.
                           3208 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:930: STO = TRUE;
   08FE D2 C4              3209 	setb	_STO
                    0900   3210 	C$CommIF.c$931$1$92 ==.
                           3211 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:931: SI = FALSE;
   0900 C2 C0              3212 	clr	_SI
                    0902   3213 	C$CommIF.c$932$1$92 ==.
                           3214 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:932: while (STO == TRUE);
   0902                    3215 00101$:
   0902 20 C4 FD           3216 	jb	_STO,00101$
                    0905   3217 	C$CommIF.c$933$1$92 ==.
                    0905   3218 	XG$Comm_IF_SMBusStop$0$0 ==.
   0905 22                 3219 	ret
                           3220 ;------------------------------------------------------------
                           3221 ;Allocation info for local variables in function 'Comm_IF_SMBusWrite'
                           3222 ;------------------------------------------------------------
                           3223 ;Length                    Allocated with name '_Comm_IF_SMBusWrite_PARM_2'
                           3224 ;pData                     Allocated with name '_Comm_IF_SMBusWrite_PARM_3'
                           3225 ;Address                   Allocated with name '_Comm_IF_SMBusWrite_Address_1_93'
                           3226 ;lTmp                      Allocated with name '_Comm_IF_SMBusWrite_lTmp_1_94'
                           3227 ;------------------------------------------------------------
                    0906   3228 	G$Comm_IF_SMBusWrite$0$0 ==.
                    0906   3229 	C$CommIF.c$949$1$92 ==.
                           3230 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:949: eSMBusReturnStates Comm_IF_SMBusWrite(U8 Address, U8 Length, U8 * pData)
                           3231 ;	-----------------------------------------
                           3232 ;	 function Comm_IF_SMBusWrite
                           3233 ;	-----------------------------------------
   0906                    3234 _Comm_IF_SMBusWrite:
   0906 E5 82              3235 	mov	a,dpl
   0908 90s00rB1           3236 	mov	dptr,#_Comm_IF_SMBusWrite_Address_1_93
   090B F0                 3237 	movx	@dptr,a
                    090C   3238 	C$CommIF.c$953$1$94 ==.
                           3239 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:953: if (fSMBusTransaction == FALSE)
   090C E5*03              3240 	mov	a,_fSMBusTransaction
   090E 60 03              3241 	jz	00143$
   0910 02s09rBA           3242 	ljmp	00115$
   0913                    3243 00143$:
                    0913   3244 	C$CommIF.c$956$2$95 ==.
                           3245 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:956: Comm_IF_InitSMBusInterface();
   0913 12s08r34           3246 	lcall	_Comm_IF_InitSMBusInterface
                    0916   3247 	C$CommIF.c$959$2$95 ==.
                           3248 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:959: STO = FALSE;
   0916 C2 C4              3249 	clr	_STO
                    0918   3250 	C$CommIF.c$960$2$95 ==.
                           3251 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:960: ACK = FALSE;
   0918 C2 C1              3252 	clr	_ACK
                    091A   3253 	C$CommIF.c$961$2$95 ==.
                           3254 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:961: STA = TRUE;
   091A D2 C5              3255 	setb	_STA
                    091C   3256 	C$CommIF.c$964$2$95 ==.
                           3257 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:964: if (Comm_IF_SMBusWaitForItWithTimeout() == FALSE)
   091C 12s0Ar93           3258 	lcall	_Comm_IF_SMBusWaitForItWithTimeout
   091F E5 82              3259 	mov	a,dpl
   0921 70 06              3260 	jnz	00102$
                    0923   3261 	C$CommIF.c$967$3$96 ==.
                           3262 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:967: return SMBUS_TIMEOUT_ERROR;
   0923 75 82 03           3263 	mov	dpl,#0x03
   0926 02s09rBD           3264 	ljmp	00121$
   0929                    3265 00102$:
                    0929   3266 	C$CommIF.c$971$2$95 ==.
                           3267 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:971: lTmp = ((Address << 1u) & 0xFE);
   0929 90s00rB1           3268 	mov	dptr,#_Comm_IF_SMBusWrite_Address_1_93
   092C E0                 3269 	movx	a,@dptr
   092D FF                 3270 	mov	r7,a
   092E E4                 3271 	clr	a
   092F CF                 3272 	xch	a,r7
   0930 25 E0              3273 	add	a,acc
   0932 CF                 3274 	xch	a,r7
   0933 33                 3275 	rlc	a
   0934 74 FE              3276 	mov	a,#0xFE
   0936 5F                 3277 	anl	a,r7
   0937 F5 C2              3278 	mov	_SMB0DAT,a
                    0939   3279 	C$CommIF.c$975$2$95 ==.
                           3280 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:975: SI = FALSE;
   0939 C2 C0              3281 	clr	_SI
                    093B   3282 	C$CommIF.c$977$2$95 ==.
                           3283 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:977: STA = FALSE;
   093B C2 C5              3284 	clr	_STA
                    093D   3285 	C$CommIF.c$979$2$95 ==.
                           3286 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:979: if (Comm_IF_SMBusWaitForItWithTimeout() == FALSE)
   093D 12s0Ar93           3287 	lcall	_Comm_IF_SMBusWaitForItWithTimeout
   0940 E5 82              3288 	mov	a,dpl
   0942 70 05              3289 	jnz	00104$
                    0944   3290 	C$CommIF.c$982$3$97 ==.
                           3291 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:982: return SMBUS_TIMEOUT_ERROR;
   0944 75 82 03           3292 	mov	dpl,#0x03
   0947 80 74              3293 	sjmp	00121$
   0949                    3294 00104$:
                    0949   3295 	C$CommIF.c$985$2$95 ==.
                           3296 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:985: if (ACK == FALSE)
   0949 20 C1 08           3297 	jb	_ACK,00130$
                    094C   3298 	C$CommIF.c$989$3$98 ==.
                           3299 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:989: Comm_IF_DisableSMBusInterface();
   094C 12s08r4F           3300 	lcall	_Comm_IF_DisableSMBusInterface
                    094F   3301 	C$CommIF.c$991$3$98 ==.
                           3302 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:991: return SMBUS_WRONG_SLAVE_ADDRESS;
   094F 75 82 05           3303 	mov	dpl,#0x05
                    0952   3304 	C$CommIF.c$995$1$94 ==.
                           3305 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:995: for (lTmp = 0u; lTmp < Length; lTmp++)
   0952 80 69              3306 	sjmp	00121$
   0954                    3307 00130$:
   0954 90s00rAD           3308 	mov	dptr,#_Comm_IF_SMBusWrite_PARM_2
   0957 E0                 3309 	movx	a,@dptr
   0958 FF                 3310 	mov	r7,a
   0959 90s00rAE           3311 	mov	dptr,#_Comm_IF_SMBusWrite_PARM_3
   095C E0                 3312 	movx	a,@dptr
   095D FC                 3313 	mov	r4,a
   095E A3                 3314 	inc	dptr
   095F E0                 3315 	movx	a,@dptr
   0960 FD                 3316 	mov	r5,a
   0961 A3                 3317 	inc	dptr
   0962 E0                 3318 	movx	a,@dptr
   0963 FE                 3319 	mov	r6,a
   0964 7B 00              3320 	mov	r3,#0x00
   0966                    3321 00117$:
   0966 C3                 3322 	clr	c
   0967 EB                 3323 	mov	a,r3
   0968 9F                 3324 	subb	a,r7
   0969 50 40              3325 	jnc	00120$
                    096B   3326 	C$CommIF.c$998$3$99 ==.
                           3327 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:998: SMB0DAT = *pData++;
   096B 8C 82              3328 	mov	dpl,r4
   096D 8D 83              3329 	mov	dph,r5
   096F 8E F0              3330 	mov	b,r6
   0971 12s00r00           3331 	lcall	__gptrget
   0974 F5 C2              3332 	mov	_SMB0DAT,a
   0976 A3                 3333 	inc	dptr
   0977 AC 82              3334 	mov	r4,dpl
   0979 AD 83              3335 	mov	r5,dph
                    097B   3336 	C$CommIF.c$1001$3$99 ==.
                           3337 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1001: SI = FALSE;
   097B C2 C0              3338 	clr	_SI
                    097D   3339 	C$CommIF.c$1003$3$99 ==.
                           3340 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1003: if (Comm_IF_SMBusWaitForItWithTimeout() == FALSE)
   097D C0 07              3341 	push	ar7
   097F C0 06              3342 	push	ar6
   0981 C0 05              3343 	push	ar5
   0983 C0 04              3344 	push	ar4
   0985 C0 03              3345 	push	ar3
   0987 12s0Ar93           3346 	lcall	_Comm_IF_SMBusWaitForItWithTimeout
   098A E5 82              3347 	mov	a,dpl
   098C D0 03              3348 	pop	ar3
   098E D0 04              3349 	pop	ar4
   0990 D0 05              3350 	pop	ar5
   0992 D0 06              3351 	pop	ar6
   0994 D0 07              3352 	pop	ar7
   0996 70 05              3353 	jnz	00108$
                    0998   3354 	C$CommIF.c$1006$4$100 ==.
                           3355 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1006: return SMBUS_TIMEOUT_ERROR;
   0998 75 82 03           3356 	mov	dpl,#0x03
   099B 80 20              3357 	sjmp	00121$
   099D                    3358 00108$:
                    099D   3359 	C$CommIF.c$1009$3$99 ==.
                           3360 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1009: if (ARBLOST == TRUE)
   099D 30 C2 08           3361 	jnb	_ARBLOST,00119$
                    09A0   3362 	C$CommIF.c$1013$4$101 ==.
                           3363 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1013: Comm_IF_DisableSMBusInterface();
   09A0 12s08r4F           3364 	lcall	_Comm_IF_DisableSMBusInterface
                    09A3   3365 	C$CommIF.c$1015$4$101 ==.
                           3366 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1015: return SMBUS_ARBITRATION_LOST;
   09A3 75 82 02           3367 	mov	dpl,#0x02
   09A6 80 15              3368 	sjmp	00121$
   09A8                    3369 00119$:
                    09A8   3370 	C$CommIF.c$995$2$95 ==.
                           3371 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:995: for (lTmp = 0u; lTmp < Length; lTmp++)
   09A8 0B                 3372 	inc	r3
   09A9 80 BB              3373 	sjmp	00117$
   09AB                    3374 00120$:
                    09AB   3375 	C$CommIF.c$1021$2$95 ==.
                           3376 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1021: STO = TRUE;
   09AB D2 C4              3377 	setb	_STO
                    09AD   3378 	C$CommIF.c$1022$2$95 ==.
                           3379 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1022: SI = FALSE;
   09AD C2 C0              3380 	clr	_SI
                    09AF   3381 	C$CommIF.c$1023$2$95 ==.
                           3382 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1023: while (STO == TRUE) ;
   09AF                    3383 00111$:
   09AF 20 C4 FD           3384 	jb	_STO,00111$
                    09B2   3385 	C$CommIF.c$1026$2$95 ==.
                           3386 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1026: Comm_IF_DisableSMBusInterface();
   09B2 12s08r4F           3387 	lcall	_Comm_IF_DisableSMBusInterface
                    09B5   3388 	C$CommIF.c$1028$2$95 ==.
                           3389 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1028: return SMBUS_TRANSMISSION_OK;
   09B5 75 82 00           3390 	mov	dpl,#0x00
   09B8 80 03              3391 	sjmp	00121$
   09BA                    3392 00115$:
                    09BA   3393 	C$CommIF.c$1033$2$102 ==.
                           3394 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1033: return SMBUS_BUSY;
   09BA 75 82 04           3395 	mov	dpl,#0x04
   09BD                    3396 00121$:
                    09BD   3397 	C$CommIF.c$1035$1$94 ==.
                    09BD   3398 	XG$Comm_IF_SMBusWrite$0$0 ==.
   09BD 22                 3399 	ret
                           3400 ;------------------------------------------------------------
                           3401 ;Allocation info for local variables in function 'Comm_IF_SMBusRead'
                           3402 ;------------------------------------------------------------
                           3403 ;Length                    Allocated with name '_Comm_IF_SMBusRead_PARM_2'
                           3404 ;pData                     Allocated with name '_Comm_IF_SMBusRead_PARM_3'
                           3405 ;Address                   Allocated with name '_Comm_IF_SMBusRead_Address_1_103'
                           3406 ;lTmp                      Allocated with name '_Comm_IF_SMBusRead_lTmp_1_104'
                           3407 ;------------------------------------------------------------
                    09BE   3408 	G$Comm_IF_SMBusRead$0$0 ==.
                    09BE   3409 	C$CommIF.c$1051$1$94 ==.
                           3410 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1051: eSMBusReturnStates Comm_IF_SMBusRead(U8 Address, U8 Length, U8 * pData)
                           3411 ;	-----------------------------------------
                           3412 ;	 function Comm_IF_SMBusRead
                           3413 ;	-----------------------------------------
   09BE                    3414 _Comm_IF_SMBusRead:
   09BE E5 82              3415 	mov	a,dpl
   09C0 90s00rB6           3416 	mov	dptr,#_Comm_IF_SMBusRead_Address_1_103
   09C3 F0                 3417 	movx	@dptr,a
                    09C4   3418 	C$CommIF.c$1055$1$104 ==.
                           3419 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1055: if (fSMBusTransaction == FALSE)
   09C4 E5*03              3420 	mov	a,_fSMBusTransaction
   09C6 60 03              3421 	jz	00144$
   09C8 02s0Ar8F           3422 	ljmp	00116$
   09CB                    3423 00144$:
                    09CB   3424 	C$CommIF.c$1058$2$105 ==.
                           3425 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1058: Comm_IF_InitSMBusInterface();
   09CB 12s08r34           3426 	lcall	_Comm_IF_InitSMBusInterface
                    09CE   3427 	C$CommIF.c$1061$2$105 ==.
                           3428 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1061: STO = FALSE;
   09CE C2 C4              3429 	clr	_STO
                    09D0   3430 	C$CommIF.c$1062$2$105 ==.
                           3431 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1062: ACK = FALSE;
   09D0 C2 C1              3432 	clr	_ACK
                    09D2   3433 	C$CommIF.c$1063$2$105 ==.
                           3434 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1063: STA = TRUE;
   09D2 D2 C5              3435 	setb	_STA
                    09D4   3436 	C$CommIF.c$1066$2$105 ==.
                           3437 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1066: if (Comm_IF_SMBusWaitForItWithTimeout() == FALSE)
   09D4 12s0Ar93           3438 	lcall	_Comm_IF_SMBusWaitForItWithTimeout
   09D7 E5 82              3439 	mov	a,dpl
   09D9 70 06              3440 	jnz	00102$
                    09DB   3441 	C$CommIF.c$1069$3$106 ==.
                           3442 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1069: return SMBUS_TIMEOUT_ERROR;
   09DB 75 82 03           3443 	mov	dpl,#0x03
   09DE 02s0Ar92           3444 	ljmp	00122$
   09E1                    3445 00102$:
                    09E1   3446 	C$CommIF.c$1073$2$105 ==.
                           3447 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1073: lTmp = ((Address << 1u) | 0x01);
   09E1 90s00rB6           3448 	mov	dptr,#_Comm_IF_SMBusRead_Address_1_103
   09E4 E0                 3449 	movx	a,@dptr
   09E5 FF                 3450 	mov	r7,a
   09E6 E4                 3451 	clr	a
   09E7 CF                 3452 	xch	a,r7
   09E8 25 E0              3453 	add	a,acc
   09EA CF                 3454 	xch	a,r7
   09EB 33                 3455 	rlc	a
   09EC 74 01              3456 	mov	a,#0x01
   09EE 4F                 3457 	orl	a,r7
   09EF F5 C2              3458 	mov	_SMB0DAT,a
                    09F1   3459 	C$CommIF.c$1077$2$105 ==.
                           3460 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1077: SI = FALSE;
   09F1 C2 C0              3461 	clr	_SI
                    09F3   3462 	C$CommIF.c$1079$2$105 ==.
                           3463 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1079: STA = FALSE;
   09F3 C2 C5              3464 	clr	_STA
                    09F5   3465 	C$CommIF.c$1082$2$105 ==.
                           3466 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1082: if (Comm_IF_SMBusWaitForItWithTimeout() == FALSE)
   09F5 12s0Ar93           3467 	lcall	_Comm_IF_SMBusWaitForItWithTimeout
   09F8 E5 82              3468 	mov	a,dpl
   09FA 70 06              3469 	jnz	00104$
                    09FC   3470 	C$CommIF.c$1085$3$107 ==.
                           3471 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1085: return SMBUS_TIMEOUT_ERROR;
   09FC 75 82 03           3472 	mov	dpl,#0x03
   09FF 02s0Ar92           3473 	ljmp	00122$
   0A02                    3474 00104$:
                    0A02   3475 	C$CommIF.c$1088$2$105 ==.
                           3476 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1088: if (ACK == FALSE)
   0A02 20 C1 09           3477 	jb	_ACK,00131$
                    0A05   3478 	C$CommIF.c$1092$3$108 ==.
                           3479 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1092: Comm_IF_DisableSMBusInterface();
   0A05 12s08r4F           3480 	lcall	_Comm_IF_DisableSMBusInterface
                    0A08   3481 	C$CommIF.c$1094$3$108 ==.
                           3482 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1094: return SMBUS_WRONG_SLAVE_ADDRESS;
   0A08 75 82 05           3483 	mov	dpl,#0x05
   0A0B 02s0Ar92           3484 	ljmp	00122$
                    0A0E   3485 	C$CommIF.c$1098$1$104 ==.
                           3486 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1098: for (lTmp = 0u; lTmp < Length; lTmp++)
   0A0E                    3487 00131$:
   0A0E 90s00rB2           3488 	mov	dptr,#_Comm_IF_SMBusRead_PARM_2
   0A11 E0                 3489 	movx	a,@dptr
   0A12 FF                 3490 	mov	r7,a
   0A13 90s00rB3           3491 	mov	dptr,#_Comm_IF_SMBusRead_PARM_3
   0A16 E0                 3492 	movx	a,@dptr
   0A17 FC                 3493 	mov	r4,a
   0A18 A3                 3494 	inc	dptr
   0A19 E0                 3495 	movx	a,@dptr
   0A1A FD                 3496 	mov	r5,a
   0A1B A3                 3497 	inc	dptr
   0A1C E0                 3498 	movx	a,@dptr
   0A1D FE                 3499 	mov	r6,a
   0A1E 7B 00              3500 	mov	r3,#0x00
   0A20                    3501 00118$:
   0A20 C3                 3502 	clr	c
   0A21 EB                 3503 	mov	a,r3
   0A22 9F                 3504 	subb	a,r7
   0A23 50 5B              3505 	jnc	00121$
                    0A25   3506 	C$CommIF.c$1100$1$104 ==.
                           3507 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1100: if (lTmp < Length - 1u)
   0A25 C0 04              3508 	push	ar4
   0A27 C0 05              3509 	push	ar5
   0A29 C0 06              3510 	push	ar6
   0A2B 8F 01              3511 	mov	ar1,r7
   0A2D 7A 00              3512 	mov	r2,#0x00
   0A2F 19                 3513 	dec	r1
   0A30 B9 FF 01           3514 	cjne	r1,#0xFF,00149$
   0A33 1A                 3515 	dec	r2
   0A34                    3516 00149$:
   0A34 8B 00              3517 	mov	ar0,r3
   0A36 7E 00              3518 	mov	r6,#0x00
   0A38 C3                 3519 	clr	c
   0A39 E8                 3520 	mov	a,r0
   0A3A 99                 3521 	subb	a,r1
   0A3B EE                 3522 	mov	a,r6
   0A3C 9A                 3523 	subb	a,r2
   0A3D D0 06              3524 	pop	ar6
   0A3F D0 05              3525 	pop	ar5
   0A41 D0 04              3526 	pop	ar4
   0A43 50 04              3527 	jnc	00108$
                    0A45   3528 	C$CommIF.c$1103$4$110 ==.
                           3529 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1103: ACK = TRUE;
   0A45 D2 C1              3530 	setb	_ACK
   0A47 80 02              3531 	sjmp	00109$
   0A49                    3532 00108$:
                    0A49   3533 	C$CommIF.c$1108$4$111 ==.
                           3534 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1108: ACK = FALSE;
   0A49 C2 C1              3535 	clr	_ACK
   0A4B                    3536 00109$:
                    0A4B   3537 	C$CommIF.c$1112$3$109 ==.
                           3538 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1112: SI = FALSE;
   0A4B C2 C0              3539 	clr	_SI
                    0A4D   3540 	C$CommIF.c$1114$3$109 ==.
                           3541 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1114: if (Comm_IF_SMBusWaitForItWithTimeout() == FALSE)
   0A4D C0 07              3542 	push	ar7
   0A4F C0 06              3543 	push	ar6
   0A51 C0 05              3544 	push	ar5
   0A53 C0 04              3545 	push	ar4
   0A55 C0 03              3546 	push	ar3
   0A57 12s0Ar93           3547 	lcall	_Comm_IF_SMBusWaitForItWithTimeout
   0A5A E5 82              3548 	mov	a,dpl
   0A5C D0 03              3549 	pop	ar3
   0A5E D0 04              3550 	pop	ar4
   0A60 D0 05              3551 	pop	ar5
   0A62 D0 06              3552 	pop	ar6
   0A64 D0 07              3553 	pop	ar7
   0A66 70 05              3554 	jnz	00111$
                    0A68   3555 	C$CommIF.c$1117$4$112 ==.
                           3556 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1117: return SMBUS_TIMEOUT_ERROR;
   0A68 75 82 03           3557 	mov	dpl,#0x03
   0A6B 80 25              3558 	sjmp	00122$
   0A6D                    3559 00111$:
                    0A6D   3560 	C$CommIF.c$1121$3$109 ==.
                           3561 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1121: *pData++ = SMB0DAT;
   0A6D 8C 82              3562 	mov	dpl,r4
   0A6F 8D 83              3563 	mov	dph,r5
   0A71 8E F0              3564 	mov	b,r6
   0A73 E5 C2              3565 	mov	a,_SMB0DAT
   0A75 12s00r00           3566 	lcall	__gptrput
   0A78 A3                 3567 	inc	dptr
   0A79 AC 82              3568 	mov	r4,dpl
   0A7B AD 83              3569 	mov	r5,dph
                    0A7D   3570 	C$CommIF.c$1098$2$105 ==.
                           3571 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1098: for (lTmp = 0u; lTmp < Length; lTmp++)
   0A7D 0B                 3572 	inc	r3
   0A7E 80 A0              3573 	sjmp	00118$
   0A80                    3574 00121$:
                    0A80   3575 	C$CommIF.c$1126$2$105 ==.
                           3576 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1126: STO = TRUE;
   0A80 D2 C4              3577 	setb	_STO
                    0A82   3578 	C$CommIF.c$1127$2$105 ==.
                           3579 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1127: SI = FALSE;
   0A82 C2 C0              3580 	clr	_SI
                    0A84   3581 	C$CommIF.c$1128$2$105 ==.
                           3582 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1128: while (STO == TRUE) ;
   0A84                    3583 00112$:
   0A84 20 C4 FD           3584 	jb	_STO,00112$
                    0A87   3585 	C$CommIF.c$1131$2$105 ==.
                           3586 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1131: Comm_IF_DisableSMBusInterface();
   0A87 12s08r4F           3587 	lcall	_Comm_IF_DisableSMBusInterface
                    0A8A   3588 	C$CommIF.c$1133$2$105 ==.
                           3589 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1133: return SMBUS_RX_FINISHED;
   0A8A 75 82 01           3590 	mov	dpl,#0x01
   0A8D 80 03              3591 	sjmp	00122$
   0A8F                    3592 00116$:
                    0A8F   3593 	C$CommIF.c$1138$2$113 ==.
                           3594 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1138: return SMBUS_BUSY;
   0A8F 75 82 04           3595 	mov	dpl,#0x04
   0A92                    3596 00122$:
                    0A92   3597 	C$CommIF.c$1140$1$104 ==.
                    0A92   3598 	XG$Comm_IF_SMBusRead$0$0 ==.
   0A92 22                 3599 	ret
                           3600 ;------------------------------------------------------------
                           3601 ;Allocation info for local variables in function 'Comm_IF_SMBusWaitForItWithTimeout'
                           3602 ;------------------------------------------------------------
                           3603 ;SMBusTimeOut              Allocated with name '_Comm_IF_SMBusWaitForItWithTimeout_SMBusTimeOut_1_114'
                           3604 ;------------------------------------------------------------
                    0A93   3605 	G$Comm_IF_SMBusWaitForItWithTimeout$0$0 ==.
                    0A93   3606 	C$CommIF.c$1151$1$104 ==.
                           3607 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1151: U8 Comm_IF_SMBusWaitForItWithTimeout()
                           3608 ;	-----------------------------------------
                           3609 ;	 function Comm_IF_SMBusWaitForItWithTimeout
                           3610 ;	-----------------------------------------
   0A93                    3611 _Comm_IF_SMBusWaitForItWithTimeout:
                    0A93   3612 	C$CommIF.c$1159$1$114 ==.
                           3613 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1159: do
   0A93 7E 00              3614 	mov	r6,#0x00
   0A95 7F 00              3615 	mov	r7,#0x00
   0A97                    3616 00102$:
                    0A97   3617 	C$CommIF.c$1161$2$115 ==.
                           3618 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1161: SMBusTimeOut++;
   0A97 0E                 3619 	inc	r6
   0A98 BE 00 01           3620 	cjne	r6,#0x00,00117$
   0A9B 0F                 3621 	inc	r7
   0A9C                    3622 00117$:
                    0A9C   3623 	C$CommIF.c$1162$1$114 ==.
                           3624 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1162: } while ((SMBusTimeOut < 0xFFFE) && (SI == FALSE))  ;
   0A9C C3                 3625 	clr	c
   0A9D EE                 3626 	mov	a,r6
   0A9E 94 FE              3627 	subb	a,#0xFE
   0AA0 EF                 3628 	mov	a,r7
   0AA1 94 FF              3629 	subb	a,#0xFF
   0AA3 50 03              3630 	jnc	00104$
   0AA5 30 C0 EF           3631 	jnb	_SI,00102$
   0AA8                    3632 00104$:
                    0AA8   3633 	C$CommIF.c$1164$1$114 ==.
                           3634 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1164: if (SI == TRUE)
   0AA8 30 C0 05           3635 	jnb	_SI,00106$
                    0AAB   3636 	C$CommIF.c$1166$2$116 ==.
                           3637 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1166: return TRUE;
   0AAB 75 82 01           3638 	mov	dpl,#0x01
   0AAE 80 06              3639 	sjmp	00108$
   0AB0                    3640 00106$:
                    0AB0   3641 	C$CommIF.c$1171$2$117 ==.
                           3642 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1171: Comm_IF_DisableSMBusInterface();
   0AB0 12s08r4F           3643 	lcall	_Comm_IF_DisableSMBusInterface
                    0AB3   3644 	C$CommIF.c$1173$2$117 ==.
                           3645 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1173: return FALSE;
   0AB3 75 82 00           3646 	mov	dpl,#0x00
   0AB6                    3647 00108$:
                    0AB6   3648 	C$CommIF.c$1175$1$114 ==.
                    0AB6   3649 	XG$Comm_IF_SMBusWaitForItWithTimeout$0$0 ==.
   0AB6 22                 3650 	ret
                           3651 ;------------------------------------------------------------
                           3652 ;Allocation info for local variables in function 'UART_ISR'
                           3653 ;------------------------------------------------------------
                    0AB7   3654 	G$UART_ISR$0$0 ==.
                    0AB7   3655 	C$CommIF.c$1185$1$114 ==.
                           3656 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1185: INTERRUPT(UART_ISR, INTERRUPT_UART0)
                           3657 ;	-----------------------------------------
                           3658 ;	 function UART_ISR
                           3659 ;	-----------------------------------------
   0AB7                    3660 _UART_ISR:
   0AB7 C0 E0              3661 	push	acc
   0AB9 C0 82              3662 	push	dpl
   0ABB C0 83              3663 	push	dph
   0ABD C0 07              3664 	push	ar7
   0ABF C0 06              3665 	push	ar6
   0AC1 C0 D0              3666 	push	psw
   0AC3 75 D0 00           3667 	mov	psw,#0x00
                    0AC6   3668 	C$CommIF.c$1187$1$119 ==.
                           3669 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1187: if (TI0)
                    0AC6   3670 	C$CommIF.c$1190$2$120 ==.
                           3671 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1190: TI0 = FALSE;
   0AC6 10 99 02           3672 	jbc	_TI0,00124$
   0AC9 80 44              3673 	sjmp	00107$
   0ACB                    3674 00124$:
                    0ACB   3675 	C$CommIF.c$1192$2$120 ==.
                           3676 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1192: lUartInternal.TXReadPosition++;
   0ACB 90s00r03           3677 	mov	dptr,#(_lUartInternal + 0x0001)
   0ACE E0                 3678 	movx	a,@dptr
   0ACF FF                 3679 	mov	r7,a
   0AD0 0F                 3680 	inc	r7
                    0AD1   3681 	C$CommIF.c$1193$2$120 ==.
                           3682 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1193: if (lUartInternal.TXReadPosition >= COMM_IF_UART_TX_BUFFER)
   0AD1 90s00r03           3683 	mov	dptr,#(_lUartInternal + 0x0001)
   0AD4 EF                 3684 	mov	a,r7
   0AD5 F0                 3685 	movx	@dptr,a
   0AD6 E0                 3686 	movx	a,@dptr
   0AD7 FF                 3687 	mov	r7,a
   0AD8 7E 00              3688 	mov	r6,#0x00
   0ADA C3                 3689 	clr	c
   0ADB EF                 3690 	mov	a,r7
   0ADC 94 40              3691 	subb	a,#0x40
   0ADE EE                 3692 	mov	a,r6
   0ADF 94 00              3693 	subb	a,#0x00
   0AE1 40 05              3694 	jc	00102$
                    0AE3   3695 	C$CommIF.c$1195$3$121 ==.
                           3696 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1195: lUartInternal.TXReadPosition = 0u;
   0AE3 90s00r03           3697 	mov	dptr,#(_lUartInternal + 0x0001)
   0AE6 E4                 3698 	clr	a
   0AE7 F0                 3699 	movx	@dptr,a
   0AE8                    3700 00102$:
                    0AE8   3701 	C$CommIF.c$1198$2$120 ==.
                           3702 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1198: if (lUartInternal.TXReadPosition == lUartInternal.TXWritePosition)
   0AE8 90s00r03           3703 	mov	dptr,#(_lUartInternal + 0x0001)
   0AEB E0                 3704 	movx	a,@dptr
   0AEC FF                 3705 	mov	r7,a
   0AED 90s00r02           3706 	mov	dptr,#_lUartInternal
   0AF0 E0                 3707 	movx	a,@dptr
   0AF1 FE                 3708 	mov	r6,a
   0AF2 EF                 3709 	mov	a,r7
   0AF3 B5 06 08           3710 	cjne	a,ar6,00104$
                    0AF6   3711 	C$CommIF.c$1200$3$122 ==.
                           3712 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1200: lUartInternal.TXBufferEmpty = TRUE;
   0AF6 90s00r04           3713 	mov	dptr,#(_lUartInternal + 0x0002)
   0AF9 74 01              3714 	mov	a,#0x01
   0AFB F0                 3715 	movx	@dptr,a
   0AFC 80 11              3716 	sjmp	00107$
   0AFE                    3717 00104$:
                    0AFE   3718 	C$CommIF.c$1204$3$123 ==.
                           3719 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1204: SBUF0 = lUartInternal.TXBuffer[lUartInternal.TXReadPosition];
   0AFE 90s00r03           3720 	mov	dptr,#(_lUartInternal + 0x0001)
   0B01 E0                 3721 	movx	a,@dptr
   0B02 FF                 3722 	mov	r7,a
   0B03 24r47              3723 	add	a,#(_lUartInternal + 0x0045)
   0B05 F5 82              3724 	mov	dpl,a
   0B07 E4                 3725 	clr	a
   0B08 34s00              3726 	addc	a,#((_lUartInternal + 0x0045) >> 8)
   0B0A F5 83              3727 	mov	dph,a
   0B0C E0                 3728 	movx	a,@dptr
   0B0D F5 99              3729 	mov	_SBUF0,a
   0B0F                    3730 00107$:
                    0B0F   3731 	C$CommIF.c$1208$1$119 ==.
                           3732 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1208: if (RI0)
                    0B0F   3733 	C$CommIF.c$1211$2$124 ==.
                           3734 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1211: RI0 = FALSE;
   0B0F 10 98 02           3735 	jbc	_RI0,00128$
   0B12 80 2C              3736 	sjmp	00112$
   0B14                    3737 00128$:
                    0B14   3738 	C$CommIF.c$1213$2$124 ==.
                           3739 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1213: lUartInternal.RXBuffer[lUartInternal.RXWritePosition++] = SBUF0;
   0B14 90s00r05           3740 	mov	dptr,#(_lUartInternal + 0x0003)
   0B17 E0                 3741 	movx	a,@dptr
   0B18 FF                 3742 	mov	r7,a
   0B19 04                 3743 	inc	a
   0B1A 90s00r05           3744 	mov	dptr,#(_lUartInternal + 0x0003)
   0B1D F0                 3745 	movx	@dptr,a
   0B1E EF                 3746 	mov	a,r7
   0B1F 24r07              3747 	add	a,#(_lUartInternal + 0x0005)
   0B21 F5 82              3748 	mov	dpl,a
   0B23 E4                 3749 	clr	a
   0B24 34s00              3750 	addc	a,#((_lUartInternal + 0x0005) >> 8)
   0B26 F5 83              3751 	mov	dph,a
   0B28 E5 99              3752 	mov	a,_SBUF0
   0B2A F0                 3753 	movx	@dptr,a
                    0B2B   3754 	C$CommIF.c$1215$2$124 ==.
                           3755 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1215: if (lUartInternal.RXWritePosition >= COMM_IF_UART_RX_BUFFER)
   0B2B 90s00r05           3756 	mov	dptr,#(_lUartInternal + 0x0003)
   0B2E E0                 3757 	movx	a,@dptr
   0B2F FF                 3758 	mov	r7,a
   0B30 7E 00              3759 	mov	r6,#0x00
   0B32 C3                 3760 	clr	c
   0B33 EF                 3761 	mov	a,r7
   0B34 94 40              3762 	subb	a,#0x40
   0B36 EE                 3763 	mov	a,r6
   0B37 94 00              3764 	subb	a,#0x00
   0B39 40 05              3765 	jc	00112$
                    0B3B   3766 	C$CommIF.c$1217$3$125 ==.
                           3767 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\CommIF.c:1217: lUartInternal.RXWritePosition = 0u;
   0B3B 90s00r05           3768 	mov	dptr,#(_lUartInternal + 0x0003)
   0B3E E4                 3769 	clr	a
   0B3F F0                 3770 	movx	@dptr,a
   0B40                    3771 00112$:
   0B40 D0 D0              3772 	pop	psw
   0B42 D0 06              3773 	pop	ar6
   0B44 D0 07              3774 	pop	ar7
   0B46 D0 83              3775 	pop	dph
   0B48 D0 82              3776 	pop	dpl
   0B4A D0 E0              3777 	pop	acc
                    0B4C   3778 	C$CommIF.c$1220$1$119 ==.
                    0B4C   3779 	XG$UART_ISR$0$0 ==.
   0B4C 32                 3780 	reti
                           3781 ;	eliminated unneeded push/pop b
                           3782 	.area CSEG    (CODE)
                           3783 	.area CONST   (CODE)
                           3784 	.area XINIT   (CODE)
                           3785 	.area CABS    (ABS,CODE)
