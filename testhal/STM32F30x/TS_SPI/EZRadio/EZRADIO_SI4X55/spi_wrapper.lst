                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.2.0 #8008 (Jul  6 2012) (MINGW32)
                              4 ; This file was generated Tue Apr 02 14:56:26 2013
                              5 ;--------------------------------------------------------
                              6 	.module spi_wrapper
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _Comm_IF_Spi1ReadWrite
                             13 	.globl _vSpi_ReadDataSpi1_PARM_2
                             14 	.globl _vSpi_WriteDataSpi1_PARM_2
                             15 	.globl _bSpi_ReadWriteSpi1
                             16 	.globl _vSpi_WriteDataSpi1
                             17 	.globl _vSpi_ReadDataSpi1
                             18 ;--------------------------------------------------------
                             19 ; special function registers
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; special function bits
                             25 ;--------------------------------------------------------
                             26 	.area RSEG    (ABS,DATA)
   0000                      27 	.org 0x0000
                             28 ;--------------------------------------------------------
                             29 ; overlayable register banks
                             30 ;--------------------------------------------------------
                             31 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      32 	.ds 8
                             33 ;--------------------------------------------------------
                             34 ; internal ram data
                             35 ;--------------------------------------------------------
                             36 	.area DSEG    (DATA)
                             37 ;--------------------------------------------------------
                             38 ; overlayable items in internal ram 
                             39 ;--------------------------------------------------------
                             40 ;--------------------------------------------------------
                             41 ; indirectly addressable internal ram data
                             42 ;--------------------------------------------------------
                             43 	.area ISEG    (DATA)
                             44 ;--------------------------------------------------------
                             45 ; absolute internal ram data
                             46 ;--------------------------------------------------------
                             47 	.area IABS    (ABS,DATA)
                             48 	.area IABS    (ABS,DATA)
                             49 ;--------------------------------------------------------
                             50 ; bit data
                             51 ;--------------------------------------------------------
                             52 	.area BSEG    (BIT)
                             53 ;--------------------------------------------------------
                             54 ; paged external ram data
                             55 ;--------------------------------------------------------
                             56 	.area PSEG    (PAG,XDATA)
                             57 ;--------------------------------------------------------
                             58 ; external ram data
                             59 ;--------------------------------------------------------
                             60 	.area XSEG    (XDATA)
                    0000     61 Lspi_wrapper.bSpi_ReadWriteSpi1$bData$1$31==.
   0000                      62 _bSpi_ReadWriteSpi1_bData_1_31:
   0000                      63 	.ds 1
                    0001     64 Lspi_wrapper.vSpi_WriteDataSpi1$pData$1$33==.
   0001                      65 _vSpi_WriteDataSpi1_PARM_2:
   0001                      66 	.ds 3
                    0004     67 Lspi_wrapper.vSpi_WriteDataSpi1$length$1$33==.
   0004                      68 _vSpi_WriteDataSpi1_length_1_33:
   0004                      69 	.ds 1
                    0005     70 Lspi_wrapper.vSpi_ReadDataSpi1$pData$1$36==.
   0005                      71 _vSpi_ReadDataSpi1_PARM_2:
   0005                      72 	.ds 3
                    0008     73 Lspi_wrapper.vSpi_ReadDataSpi1$length$1$36==.
   0008                      74 _vSpi_ReadDataSpi1_length_1_36:
   0008                      75 	.ds 1
                             76 ;--------------------------------------------------------
                             77 ; absolute external ram data
                             78 ;--------------------------------------------------------
                             79 	.area XABS    (ABS,XDATA)
                             80 ;--------------------------------------------------------
                             81 ; external initialized ram data
                             82 ;--------------------------------------------------------
                             83 	.area XISEG   (XDATA)
                             84 	.area HOME    (CODE)
                             85 	.area GSINIT0 (CODE)
                             86 	.area GSINIT1 (CODE)
                             87 	.area GSINIT2 (CODE)
                             88 	.area GSINIT3 (CODE)
                             89 	.area GSINIT4 (CODE)
                             90 	.area GSINIT5 (CODE)
                             91 	.area GSINIT  (CODE)
                             92 	.area GSFINAL (CODE)
                             93 	.area CSEG    (CODE)
                             94 ;--------------------------------------------------------
                             95 ; global & static initialisations
                             96 ;--------------------------------------------------------
                             97 	.area HOME    (CODE)
                             98 	.area GSINIT  (CODE)
                             99 	.area GSFINAL (CODE)
                            100 	.area GSINIT  (CODE)
                            101 ;--------------------------------------------------------
                            102 ; Home
                            103 ;--------------------------------------------------------
                            104 	.area HOME    (CODE)
                            105 	.area HOME    (CODE)
                            106 ;--------------------------------------------------------
                            107 ; code
                            108 ;--------------------------------------------------------
                            109 	.area CSEG    (CODE)
                            110 ;------------------------------------------------------------
                            111 ;Allocation info for local variables in function 'bSpi_ReadWriteSpi1'
                            112 ;------------------------------------------------------------
                            113 ;bData                     Allocated with name '_bSpi_ReadWriteSpi1_bData_1_31'
                            114 ;------------------------------------------------------------
                    0000    115 	G$bSpi_ReadWriteSpi1$0$0 ==.
                    0000    116 	C$spi_wrapper.c$49$0$0 ==.
                            117 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\spi_wrapper.c:49: U8 bSpi_ReadWriteSpi1 (U8 bData)
                            118 ;	-----------------------------------------
                            119 ;	 function bSpi_ReadWriteSpi1
                            120 ;	-----------------------------------------
   0000                     121 _bSpi_ReadWriteSpi1:
                    0007    122 	ar7 = 0x07
                    0006    123 	ar6 = 0x06
                    0005    124 	ar5 = 0x05
                    0004    125 	ar4 = 0x04
                    0003    126 	ar3 = 0x03
                    0002    127 	ar2 = 0x02
                    0001    128 	ar1 = 0x01
                    0000    129 	ar0 = 0x00
   0000 E5 82               130 	mov	a,dpl
                    0002    131 	C$spi_wrapper.c$51$1$32 ==.
                            132 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\spi_wrapper.c:51: return Comm_IF_Spi1ReadWrite(bData);
   0002 90s00r00            133 	mov	dptr,#_bSpi_ReadWriteSpi1_bData_1_31
   0005 F0                  134 	movx	@dptr,a
   0006 F5 82               135 	mov	dpl,a
   0008 12s00r00            136 	lcall	_Comm_IF_Spi1ReadWrite
                    000B    137 	C$spi_wrapper.c$52$1$32 ==.
                    000B    138 	XG$bSpi_ReadWriteSpi1$0$0 ==.
   000B 22                  139 	ret
                            140 ;------------------------------------------------------------
                            141 ;Allocation info for local variables in function 'vSpi_WriteDataSpi1'
                            142 ;------------------------------------------------------------
                            143 ;pData                     Allocated with name '_vSpi_WriteDataSpi1_PARM_2'
                            144 ;length                    Allocated with name '_vSpi_WriteDataSpi1_length_1_33'
                            145 ;------------------------------------------------------------
                    000C    146 	G$vSpi_WriteDataSpi1$0$0 ==.
                    000C    147 	C$spi_wrapper.c$64$1$32 ==.
                            148 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\spi_wrapper.c:64: void vSpi_WriteDataSpi1 (U8 length, U8 *pData)
                            149 ;	-----------------------------------------
                            150 ;	 function vSpi_WriteDataSpi1
                            151 ;	-----------------------------------------
   000C                     152 _vSpi_WriteDataSpi1:
   000C E5 82               153 	mov	a,dpl
   000E 90s00r04            154 	mov	dptr,#_vSpi_WriteDataSpi1_length_1_33
   0011 F0                  155 	movx	@dptr,a
                    0012    156 	C$spi_wrapper.c$66$1$34 ==.
                            157 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\spi_wrapper.c:66: while (length--)
   0012 90s00r01            158 	mov	dptr,#_vSpi_WriteDataSpi1_PARM_2
   0015 E0                  159 	movx	a,@dptr
   0016 FD                  160 	mov	r5,a
   0017 A3                  161 	inc	dptr
   0018 E0                  162 	movx	a,@dptr
   0019 FE                  163 	mov	r6,a
   001A A3                  164 	inc	dptr
   001B E0                  165 	movx	a,@dptr
   001C FF                  166 	mov	r7,a
   001D 90s00r04            167 	mov	dptr,#_vSpi_WriteDataSpi1_length_1_33
   0020 E0                  168 	movx	a,@dptr
   0021 FC                  169 	mov	r4,a
   0022                     170 00101$:
   0022 8C 03               171 	mov	ar3,r4
   0024 1C                  172 	dec	r4
   0025 90s00r04            173 	mov	dptr,#_vSpi_WriteDataSpi1_length_1_33
   0028 EC                  174 	mov	a,r4
   0029 F0                  175 	movx	@dptr,a
   002A EB                  176 	mov	a,r3
   002B 60 26               177 	jz	00108$
                    002D    178 	C$spi_wrapper.c$68$2$35 ==.
                            179 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\spi_wrapper.c:68: Comm_IF_Spi1ReadWrite(*pData++);
   002D 8D 82               180 	mov	dpl,r5
   002F 8E 83               181 	mov	dph,r6
   0031 8F F0               182 	mov	b,r7
   0033 12s00r00            183 	lcall	__gptrget
   0036 FB                  184 	mov	r3,a
   0037 A3                  185 	inc	dptr
   0038 AD 82               186 	mov	r5,dpl
   003A AE 83               187 	mov	r6,dph
   003C 8B 82               188 	mov	dpl,r3
   003E C0 07               189 	push	ar7
   0040 C0 06               190 	push	ar6
   0042 C0 05               191 	push	ar5
   0044 C0 04               192 	push	ar4
   0046 12s00r00            193 	lcall	_Comm_IF_Spi1ReadWrite
   0049 D0 04               194 	pop	ar4
   004B D0 05               195 	pop	ar5
   004D D0 06               196 	pop	ar6
   004F D0 07               197 	pop	ar7
   0051 80 CF               198 	sjmp	00101$
   0053                     199 00108$:
   0053 90s00r04            200 	mov	dptr,#_vSpi_WriteDataSpi1_length_1_33
   0056 EC                  201 	mov	a,r4
   0057 F0                  202 	movx	@dptr,a
                    0058    203 	C$spi_wrapper.c$70$1$34 ==.
                    0058    204 	XG$vSpi_WriteDataSpi1$0$0 ==.
   0058 22                  205 	ret
                            206 ;------------------------------------------------------------
                            207 ;Allocation info for local variables in function 'vSpi_ReadDataSpi1'
                            208 ;------------------------------------------------------------
                            209 ;pData                     Allocated with name '_vSpi_ReadDataSpi1_PARM_2'
                            210 ;length                    Allocated with name '_vSpi_ReadDataSpi1_length_1_36'
                            211 ;------------------------------------------------------------
                    0059    212 	G$vSpi_ReadDataSpi1$0$0 ==.
                    0059    213 	C$spi_wrapper.c$82$1$34 ==.
                            214 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\spi_wrapper.c:82: void vSpi_ReadDataSpi1  (U8 length, U8 *pData)
                            215 ;	-----------------------------------------
                            216 ;	 function vSpi_ReadDataSpi1
                            217 ;	-----------------------------------------
   0059                     218 _vSpi_ReadDataSpi1:
   0059 E5 82               219 	mov	a,dpl
   005B 90s00r08            220 	mov	dptr,#_vSpi_ReadDataSpi1_length_1_36
   005E F0                  221 	movx	@dptr,a
                    005F    222 	C$spi_wrapper.c$84$1$37 ==.
                            223 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\spi_wrapper.c:84: while (length--)
   005F 90s00r05            224 	mov	dptr,#_vSpi_ReadDataSpi1_PARM_2
   0062 E0                  225 	movx	a,@dptr
   0063 FD                  226 	mov	r5,a
   0064 A3                  227 	inc	dptr
   0065 E0                  228 	movx	a,@dptr
   0066 FE                  229 	mov	r6,a
   0067 A3                  230 	inc	dptr
   0068 E0                  231 	movx	a,@dptr
   0069 FF                  232 	mov	r7,a
   006A 90s00r08            233 	mov	dptr,#_vSpi_ReadDataSpi1_length_1_36
   006D E0                  234 	movx	a,@dptr
   006E FC                  235 	mov	r4,a
   006F                     236 00101$:
   006F 8C 03               237 	mov	ar3,r4
   0071 1C                  238 	dec	r4
   0072 90s00r08            239 	mov	dptr,#_vSpi_ReadDataSpi1_length_1_36
   0075 EC                  240 	mov	a,r4
   0076 F0                  241 	movx	@dptr,a
   0077 EB                  242 	mov	a,r3
   0078 60 29               243 	jz	00108$
                    007A    244 	C$spi_wrapper.c$86$2$38 ==.
                            245 ;	C:\Users\TaisikHam\Documents\GitHub\ChibiOS\testhal\STM32F30x\TS_SPI\EZRadio\EZRADIO_SI4X55\spi_wrapper.c:86: *pData++ = Comm_IF_Spi1ReadWrite(0xFF);
   007A 75 82 FF            246 	mov	dpl,#0xFF
   007D C0 07               247 	push	ar7
   007F C0 06               248 	push	ar6
   0081 C0 05               249 	push	ar5
   0083 C0 04               250 	push	ar4
   0085 12s00r00            251 	lcall	_Comm_IF_Spi1ReadWrite
   0088 AB 82               252 	mov	r3,dpl
   008A D0 04               253 	pop	ar4
   008C D0 05               254 	pop	ar5
   008E D0 06               255 	pop	ar6
   0090 D0 07               256 	pop	ar7
   0092 8D 82               257 	mov	dpl,r5
   0094 8E 83               258 	mov	dph,r6
   0096 8F F0               259 	mov	b,r7
   0098 EB                  260 	mov	a,r3
   0099 12s00r00            261 	lcall	__gptrput
   009C A3                  262 	inc	dptr
   009D AD 82               263 	mov	r5,dpl
   009F AE 83               264 	mov	r6,dph
   00A1 80 CC               265 	sjmp	00101$
   00A3                     266 00108$:
   00A3 90s00r08            267 	mov	dptr,#_vSpi_ReadDataSpi1_length_1_36
   00A6 EC                  268 	mov	a,r4
   00A7 F0                  269 	movx	@dptr,a
                    00A8    270 	C$spi_wrapper.c$88$1$37 ==.
                    00A8    271 	XG$vSpi_ReadDataSpi1$0$0 ==.
   00A8 22                  272 	ret
                            273 	.area CSEG    (CODE)
                            274 	.area CONST   (CODE)
                            275 	.area XINIT   (CODE)
                            276 	.area CABS    (ABS,CODE)
